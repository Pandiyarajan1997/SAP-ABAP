
*&---------------------------------------------------------------------*
*& Report  ZSD_PRODUCT_MONTHWISE
*&
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&Functional                   : Mr.Govindarajan M                     *
*& Developer                   : Mr.Savariar M                         *
*& Created On                  :                                       *
*& Company                     : Sheenlac Paints Pvt Ltd               *
*& Verified By                 :                                       *
*& Title                       : Product Spread Material Group Report  *
*& Report Name                 : ZSD_PROT_SPREAD                       *
*& Development Id              : kpabap                                *
*& Related Information         : Product Spread Material Group Report  *
*&---------------------------------------------------------------------*
REPORT ZSD_PROT_SPREAD.

DATA:
      W_AUX_FKDAT TYPE VBRK-FKDAT,
      W_FKART TYPE VBRK-FKART,
      W_VBELN TYPE VBRK-VBELN,
      W_KUNAG TYPE VBRK-KUNAG,
      W_MATNR TYPE VBRP-MATNR,
      W_MVGR1 TYPE MVKE-MVGR1,
      W_CHARG TYPE LIPS-CHARG,                               " BATCH FOR INVOICE DETAILS
      W_INV_VKBUR TYPE VBRP-VKBUR,                           " SALES OFFICE FOR INVOICE
      W_SPART TYPE VBRK-SPART,
      W_PERNR TYPE PA0002-PERNR,

      COUNTER TYPE I VALUE '0',
      GT_LIST     TYPE VRM_VALUES,
      GWA_LIST    TYPE VRM_VALUE,
      GT_VALUES   TYPE TABLE OF DYNPREAD,                     " INTERNAL TABLE FOR LIST BOX
      GWA_VALUES  TYPE DYNPREAD,                              " WORK AREA FOR LIST BOX
      GV_SELECTED_VALUE(10) TYPE C,
      IT_FIELDCAT  TYPE TABLE OF SLIS_FIELDCAT_ALV,
      WA_FIELDCAT  LIKE LINE OF IT_FIELDCAT,
      IT_SORT TYPE SLIS_T_SORTINFO_ALV,
      WA_SORT LIKE LINE OF IT_SORT,
      G_SENT_TO_ALL TYPE SONV-FLAG,
      G_TAB_LINES   TYPE I,


      W_KUNNR TYPE KNC1-KUNNR,
      W_BUKRS TYPE KNC1-BUKRS,                                " VARIABLE DECLARATIONS FOR ACCOUNT BALANCES
      W_VKBUR TYPE KNVV-VKBUR,                                " SALES OFFICE FOR ACCOUNT BALANCES
*      W_GJAHR TYPE KNC1-GJAHR,
      W_RE_PERIOD TYPE BSID-MONAT,

      W_S_MATNR TYPE MARD-MATNR,                               " VARIABLE DECLARATIONS FOR STOCK
      W_S_BUKRS TYPE T001-BUKRS,
      W_S_HKONT TYPE BSEG-HKONT,
      W_S_WERKS TYPE T001W-WERKS,
      W_S_LGORT TYPE T001L-LGORT,
      W_S_CHARG TYPE MCHB-CHARG,
      W_S_BWTAR TYPE MBEW-BWTAR,
      W_S_BWART TYPE MSEG-BWART,
      W_S_DATUM TYPE MKPF-BUDAT.


DATA : LAYOUT TYPE SLIS_LAYOUT_ALV.



*--------------------------------------------------------------*
* TYPES DECLARATION
*--------------------------------------------------------------*


TYPES: BEGIN OF TY_VBRK_VBRP,                           "FINAL TABLE TYPE FOR OVERVIEW REPORT
       BUKRS TYPE VBRK-BUKRS,
       FKDAT TYPE VBRK-FKDAT,
       SPART TYPE VBRK-SPART,
       VRKME TYPE VBRP-VRKME,
       VBELN TYPE VBRK-VBELN,
       FKART TYPE VBRK-FKART,
       KUNAG TYPE VBRK-KUNAG,
       KUNRG TYPE VBRK-KUNRG,
       VKORG TYPE VBRK-VKORG,
       VTWEG TYPE VBRK-VTWEG,
       NETWR TYPE VBRK-NETWR,
       SFAKN TYPE VBRK-SFAKN,
       KNKLI TYPE VBRK-KNKLI,
       MWSBK TYPE VBRK-MWSBK,
       FKSTO TYPE VBRK-FKSTO,
       POSNR TYPE VBRP-POSNR,
       VKBUR TYPE VBRP-VKBUR,
       MATNR TYPE VBRP-MATNR,
       FKIMG TYPE VBRP-FKIMG,
       VOLUM TYPE VBRP-VOLUM,
       VGBEL TYPE VBRP-VGBEL,
       END OF TY_VBRK_VBRP,

       BEGIN OF TY_TVKBT,
       VKBUR TYPE TVKBT-VKBUR,
       BEZEI TYPE TVKBT-BEZEI,
       END OF TY_TVKBT,

       BEGIN OF TY_TSPAT,
       SPART TYPE TSPAT-SPART,
       VTEXT TYPE TSPAT-VTEXT,
       END OF TY_TSPAT,

       BEGIN OF TY_KNA1,
       KUNNR TYPE KNA1-KUNNR,
       NAME1 TYPE KNA1-NAME1,
       NAME2 TYPE KNA1-NAME2,
       REGIO TYPE KNA1-REGIO,
       END OF TY_KNA1,

       BEGIN OF TY_MARM,
       MATNR TYPE MARM-MATNR,
       MEINH TYPE MARM-MEINH,
       UMREZ TYPE MARM-UMREZ,
       UMREN TYPE MARM-UMREN,
       END OF TY_MARM,

 BEGIN OF GS_T005U ,
       BLAND TYPE T005U-BLAND ,
       BEZEI TYPE T005U-BEZEI ,                     "REGION
       END OF GS_T005U ,

       BEGIN OF TY_FINOVR,                           "FINAL TABLE TYPE FOR OVERVIEW REPORT
       FKDAT TYPE VBRK-FKDAT,
       VKBUR TYPE VBRP-VKBUR,
       KUNRG TYPE VBRK-KUNAG,
       SPART TYPE VBRK-SPART,
       VBELN TYPE VBRK-VBELN,

       MVGR1 TYPE MVKE-MVGR1,  "Apr
       MVGR2 TYPE MVKE-MVGR1,  "MAY
       MVGR3 TYPE MVKE-MVGR1,  "June
       MVGR4 TYPE MVKE-MVGR1,  "July
       MVGR5 TYPE MVKE-MVGR1,  "August
       MVGR6 TYPE MVKE-MVGR1,  "Sep
       MVGR7 TYPE MVKE-MVGR1,  "Oct
       MVGR8 TYPE MVKE-MVGR1,  "Nov
       MVGR9 TYPE MVKE-MVGR1,  "Dec
       MVGR10 TYPE MVKE-MVGR1,  "Jan
       MVGR11 TYPE MVKE-MVGR1,  "Feb
       MVGR12 TYPE MVKE-MVGR1,  "Mar

       MVGRMAY TYPE MVKE-MVGR1,  "mAY


       GBEZEI TYPE TVM1T-BEZEI,
       MATNR TYPE MARA-MATNR,
       MAKTX TYPE MAKT-MAKTX,
       CANDOC(1) TYPE C,
       FKART TYPE VBRK-FKART,
       KUNAG TYPE VBRK-KUNAG,

       KUNNR TYPE KNA1-KUNNR,    "Apr
       KUNNR1 TYPE KNA1-KUNNR,   "May
       KUNNR2 TYPE KNA1-KUNNR,   "June
       KUNNR3 TYPE KNA1-KUNNR,   "July
       KUNNR4 TYPE KNA1-KUNNR,   "August
       KUNNR5 TYPE KNA1-KUNNR,   "Sep
       KUNNR6 TYPE KNA1-KUNNR,   "Oct
       KUNNR7 TYPE KNA1-KUNNR,   "Nov
       KUNNR8 TYPE KNA1-KUNNR,   "Dec
       KUNNR9 TYPE KNA1-KUNNR,   "Jan
       KUNNR10 TYPE KNA1-KUNNR,   "Feb

       KUNNR11 TYPE KNA1-KUNNR,   "Mar

       VKORG TYPE VBRK-VKORG,
       VTWEG TYPE VBRK-VTWEG,
       SFAKN TYPE VBRK-SFAKN,
       KNKLI TYPE VBRK-KNKLI,
       MWSBK TYPE VBRK-MWSBK,
       FKSTO TYPE VBRK-FKSTO,
       BTGEW TYPE LIKP-BTGEW,
       INV_VAL TYPE NETWR,
       POSNR TYPE VBRP-POSNR,
       FKIMG TYPE VBRP-FKIMG,
       VFKIMG TYPE  VBRP-FKIMG,
       NETWR TYPE VBRP-NETWR,
       VNETWR TYPE  VBRP-NETWR,
       BEZEI TYPE TVKBT-BEZEI,
       VTEXT TYPE TSPAT-VTEXT,
       NAME1 TYPE KNA1-NAME1,
       NAME2 TYPE KNA1-NAME2,
       M_VOLUM TYPE MARA-VOLUM,

      PERNR TYPE KNVP-PERNR,   "APr
      PERNR1 TYPE KNVP-PERNR,  "May
      PERNR2 TYPE KNVP-PERNR,  "June
      PERNR3 TYPE KNVP-PERNR,  "July
      PERNR4 TYPE KNVP-PERNR,  "August
      PERNR5 TYPE KNVP-PERNR,  "Sep
      PERNR6 TYPE KNVP-PERNR,  "Oct
      PERNR7 TYPE KNVP-PERNR,  "Nov
      PERNR8 TYPE KNVP-PERNR,  "Dec
      PERNR9 TYPE KNVP-PERNR,  "Jan
      PERNR10 TYPE KNVP-PERNR,  "Feb

      PERNR11 TYPE KNVP-PERNR,  "Mar

      SO_NAME TYPE PA0002-VORNA,  " SO Name

       QTY_LTR TYPE P DECIMALS 2,
       V_COUNT TYPE I,
       FLAG(1) TYPE C,
       N_MONTH TYPE  T009B-POPER,
         " Qty
       QTY0 TYPE P DECIMALS 2,     " APR
       QTY1 TYPE P DECIMALS 2,        "MAY
       QTY2 TYPE P   DECIMALS 2,   " JUNE
       QTY3 TYPE P DECIMALS 2,  " JULY
       QTY4 TYPE P DECIMALS 2,     " AUG
       QTY5 TYPE P DECIMALS 2,        "SEP
       QTY6 TYPE P   DECIMALS 2,   " OCT
       QTY7 TYPE P DECIMALS 2,  " NOV
       QTY8 TYPE P DECIMALS 2,     " DEC
       QTY9 TYPE P DECIMALS 2,        "JAN
       QTY10 TYPE P   DECIMALS 2,   " FEB
       QTY11 TYPE P DECIMALS 2,  " MAR

       VOL0 TYPE P DECIMALS 2,     " APR
       VOL1 TYPE P DECIMALS 2,        "MAY
       VOL2 TYPE P   DECIMALS 2,   " JUNE
       VOL3 TYPE P DECIMALS 2,  " JULY
       VOL4 TYPE P DECIMALS 2,     " AUG
       VOL5 TYPE P DECIMALS 2,        "SEP
       VOL6 TYPE P   DECIMALS 2,   " OCT
       VOL7 TYPE P DECIMALS 2,  " NOV
       VOL8 TYPE P DECIMALS 2,     " DEC
       VOL9 TYPE P DECIMALS 2,        "JAN
       VOL10 TYPE P   DECIMALS 2,   " FEB
       VOL11 TYPE P DECIMALS 2,  " MAR
       AMT0 TYPE P DECIMALS 2,     " APR
       AMT1 TYPE P DECIMALS 2,        "MAY
       AMT2 TYPE P   DECIMALS 2,   " JUNE
       AMT3 TYPE P DECIMALS 2,  " JULY
       AMT4 TYPE P DECIMALS 2,     " AUG
       AMT5 TYPE P DECIMALS 2,        "SEP
       AMT6 TYPE P   DECIMALS 2,   " OCT
       AMT7 TYPE P DECIMALS 2,  " NOV
       AMT8 TYPE P DECIMALS 2,     " DEC
       AMT9 TYPE P DECIMALS 2,        "JAN
       AMT10 TYPE P   DECIMALS 2,   " FEB
       AMT11 TYPE P DECIMALS 2,  " MAR
       VOLUM TYPE MARA-VOLUM,
       AVOLUM TYPE P DECIMALS 2,

      " ***** This is for Apr

       FINAPR_VAL TYPE P DECIMALS 2,
       V_MATAPCOUNT1 TYPE I,
       V_CUSTCOUNT1 TYPE I,
       APRCUSTCOUNT TYPE P DECIMALS 0,
       V_APRCOUNT TYPE I,


       "******  This is for May

        FINMAY_VAL TYPE P DECIMALS 2,
        V_MATMAYCOUNT1 TYPE I,
        V_CUSTCOUNT2 TYPE I,
        MAYCUSTCOUNT TYPE P DECIMALS 0,
        V_MAYCOUNT TYPE I,

        "******  This is for June

        FINJUN_VAL TYPE P DECIMALS 2,
        V_MATJUNCOUNT1 TYPE I,
        V_CUSTCOUNT3 TYPE I,
        JUNCUSTCOUNT TYPE P DECIMALS 0,
        V_JUNCOUNT TYPE I,

        "******  This is for June
         FINJULY_VAL TYPE P DECIMALS 2,
         V_MATJULYCOUNT1 TYPE I,
         V_CUSTCOUNT4 TYPE I,
         JULYCUSTCOUNT TYPE P DECIMALS 0,
         V_JULYCOUNT TYPE I,

         "******  This is for   August
         FINAUG_VAL TYPE P DECIMALS 2,
         V_MATAUGCOUNT1 TYPE I,
         V_CUSTCOUNT5 TYPE I,
         AUGCUSTCOUNT TYPE P DECIMALS 0,
         V_AUGCOUNT TYPE I,

         "******  This is for   Sep

         FINSEP_VAL TYPE P DECIMALS 2,
         V_MATSEPCOUNT1 TYPE I,
         V_CUSTCOUNT6 TYPE I,
         SEPCUSTCOUNT TYPE P DECIMALS 0,
         V_SEPCOUNT TYPE I,

         "******  This is for  OCT

         FINOCT_VAL TYPE P DECIMALS 2,
         V_MATOCTCOUNT1 TYPE I,
         V_CUSTCOUNT7 TYPE I,
         OCTCUSTCOUNT TYPE P DECIMALS 0,
         V_OCTCOUNT TYPE I,

         "******  This is for Nov

         FINNOV_VAL TYPE P DECIMALS 2,
         V_MATNOVCOUNT1 TYPE I,
         V_CUSTCOUNT8 TYPE I,
         NOVCUSTCOUNT TYPE P DECIMALS 0,
         V_NOVCOUNT TYPE I,

        "******  This is for Dec

         FINDEC_VAL TYPE P DECIMALS 2,
         V_MATDECCOUNT1 TYPE I,
         V_CUSTCOUNT9 TYPE I,
         DECCUSTCOUNT TYPE P DECIMALS 0,
         V_DECCOUNT TYPE I,

        "******  This is for Jan

         FINJAN_VAL TYPE P DECIMALS 2,
         V_MATJANCOUNT1 TYPE I,
         V_CUSTCOUNT10 TYPE I,
         JANCUSTCOUNT TYPE P DECIMALS 0,
         V_JANCOUNT TYPE I,


      "******  This is for Feb

         FINFEB_VAL TYPE P DECIMALS 2,
         V_MATFEBCOUNT1 TYPE I,
         V_CUSTCOUNT11 TYPE I,
         FEBCUSTCOUNT TYPE P DECIMALS 0,
         V_FEBCOUNT TYPE I,


      "******  This is for MAR

         FINMAR_VAL TYPE P DECIMALS 2,
         V_MATMARCOUNT1 TYPE I,
         V_CUSTCOUNT12 TYPE I,
         MARCUSTCOUNT TYPE P DECIMALS 0,
         V_MARCOUNT TYPE I,


      APRCUSTCOUNT1 TYPE P DECIMALS 0,
      MAYCUSTCOUNT1 TYPE P DECIMALS 0,
      JUNCUSTCOUNT1 TYPE P DECIMALS 0,
      JULYCUSTCOUNT1 TYPE P DECIMALS 0,
      AUGCUSTCOUNT1 TYPE P DECIMALS 0,
      SEPCUSTCOUNT1 TYPE P DECIMALS 0,
      OCTCUSTCOUNT1 TYPE P DECIMALS 0,
      NOVCUSTCOUNT1 TYPE P DECIMALS 0,
      DECCUSTCOUNT1 TYPE P DECIMALS 0,
      JANCUSTCOUNT1 TYPE P DECIMALS 0,
      FEBCUSTCOUNT1 TYPE P DECIMALS 0,
      MARCUSTCOUNT1 TYPE P DECIMALS 0,

      TARGET TYPE P DECIMALS 2,
      PLAN TYPE P DECIMALS 2,
      PLAN1 TYPE P DECIMALS 2,
      PLAN2 TYPE P DECIMALS 2,

      JANACH TYPE P DECIMALS 2,
      FEBACH TYPE P DECIMALS 2,
      MARACH TYPE P DECIMALS 2,

      JANACH1 TYPE P DECIMALS 2,
      FEBACH1 TYPE P DECIMALS 2,
      MARACH1 TYPE P DECIMALS 2,

      TARGET1 TYPE P DECIMALS 2,
      TARGET2 TYPE P DECIMALS 2,

      FINTARGET TYPE P DECIMALS 2,


       END OF TY_FINOVR.

TYPES: BEGIN OF TY_TVKBT2,
    VKBUR TYPE TVKBT-VKBUR,
    BEZEI TYPE TVKBT-BEZEI,
    END OF TY_TVKBT2,

BEGIN OF TY_TSPAT2,
    SPART TYPE TSPAT-SPART,
    VTEXT TYPE TSPAT-VTEXT,
    END OF TY_TSPAT2,


BEGIN OF TY_VBRP,
       VBELN TYPE VBRP-VBELN,
      POSNR TYPE VBRP-POSNR,
      FKIMG TYPE VBRP-FKIMG,
      VOLUM TYPE VBRP-VOLUM,
      MATNR TYPE VBRP-MATNR,
      NETWR TYPE VBRP-NETWR,
      END OF TY_VBRP,

BEGIN OF TY_MARA,
  MATNR TYPE MARA-MATNR,
  VOLUM TYPE MARA-VOLUM,
  VOLEH TYPE MARA-VOLEH,
  END OF TY_MARA,

BEGIN OF TY_MAKT,
MATNR TYPE MAKT-MATNR,
MAKTX TYPE MAKT-MAKTX,
END OF TY_MAKT,

BEGIN OF TY_MARC ,
 MATNR TYPE MARC-MATNR,
 WERKS TYPE MARC-WERKS,
 END OF TY_MARC,

BEGIN OF TY_MVKE ,
 MATNR TYPE MVKE-MATNR,
 MVGR1 TYPE MVKE-MVGR1,
 END OF TY_MVKE,

 BEGIN OF TY_TVM1T ,
 MVGR1 TYPE TVM1T-MVGR1,
 BEZEI TYPE TVM1T-BEZEI,
 END OF TY_TVM1T,

BEGIN OF TY_VDRK2,
FKDAT TYPE VBRK-FKDAT,
VBELN TYPE VBRP-VBELN,
LPOSNR TYPE LIPS-POSNR,
MATNR TYPE VBRP-MATNR,
MAKTX TYPE MAKT-MAKTX,
FKIMG TYPE VBRP-FKIMG,
VGPOS TYPE VBRP-VGPOS,
VOLUM TYPE VBRP-VOLUM,
VOLEH TYPE VBRP-VOLEH,
PSTYV TYPE LIPS-PSTYV,
SPART TYPE  VBRK-SPART,
NETWR TYPE VBRK-NETWR,
KUNAG TYPE VBRK-KUNAG,
KUNRG TYPE VBRK-KUNRG,
SFAKN TYPE VBRK-SFAKN,
FKSTO TYPE VBRK-FKSTO,
POSNR TYPE VBRP-POSNR,
ARKTX TYPE VBRP-ARKTX,
VRKME TYPE VBRP-VRKME,
VGBEL TYPE VBRP-VGBEL,
VKBUR TYPE VBRP-VKBUR,
LMATNR TYPE LIPS-MATNR,
LVBELN TYPE LIPS-VBELN,
LFIMG TYPE LIPS-LFIMG,
CHARG TYPE LIPS-CHARG,
DEL_FLAG(1) TYPE C,
PROC_KEY(1) TYPE C,

END OF TY_VDRK2.


DATA : LV_COUNT TYPE I,
       V_COUNT TYPE I.


*--------------------------------------------------------------*
*INTERNAL TABLE DECLARATIONS
*--------------------------------------------------------------*



TYPES : BEGIN OF GS_PA0002,

       PERNR TYPE PA0002-PERNR, " Personnel no.
       NACHN TYPE PA0002-NACHN, " Last Name
       VORNA TYPE PA0002-VORNA, " First name

    END OF GS_PA0002.

DATA : GT_PA0002 TYPE TABLE OF GS_PA0002,
       WA_PA0002 TYPE GS_PA0002.


TYPES : BEGIN OF GS_KNVP,
        KUNNR TYPE KNVP-KUNNR,
        PARVW TYPE KNVP-PARVW,
        PERNR TYPE KNVP-PERNR,
        END OF GS_KNVP.

DATA : GT_KNVP TYPE TABLE OF GS_KNVP,
        WA_KNVP TYPE GS_KNVP.

TYPES : BEGIN OF GS_MATGRP,

        WERKS TYPE ZMATGRP_PERN-WERKS,
        MVGR1 TYPE ZMATGRP_PERN-MVGR1,
        PERCENTAGE TYPE ZMATGRP_PERN-PERCENTAGE,

         END OF GS_MATGRP.

DATA : GT_MATGRP TYPE TABLE OF GS_MATGRP,
       WA_MATGRP TYPE GS_MATGRP.

TYPES : BEGIN OF GS_MATGRPPLAN,

        MONTH1 TYPE ZMATGRP_PLAN-MONTH1,
        PERCENTAGE TYPE ZMATGRP_PLAN-PERCENTAGE,

         END OF GS_MATGRPPLAN.

DATA : GT_MATGRPPLAN TYPE TABLE OF GS_MATGRPPLAN,
       WA_MATGRPPLAN TYPE GS_MATGRPPLAN.

TYPES : BEGIN OF GS_FINAL,

       MVGR0 TYPE MVKE-MVGR1,
       MVGR1 TYPE MVKE-MVGR1,
       VKBUR TYPE VBRP-VKBUR,
       GBEZEI TYPE TVM1T-BEZEI,
       BEZEI TYPE TVKBT-BEZEI,
       PERNR TYPE KNVP-PERNR,
       SO_NAME TYPE PA0002-VORNA,

       APRCUSTCOUNT TYPE P DECIMALS 0,
       MAYCUSTCOUNT TYPE P DECIMALS 0,
       JUNCUSTCOUNT TYPE P DECIMALS 0,
       JULYCUSTCOUNT TYPE P DECIMALS 0,
       AUGCUSTCOUNT TYPE P DECIMALS 0,
       SEPCUSTCOUNT TYPE P DECIMALS 0,
       OCTCUSTCOUNT TYPE P DECIMALS 0,
       NOVCUSTCOUNT TYPE P DECIMALS 0,
       DECCUSTCOUNT TYPE P DECIMALS 0,
       JANCUSTCOUNT TYPE P DECIMALS 0,
       FEBCUSTCOUNT TYPE P DECIMALS 0,
       MARCUSTCOUNT TYPE P DECIMALS 0,

       FINAPR_VAL TYPE P DECIMALS 0,
       FINMAY_VAL TYPE P DECIMALS 0,
       FINJUN_VAL TYPE P DECIMALS 0,
       FINJULY_VAL TYPE P DECIMALS 0,
       FINAUG_VAL TYPE P DECIMALS 0,
       FINSEP_VAL TYPE P DECIMALS 0,
       FINOCT_VAL TYPE P DECIMALS 0,
       FINNOV_VAL TYPE P DECIMALS 0,
       FINDEC_VAL TYPE P DECIMALS 0,
       FINJAN_VAL TYPE P DECIMALS 0,
       FINFEB_VAL TYPE P DECIMALS 0,
       FINMAR_VAL TYPE P DECIMALS 0,

       FINAPR_AVG TYPE P DECIMALS 0,
       FINMAY_AVG TYPE P DECIMALS 0,
       FINJUN_AVG TYPE P DECIMALS 0,
       FINJULY_AVG TYPE P DECIMALS 0,
       FINAUG_AVG TYPE P DECIMALS 0,
       FINSEP_AVG TYPE P DECIMALS 0,
       FINOCT_AVG TYPE P DECIMALS 0,
       FINNOV_AVG TYPE P DECIMALS 0,
       FINDEC_AVG TYPE P DECIMALS 0,
       FINJAN_AVG TYPE P DECIMALS 0,
       FINFEB_AVG TYPE P DECIMALS 0,
       FINMAR_AVG TYPE P DECIMALS 0,

       APRV TYPE P DECIMALS 0,
       MAYV TYPE P DECIMALS 0,
       JUNV TYPE P DECIMALS 0,
       JULYV TYPE P DECIMALS 0,
       AUGV TYPE P DECIMALS 0,
       SEPV TYPE P DECIMALS 0,
       OCTV TYPE P DECIMALS 0,
       NOVV TYPE P DECIMALS 0,
       DECV TYPE P DECIMALS 0,
       JANV TYPE P DECIMALS 0,
       FRBV TYPE P DECIMALS 0,
       MARV TYPE P DECIMALS 0,



       TARGET TYPE P DECIMALS 2,
       TARGET1 TYPE P DECIMALS 2,
       TARGET2 TYPE P DECIMALS 2,
       FINTARGET TYPE P DECIMALS 2,

       PLAN TYPE P DECIMALS 2,
       PLAN1 TYPE P DECIMALS 2,
       PLAN2 TYPE P DECIMALS 2,

       JANACH TYPE P DECIMALS 2,
       FEBACH TYPE P DECIMALS 2,
       MARACH TYPE P DECIMALS 2,

       JANACH1 TYPE P DECIMALS 2,
       FEBACH1 TYPE P DECIMALS 2,
       MARACH1 TYPE P DECIMALS 2,

       PERCENTAGE TYPE ZMATGRP_PERN-PERCENTAGE,

       PERCENPLAN TYPE ZMATGRP_PLAN-PERCENTAGE,

   END OF GS_FINAL.

DATA : GT_FINAL TYPE TABLE OF GS_FINAL,
       WA_FINAL TYPE GS_FINAL.



DATA : LV_SUM TYPE VBRP-FKIMG.
DATA : LV_SUM1 TYPE VBRP-FKIMG.
DATA : LV_SUM2 TYPE VBRP-FKIMG.

DATA : TARGET TYPE VBRP-FKIMG.
DATA : TARGET1 TYPE VBRP-FKIMG.
DATA : TARGET2 TYPE VBRP-FKIMG.
DATA : FINTARGET TYPE VBRP-FKIMG.

DATA : PLAN TYPE VBRP-FKIMG.
DATA : PLAN1 TYPE VBRP-FKIMG.
DATA : PLAN2 TYPE VBRP-FKIMG.

DATA : JANACH TYPE VBRP-FKIMG.
DATA : FEBACH TYPE VBRP-FKIMG.
DATA : MARACH TYPE VBRP-FKIMG.

DATA : JANACH1 TYPE VBRP-FKIMG.
DATA : FEBACH1 TYPE VBRP-FKIMG.
DATA : MARACH1 TYPE VBRP-FKIMG.

DATA: LV_MATAPCOUNT1 TYPE I VALUE 0.
DATA: LV_CUSTCOUNT1 TYPE I VALUE 0.
DATA: LV_APRCOUNT TYPE I VALUE 0.

DATA: LV_MATMAYCOUNT1 TYPE I VALUE 0.
DATA: LV_CUSTCOUNT2 TYPE I VALUE 0.
DATA: LV_MAYCOUNT TYPE I VALUE 0.

DATA: LV_MATJUNCOUNT1 TYPE I VALUE 0.
DATA: LV_CUSTCOUNT3 TYPE I VALUE 0.
DATA: LV_JUNCOUNT TYPE I VALUE 0.

DATA: LV_MATJULYCOUNT1 TYPE I VALUE 0.
DATA: LV_CUSTCOUNT4 TYPE I VALUE 0.
DATA: LV_JULYCOUNT TYPE I VALUE 0.

DATA: LV_MATAUGCOUNT1 TYPE I VALUE 0.
DATA: LV_CUSTCOUNT5 TYPE I VALUE 0.
DATA: LV_AUGCOUNT TYPE I VALUE 0.

DATA: LV_MATSEPCOUNT1 TYPE I VALUE 0.
DATA: LV_CUSTCOUNT6 TYPE I VALUE 0.
DATA: LV_SEPCOUNT TYPE I VALUE 0.

DATA: LV_MATOCTCOUNT1 TYPE I VALUE 0.
DATA: LV_CUSTCOUNT7 TYPE I VALUE 0.
DATA: LV_OCTCOUNT TYPE I VALUE 0.

DATA: LV_MATNOVCOUNT1 TYPE I VALUE 0.
DATA: LV_CUSTCOUNT8 TYPE I VALUE 0.
DATA: LV_NOVCOUNT TYPE I VALUE 0.

DATA: LV_MATDECCOUNT1 TYPE I VALUE 0.
DATA: LV_CUSTCOUNT9 TYPE I VALUE 0.
DATA: LV_DECCOUNT TYPE I VALUE 0.

DATA: LV_MATJANCOUNT1 TYPE I VALUE 0.
DATA: LV_CUSTCOUNT10 TYPE I VALUE 0.
DATA: LV_JANCOUNT TYPE I VALUE 0.

DATA: LV_MATFEBCOUNT1 TYPE I VALUE 0.
DATA: LV_CUSTCOUNT11 TYPE I VALUE 0.
DATA: LV_FEBCOUNT TYPE I VALUE 0.

DATA: LV_MATMARCOUNT1 TYPE I VALUE 0.
DATA: LV_CUSTCOUNT12 TYPE I VALUE 0.
DATA: LV_MARCOUNT TYPE I VALUE 0.

DATA: LV_TARGET TYPE P DECIMALS 2.
DATA: LV_TARGET1 TYPE P DECIMALS 2.
DATA: LV_TARGET2 TYPE P DECIMALS 2.

DATA: APRV1 TYPE P DECIMALS 0.
DATA: MAYV1 TYPE P DECIMALS 0.
DATA: JUNV1 TYPE P DECIMALS 0.
DATA: JULYV1 TYPE P DECIMALS 0.
DATA: AUGV1 TYPE P DECIMALS 0.
DATA: SEPV1 TYPE P DECIMALS 0.
DATA: OCTV1 TYPE P DECIMALS 0.
DATA: NOVV1 TYPE P DECIMALS 0.
DATA: DECV1 TYPE P DECIMALS 0.
DATA: JANV1 TYPE P DECIMALS 0.
DATA: FRBV1 TYPE P DECIMALS 0.
DATA: MARV1 TYPE P DECIMALS 0.


DATA: IT_VBRK TYPE TABLE OF TY_VBRK_VBRP,
IT_TVKBT TYPE TABLE OF TY_TVKBT,
IT_TSPAT  TYPE TABLE OF TY_TSPAT,
GT_KNA1 TYPE TABLE OF TY_KNA1,
IT_MARA TYPE TABLE OF TY_MARA,
IT_MARC TYPE TABLE OF TY_MARC,
IT_MVKE TYPE TABLE OF TY_MVKE,
IT_TVM1T TYPE TABLE OF TY_TVM1T,
 GT_T005U TYPE TABLE OF GS_T005U ,
IT_VBRK2 TYPE TABLE OF TY_VDRK2,
IT_TVKBT2 TYPE TABLE OF TY_TVKBT2,
IT_TSPAT2  TYPE TABLE OF TY_TSPAT2,
IT_MARM TYPE TABLE OF TY_MARM,
GT_MAKT TYPE TABLE OF TY_MAKT,
IT_VBRP TYPE TABLE OF TY_VBRP,
IT_FINOVR TYPE TABLE OF TY_FINOVR,
IT1_FINOVR TYPE TABLE OF TY_FINOVR.


*--------------------------------------------------------------*
*WORK AREA DECLARATIONS
*--------------------------------------------------------------*

DATA: WA_VBRK TYPE TY_VBRK_VBRP,
      WA_TVKBT TYPE  TY_TVKBT,
      WA_TSPAT  TYPE TY_TSPAT,
      WA_KNA1 TYPE TY_KNA1,
      WA_MARA TYPE TY_MARA,
      WA_MARC TYPE TY_MARC,
      WA_MVKE TYPE TY_MVKE,
      WA_TVM1T TYPE TY_TVM1T,
      WA_MAKT TYPE TY_MAKT,
      WA_T005U TYPE GS_T005U,
      WA_VBRK2 TYPE TY_VDRK2,
      WA_TVKBT2 TYPE  TY_TVKBT2,
      WA_TSPAT2  TYPE TY_TSPAT2,

      WA_FINOVR LIKE LINE OF IT_FINOVR,
      WA1_FINOVR LIKE LINE OF IT_FINOVR,
      WA_MARM LIKE LINE OF IT_MARM,
      WA_VBRP LIKE LINE OF IT_VBRP.

DATA: NO_MONTH TYPE T009B-POPER,
      D_YEAR  TYPE T009B-BDATJ.

DATA : LV_BUKRS TYPE VBRK-BUKRS.
DATA : LV_VKBU2 TYPE VBRK-BUKRS.



SELECTION-SCREEN: BEGIN OF BLOCK B2 WITH FRAME TITLE TEXT-T01.

SELECT-OPTIONS: SO_BUKRS FOR LV_BUKRS MODIF ID TB2 OBLIGATORY,
                SO_VKBU2 FOR W_INV_VKBUR MODIF ID TB2 OBLIGATORY,
                SO_KUNNR FOR W_KUNAG MODIF ID TB2 NO-DISPLAY,
                SO_SPART FOR W_SPART MODIF ID TB2 NO-DISPLAY ,
                SO_PERNR FOR W_PERNR MODIF ID TB2,
                SO_FKDAT FOR W_AUX_FKDAT MODIF ID TB2 DEFAULT SY-DATUM OBLIGATORY,        " SELECTION SCREEN ELEMENTS FOR INVOICE
                SO_MVGR1 FOR W_MVGR1 MODIF ID TB2 NO-DISPLAY,
                SO_MATNR FOR W_MATNR MODIF ID TB2 NO-DISPLAY.

SELECTION-SCREEN SKIP.

SELECTION-SCREEN: END OF BLOCK B2.


SELECTION-SCREEN: BEGIN OF BLOCK S1 WITH FRAME TITLE TEXT-001.       "Changes on 20/09/2014 by savariar
PARAMETERS:PRD_SPRD RADIOBUTTON GROUP G1 DEFAULT 'X',
           PRD_TOT RADIOBUTTON GROUP G1,
           PRD_AVG RADIOBUTTON GROUP G1.
SELECTION-SCREEN:END OF BLOCK S1.



START-OF-SELECTION.

  PERFORM DATA_RETRIEVAL_OVERVIEW.
  PERFORM AUTHCHECK_OVERVIEW.
  PERFORM BUILD_FIELDCATALOG_OVERVIEW.
  PERFORM BUILD_ALV_OVERVIEW.

*&---------------------------------------------------------------------*
*&      Form  DATA_RETRIEVAL_OVERVIEW
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM DATA_RETRIEVAL_OVERVIEW .



*  IF P_CB <> 'X'.
  SELECT    VBRK~BUKRS "#EC CI_DB_OPERATION_OK[2768887] " Added by <IT-CAR Tool> during Code Remediation
            VBRK~FKDAT
            VBRK~SPART
            VBRK~VBELN
            VBRK~FKART
            VBRK~KUNAG
            VBRK~KUNRG
            VBRK~VKORG
            VBRK~VTWEG
*            VBRK~NETWR
            VBRK~SFAKN
            VBRK~KNKLI
            VBRK~MWSBK
            VBRK~FKSTO
            VBRP~POSNR
            VBRP~VRKME
            VBRP~VKBUR
            VBRP~MATNR
            VBRP~FKIMG
            VBRP~VGBEL
            VBRP~VOLUM
            VBRP~NETWR
            INTO CORRESPONDING FIELDS OF TABLE IT_VBRK
            FROM VBRK JOIN VBRP ON VBRK~VBELN = VBRP~VBELN "#EC CI_DB_OPERATION_OK[2768887] " Added by <IT-CAR Tool> during Code Remediation
            WHERE VBRK~FKDAT IN SO_FKDAT  AND MATNR IN SO_MATNR
    AND VBRP~VKBUR IN SO_VKBU2  AND VBRK~KUNAG IN SO_KUNNR AND
   VBRK~FKSTO <> 'X' AND VBRK~BUKRS IN SO_BUKRS AND VBRK~SPART IN SO_SPART AND VBRK~FKART NOT IN ('S1','YBRE','S2','JEX','F1','F2').

*  DELETE ADJACENT DUPLICATES FROM IT_VBRK COMPARING VBELN MATNR.

  IF IT_VBRK IS NOT INITIAL.

    SELECT  KUNNR
           NAME1
           NAME2
           REGIO FROM KNA1 INTO TABLE GT_KNA1 FOR ALL ENTRIES IN IT_VBRK WHERE KUNNR = IT_VBRK-KUNAG.

    SELECT MATNR VOLUM VOLEH FROM MARA
      INTO  TABLE IT_MARA FOR ALL ENTRIES IN IT_VBRK WHERE MATNR = IT_VBRK-MATNR  .


    SELECT MATNR WERKS FROM MARC
      INTO  TABLE IT_MARC FOR ALL ENTRIES IN IT_VBRK WHERE MATNR = IT_VBRK-MATNR AND WERKS = IT_VBRK-VKBUR .

    SELECT                                  "ADDED BY RAM
      MATNR
      MVGR1
         FROM MVKE INTO TABLE IT_MVKE FOR ALL ENTRIES IN IT_MARC WHERE MATNR = IT_MARC-MATNR AND MVGR1 IN SO_MVGR1.

    SELECT
      MVGR1
      BEZEI
        FROM TVM1T INTO TABLE IT_TVM1T FOR ALL ENTRIES IN IT_MVKE WHERE MVGR1 = IT_MVKE-MVGR1 .

    SELECT MATNR MAKTX  FROM MAKT
    INTO TABLE GT_MAKT FOR ALL ENTRIES IN IT_MARA WHERE MATNR = IT_MARA-MATNR .

    SELECT VKBUR
           BEZEI
           FROM TVKBT INTO TABLE IT_TVKBT
           FOR ALL ENTRIES IN IT_VBRK
           WHERE VKBUR = IT_VBRK-VKBUR
           AND SPRAS = 'EN'.

    "SAVARI

    SELECT
     KUNNR
     PARVW
     PERNR
   FROM
    KNVP INTO TABLE GT_KNVP FOR ALL ENTRIES IN IT_VBRK WHERE KUNNR = IT_VBRK-KUNRG AND PERNR IN SO_PERNR AND PERNR NE 0.


  ENDIF.



  IF GT_KNVP[] IS NOT INITIAL.

    SELECT
       PERNR
       NACHN
       VORNA
     FROM
      PA0002 INTO TABLE GT_PA0002 FOR ALL ENTRIES IN GT_KNVP WHERE PERNR = GT_KNVP-PERNR AND PERNR IN SO_PERNR.

  ENDIF.


  SELECT
   WERKS
   MVGR1
   PERCENTAGE
 FROM ZMATGRP_PERN INTO TABLE GT_MATGRP.

  SELECT
      MONTH1
      PERCENTAGE
    FROM
      ZMATGRP_PLAN INTO TABLE GT_MATGRPPLAN.



  SELECT SPART
         VTEXT
         FROM TSPAT INTO TABLE IT_TSPAT
         FOR ALL ENTRIES IN IT_VBRK
         WHERE SPART = IT_VBRK-SPART
         AND SPRAS = 'EN'.



  IF PRD_SPRD = 'X'.

    LOOP AT GT_PA0002 INTO WA_PA0002.

      LOOP AT GT_KNVP INTO WA_KNVP WHERE PERNR = WA_PA0002-PERNR AND PERNR NE 0.

        LOOP AT IT_VBRK INTO WA_VBRK WHERE  KUNAG = WA_KNVP-KUNNR.

          LOOP AT IT_MARA INTO WA_MARA WHERE MATNR = WA_VBRK-MATNR.

*        WA_FINOVR-KUNNR = WA_VBRK-KUNAG .

            WA_FINOVR-MATNR = WA_MARA-MATNR.

            WA_FINOVR-NETWR =  WA_FINOVR-NETWR + WA_VBRK-NETWR.
            WA_FINOVR-FKIMG  =   WA_FINOVR-FKIMG + WA_VBRK-FKIMG.

            CALL FUNCTION 'DATE_TO_PERIOD_CONVERT'
              EXPORTING
                I_DATE         = WA_VBRK-FKDAT
                I_MONMIT       = 00
                I_PERIV        = 'K4'
              IMPORTING
                E_BUPER        = NO_MONTH
                E_GJAHR        = D_YEAR
              EXCEPTIONS
                INPUT_FALSE    = 1
                T009_NOTFOUND  = 2
                T009B_NOTFOUND = 3
                OTHERS         = 4.

            IF NO_MONTH = '004' .
              WA_FINOVR-QTY0 =  WA_FINOVR-QTY0 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT0 =  WA_FINOVR-AMT0 + WA_VBRK-NETWR.

              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.
            ELSEIF NO_MONTH = '005'.

              WA_FINOVR-QTY1 =  WA_FINOVR-QTY1 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT1 =  WA_FINOVR-AMT1 + WA_VBRK-NETWR.

              WA_FINOVR-KUNNR1 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR1 = WA_PA0002-PERNR.
              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.

            ELSEIF NO_MONTH = '006'.
              WA_FINOVR-QTY2 =  WA_FINOVR-QTY2 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT2 =  WA_FINOVR-AMT2 + WA_VBRK-NETWR.

              WA_FINOVR-KUNNR2 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR2 = WA_PA0002-PERNR.
              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.

            ELSEIF NO_MONTH = '007'.
              WA_FINOVR-QTY3 =  WA_FINOVR-QTY3 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT3 =  WA_FINOVR-AMT3 + WA_VBRK-NETWR.

              WA_FINOVR-KUNNR3 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR3 = WA_PA0002-PERNR.
              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.

            ELSEIF NO_MONTH = '008'.
              WA_FINOVR-QTY4 =  WA_FINOVR-QTY4 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT4 = WA_FINOVR-AMT4 +  WA_VBRK-NETWR.

              WA_FINOVR-KUNNR4 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR4 = WA_PA0002-PERNR.
              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.

            ELSEIF NO_MONTH = '009'.
              WA_FINOVR-QTY5 =  WA_FINOVR-QTY5 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT5 =  WA_FINOVR-AMT5 +   WA_VBRK-NETWR.

              WA_FINOVR-KUNNR5 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR5 = WA_PA0002-PERNR.
              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.

            ELSEIF NO_MONTH = '010'.
              WA_FINOVR-QTY6 =  WA_FINOVR-QTY6 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT6 =  WA_FINOVR-AMT6 +  WA_VBRK-NETWR.

              WA_FINOVR-KUNNR6 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR6 = WA_PA0002-PERNR.

              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.

            ELSEIF NO_MONTH = '011'.
              WA_FINOVR-QTY7 =  WA_FINOVR-QTY7 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT7 =  WA_FINOVR-AMT7 + WA_VBRK-NETWR.

              WA_FINOVR-KUNNR7 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR7 = WA_PA0002-PERNR.

              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.

            ELSEIF NO_MONTH = '012'.
              WA_FINOVR-QTY8 =  WA_FINOVR-QTY8 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT8 =  WA_FINOVR-AMT8 + WA_VBRK-NETWR.

              WA_FINOVR-KUNNR8 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR8 = WA_PA0002-PERNR.

              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.

            ELSEIF NO_MONTH = '001'.
              WA_FINOVR-QTY9 =  WA_FINOVR-QTY9 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT9 = WA_FINOVR-AMT9 + WA_VBRK-NETWR.

              WA_FINOVR-KUNNR9 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR9 = WA_PA0002-PERNR.

              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.

            ELSEIF NO_MONTH = '002'.
              WA_FINOVR-QTY10 =  WA_FINOVR-QTY10 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT10 =  WA_FINOVR-AMT10 + WA_VBRK-NETWR.

              WA_FINOVR-KUNNR10 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR10 = WA_PA0002-PERNR.

              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.


            ELSEIF NO_MONTH = '003'.
              WA_FINOVR-QTY11 =  WA_FINOVR-QTY11 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT11 =  WA_FINOVR-AMT11 + WA_VBRK-NETWR.

              WA_FINOVR-KUNNR11 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR11 = WA_PA0002-PERNR.

              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.

            ENDIF.

            WA_FINOVR-FKDAT = WA_VBRK-FKDAT.
            WA_FINOVR-SPART = WA_VBRK-SPART.
            WA_FINOVR-FKART = WA_VBRK-FKART.
            WA_FINOVR-KUNAG = WA_VBRK-KUNAG.
            WA_FINOVR-KUNRG = WA_VBRK-KUNRG.
            WA_FINOVR-VKORG = WA_VBRK-VKORG.
            WA_FINOVR-VTWEG = WA_VBRK-VTWEG.
*        WA_FINOVR-NETWR =   WA_VBRK-NETWR.
            WA_FINOVR-SFAKN = WA_VBRK-SFAKN.
            WA_FINOVR-VKBUR = WA_VBRK-VKBUR.

            READ TABLE IT_MVKE INTO WA_MVKE WITH  KEY MATNR = WA_MARA-MATNR.
            IF SY-SUBRC = 0.
              IF NO_MONTH = '004' .
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '005'.
                WA_FINOVR-MVGR2 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '006'.
                WA_FINOVR-MVGR3 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '007'.
                WA_FINOVR-MVGR4 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '008'.
                WA_FINOVR-MVGR5 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '009'.
                WA_FINOVR-MVGR6 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '010'.
                WA_FINOVR-MVGR7 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '011'.
                WA_FINOVR-MVGR8 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '012'.
                WA_FINOVR-MVGR9 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '001'.
                WA_FINOVR-MVGR10 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '002'.
                WA_FINOVR-MVGR11 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '003'.
                WA_FINOVR-MVGR12 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

*                ELSEIF NO_MONTH = '005'.
*         WA_FINOVR-MVGR2 = WA_MVKE-MVGR1.
*                ELSEIF NO_MONTH = '005'.
*         WA_FINOVR-MVGR2 = WA_MVKE-MVGR1.
*                ELSEIF NO_MONTH = '005'.
*         WA_FINOVR-MVGR2 = WA_MVKE-MVGR1.

              ENDIF.

            ENDIF.

          ENDLOOP.

          APPEND WA_FINOVR TO IT_FINOVR.
          CLEAR WA_FINOVR.

        ENDLOOP.

      ENDLOOP.

*DELETE IT_FINOVR WHERE MVGR1 = 0.

    ENDLOOP.


    IF IT_FINOVR IS INITIAL.
      MESSAGE 'No Data Exists for the Input' TYPE 'S' DISPLAY LIKE 'E'.
      STOP.
    ENDIF.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      READ TABLE IT_TVKBT INTO WA_TVKBT WITH KEY VKBUR = WA_FINOVR-VKBUR.
      IF SY-SUBRC = 0.
        WA_FINOVR-BEZEI = WA_TVKBT-BEZEI.
      ENDIF.
      READ TABLE GT_MAKT INTO WA_MAKT WITH  KEY MATNR = WA_FINOVR-MATNR.
      WA_FINOVR-MAKTX = WA_MAKT-MAKTX.

      READ TABLE GT_KNA1 INTO WA_KNA1 WITH  KEY KUNNR = WA_FINOVR-KUNNR.
      WA_FINOVR-NAME1 = WA_KNA1-NAME1.
      READ TABLE IT_TVM1T INTO WA_TVM1T WITH KEY MVGR1 = WA_FINOVR-MVGR1 .
      IF SY-SUBRC = 0.
        WA_FINOVR-GBEZEI = WA_TVM1T-BEZEI.
      ENDIF.
      READ TABLE IT_TSPAT INTO WA_TSPAT WITH KEY SPART = WA_FINOVR-SPART.
      IF SY-SUBRC = 0.
        WA_FINOVR-VTEXT = WA_TSPAT-VTEXT.
      ENDIF.
      READ TABLE IT_MARA INTO WA_MARA WITH KEY MATNR = WA_FINOVR-MATNR.
      WA_FINOVR-VOLUM = WA_MARA-VOLUM.
      MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING BEZEI MAKTX NAME1 GBEZEI VTEXT VOLUM.
      CLEAR WA_FINOVR.
    ENDLOOP.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      WA_FINOVR-QTY_LTR =  WA_FINOVR-FKIMG * WA_FINOVR-VOLUM.
      WA_FINOVR-VOL0 =  WA_FINOVR-QTY0 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL1 = WA_FINOVR-QTY1 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL2 = WA_FINOVR-QTY2 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL3 = WA_FINOVR-QTY3 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL4 = WA_FINOVR-QTY4 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL5 = WA_FINOVR-QTY5 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL6 = WA_FINOVR-QTY6 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL7 = WA_FINOVR-QTY7 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL8 = WA_FINOVR-QTY8 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL9 = WA_FINOVR-QTY9 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL10 = WA_FINOVR-QTY10 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL11 = WA_FINOVR-QTY11 * WA_FINOVR-VOLUM .


*    LV_COUNT = LV_COUNT + 1 .
*
*   AT END OF MATNR.
*      WA_FINOVR-V_COUNT = LV_COUNT.

      MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING QTY_LTR VOL0  VOL1 VOL2 VOL3 VOL4 VOL5 VOL6 VOL7 VOL8 VOL9 VOL10 VOL11 .
      CLEAR WA_FINOVR.
*    ENDAT.
    ENDLOOP.



    "********************************************* This for Apr Conut Start******************************************************

    SORT IT_FINOVR BY PERNR KUNNR MVGR1.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR1.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL0 NE 0 AND WA_FINOVR-MVGR1 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL0.
        WA_FINOVR-FINAPR_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINAPR_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.

    SORT IT_FINOVR DESCENDING BY PERNR KUNNR MVGR1 FINAPR_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATAPCOUNT1 = LV_MATAPCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR1.
        WA_FINOVR-V_MATAPCOUNT1 = LV_MATAPCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATAPCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATAPCOUNT1 = 0 AND WA_FINOVR-FINAPR_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR ASCENDING BY PERNR MVGR1.


    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINAPR_VAL IS NOT INITIAL AND WA_FINOVR-FINAPR_VAL > 18.

        ON CHANGE OF WA_FINOVR-PERNR OR WA_FINOVR-MVGR1.
          CLEAR LV_CUSTCOUNT1.
        ENDON.
        IF WA_FINOVR-MVGR1 IS NOT INITIAL.
          LV_CUSTCOUNT1 = LV_CUSTCOUNT1 + 1.
        ENDIF.
        WA_FINOVR-APRCUSTCOUNT = LV_CUSTCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING APRCUSTCOUNT.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR MVGR1 APRCUSTCOUNT.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_APRCOUNT = LV_APRCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR1.
        WA_FINOVR-V_APRCOUNT = LV_APRCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_APRCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_APRCOUNT = 0 AND WA_FINOVR-FINAPR_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.

    ""********************************************* This for Apr Conut End******************************************************


    ""********************************************* This for May Conut Start******************************************************

    SORT IT_FINOVR BY PERNR1 KUNNR1 MVGR2.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR2.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL1 NE 0 AND WA_FINOVR-MVGR2 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL1.
        WA_FINOVR-FINMAY_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINMAY_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.

    SORT IT_FINOVR DESCENDING BY PERNR1 KUNNR1 MVGR2 FINMAY_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATMAYCOUNT1 = LV_MATMAYCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR2.
        WA_FINOVR-V_MATMAYCOUNT1 = LV_MATMAYCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATMAYCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.

    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATMAYCOUNT1 = 0 AND WA_FINOVR-FINMAY_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR ASCENDING BY PERNR1 MVGR2.

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINMAY_VAL IS NOT INITIAL AND WA_FINOVR-FINMAY_VAL > 18.

        ON CHANGE OF WA_FINOVR-PERNR1 OR WA_FINOVR-MVGR2.
          CLEAR LV_CUSTCOUNT2.
        ENDON.
        IF WA_FINOVR-MVGR2 IS NOT INITIAL.
          LV_CUSTCOUNT2 = LV_CUSTCOUNT2 + 1.
        ENDIF.
        WA_FINOVR-MAYCUSTCOUNT = LV_CUSTCOUNT2.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING MAYCUSTCOUNT.
      ENDIF.
    ENDLOOP.

    SORT IT_FINOVR DESCENDING BY PERNR1 MVGR2 MAYCUSTCOUNT.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MAYCOUNT = LV_MAYCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR2.
        WA_FINOVR-V_MAYCOUNT = LV_MAYCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MAYCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MAYCOUNT = 0 AND WA_FINOVR-FINMAY_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.

    ""********************************************* This for MAY Conut End******************************************************


    ""********************************************* This for June Conut Start******************************************************

    SORT IT_FINOVR BY PERNR2 KUNNR2 MVGR3.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR3.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL2 NE 0 AND WA_FINOVR-MVGR3 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL2.
        WA_FINOVR-FINJUN_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINJUN_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.



    SORT IT_FINOVR DESCENDING BY PERNR2 KUNNR2 MVGR3 FINJUN_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATJUNCOUNT1 = LV_MATJUNCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR3.
        WA_FINOVR-V_MATJUNCOUNT1 = LV_MATJUNCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATJUNCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.

    ENDLOOP.



    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATJUNCOUNT1 = 0 AND WA_FINOVR-FINJUN_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR ASCENDING BY PERNR2 MVGR3.

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINJUN_VAL IS NOT INITIAL AND WA_FINOVR-FINJUN_VAL > 18.

        ON CHANGE OF WA_FINOVR-PERNR2 OR WA_FINOVR-MVGR3.
          CLEAR LV_CUSTCOUNT3.
        ENDON.
        IF WA_FINOVR-MVGR3 IS NOT INITIAL.
          LV_CUSTCOUNT3 = LV_CUSTCOUNT3 + 1.
        ENDIF.
        WA_FINOVR-JUNCUSTCOUNT = LV_CUSTCOUNT3.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING JUNCUSTCOUNT.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR2 MVGR3 JUNCUSTCOUNT.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_JUNCOUNT = LV_JUNCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR3.
        WA_FINOVR-V_JUNCOUNT = LV_JUNCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_JUNCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_JUNCOUNT = 0 AND WA_FINOVR-FINJUN_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.

    ""********************************************* This for June Conut Ending******************************************************

    ""********************************************* This for July Conut Start******************************************************


    SORT IT_FINOVR BY PERNR3 KUNNR3 MVGR4.



    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR4.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL3 NE 0 AND WA_FINOVR-MVGR4 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL3.
        WA_FINOVR-FINJULY_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINJULY_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR3 KUNNR3 MVGR4 FINJULY_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATJULYCOUNT1 = LV_MATJULYCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR4.
        WA_FINOVR-V_MATJULYCOUNT1 = LV_MATJULYCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATJULYCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.

    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATJULYCOUNT1 = 0 AND WA_FINOVR-FINJULY_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR ASCENDING BY PERNR3 MVGR4.

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINJULY_VAL IS NOT INITIAL AND WA_FINOVR-FINJULY_VAL > 18.

        ON CHANGE OF WA_FINOVR-PERNR3 OR WA_FINOVR-MVGR4.
          CLEAR LV_CUSTCOUNT4.
        ENDON.
        IF WA_FINOVR-MVGR4 IS NOT INITIAL.
          LV_CUSTCOUNT4 = LV_CUSTCOUNT4 + 1.
        ENDIF.
        WA_FINOVR-JULYCUSTCOUNT = LV_CUSTCOUNT4.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING JULYCUSTCOUNT.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR3 MVGR4 JULYCUSTCOUNT.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_JULYCOUNT = LV_JULYCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR4.
        WA_FINOVR-V_JULYCOUNT = LV_JULYCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_JULYCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_JULYCOUNT = 0 AND WA_FINOVR-FINJULY_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.

    ""********************************************* This for July Conut Ending******************************************************

    ""********************************************* This for August Conut Start******************************************************


    SORT IT_FINOVR BY PERNR4 KUNNR4 MVGR5.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR5.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL4 NE 0 AND WA_FINOVR-MVGR5 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL4.
        WA_FINOVR-FINAUG_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINAUG_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR4 KUNNR4 MVGR5 FINAUG_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATAUGCOUNT1 = LV_MATAUGCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR5.
        WA_FINOVR-V_MATAUGCOUNT1 = LV_MATAUGCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATAUGCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.

    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATAUGCOUNT1 = 0 AND WA_FINOVR-FINAUG_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR ASCENDING BY PERNR4 MVGR5.

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINAUG_VAL IS NOT INITIAL AND WA_FINOVR-FINAUG_VAL > 18.

        ON CHANGE OF WA_FINOVR-PERNR4 OR WA_FINOVR-MVGR5.
          CLEAR LV_CUSTCOUNT5.
        ENDON.
        IF WA_FINOVR-MVGR5 IS NOT INITIAL.
          LV_CUSTCOUNT5 = LV_CUSTCOUNT5 + 1.
        ENDIF.
        WA_FINOVR-AUGCUSTCOUNT = LV_CUSTCOUNT5.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING AUGCUSTCOUNT.
      ENDIF.
    ENDLOOP.



    SORT IT_FINOVR DESCENDING BY PERNR4 MVGR5 AUGCUSTCOUNT.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_AUGCOUNT = LV_AUGCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR5.
        WA_FINOVR-V_AUGCOUNT = LV_AUGCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_AUGCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_AUGCOUNT = 0 AND WA_FINOVR-FINAUG_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    ""********************************************* This for August Conut Ending******************************************************

    ""********************************************* This for Sep Conut Start******************************************************

    SORT IT_FINOVR BY PERNR5 KUNNR5 MVGR6.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR6.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL5 NE 0 AND WA_FINOVR-MVGR6 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL5.
        WA_FINOVR-FINSEP_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINSEP_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.



    SORT IT_FINOVR DESCENDING BY PERNR5 KUNNR5 MVGR6 FINSEP_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATSEPCOUNT1 = LV_MATSEPCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR6.
        WA_FINOVR-V_MATSEPCOUNT1 = LV_MATSEPCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATSEPCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.

    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATSEPCOUNT1 = 0 AND WA_FINOVR-FINSEP_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.



    SORT IT_FINOVR ASCENDING BY PERNR5 MVGR6.

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINSEP_VAL IS NOT INITIAL AND WA_FINOVR-FINSEP_VAL > 18.

        ON CHANGE OF WA_FINOVR-PERNR5 OR WA_FINOVR-MVGR6.
          CLEAR LV_CUSTCOUNT6.
        ENDON.
        IF WA_FINOVR-MVGR6 IS NOT INITIAL.
          LV_CUSTCOUNT6 = LV_CUSTCOUNT6 + 1.
        ENDIF.
        WA_FINOVR-SEPCUSTCOUNT = LV_CUSTCOUNT6.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING SEPCUSTCOUNT.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR5 MVGR6 SEPCUSTCOUNT.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_SEPCOUNT = LV_SEPCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR6.
        WA_FINOVR-V_SEPCOUNT = LV_SEPCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_SEPCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_SEPCOUNT = 0 AND WA_FINOVR-FINSEP_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    ""********************************************* This for SEP Conut END******************************************************

    ""********************************************* This for OCT  Conut Start******************************************************


    SORT IT_FINOVR BY PERNR6 KUNNR6 MVGR7.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR7.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL6 NE 0 AND WA_FINOVR-MVGR7 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL6.
        WA_FINOVR-FINOCT_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINOCT_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR6 KUNNR6 MVGR7 FINOCT_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATOCTCOUNT1 = LV_MATOCTCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR7.
        WA_FINOVR-V_MATOCTCOUNT1 = LV_MATOCTCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATOCTCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.

    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATOCTCOUNT1 = 0 AND WA_FINOVR-FINOCT_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR ASCENDING BY PERNR6 MVGR7.

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINOCT_VAL IS NOT INITIAL AND WA_FINOVR-FINOCT_VAL > 18.

        ON CHANGE OF WA_FINOVR-PERNR6 OR WA_FINOVR-MVGR7.
          CLEAR LV_CUSTCOUNT7.
        ENDON.
        IF WA_FINOVR-MVGR7 IS NOT INITIAL.
          LV_CUSTCOUNT7 = LV_CUSTCOUNT7 + 1.
        ENDIF.
        WA_FINOVR-OCTCUSTCOUNT = LV_CUSTCOUNT7.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING OCTCUSTCOUNT.
      ENDIF.
    ENDLOOP.



    SORT IT_FINOVR DESCENDING BY PERNR6 MVGR7 OCTCUSTCOUNT.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_OCTCOUNT = LV_OCTCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR7.
        WA_FINOVR-V_OCTCOUNT = LV_OCTCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_OCTCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.



    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_OCTCOUNT = 0 AND WA_FINOVR-FINOCT_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    ""********************************************* This for Oct Conut Ending******************************************************



    ""********************************************* This for Nov  Conut Start******************************************************

    SORT IT_FINOVR BY PERNR7 KUNNR7 MVGR8.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR8.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL7 NE 0 AND WA_FINOVR-MVGR8 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL7.
        WA_FINOVR-FINNOV_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINNOV_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR7 KUNNR7 MVGR8 FINNOV_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATNOVCOUNT1 = LV_MATNOVCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR8.
        WA_FINOVR-V_MATNOVCOUNT1 = LV_MATNOVCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATNOVCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.

    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATNOVCOUNT1 = 0 AND WA_FINOVR-FINNOV_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR ASCENDING BY PERNR7 MVGR8.

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINNOV_VAL IS NOT INITIAL AND WA_FINOVR-FINNOV_VAL > 18.

        ON CHANGE OF WA_FINOVR-PERNR7 OR WA_FINOVR-MVGR8.
          CLEAR LV_CUSTCOUNT8.
        ENDON.
        IF WA_FINOVR-MVGR8 IS NOT INITIAL.
          LV_CUSTCOUNT8 = LV_CUSTCOUNT8 + 1.
        ENDIF.
        WA_FINOVR-NOVCUSTCOUNT = LV_CUSTCOUNT8.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING NOVCUSTCOUNT.
      ENDIF.
    ENDLOOP.



    SORT IT_FINOVR DESCENDING BY PERNR7 MVGR8 NOVCUSTCOUNT.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_NOVCOUNT = LV_NOVCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR8.
        WA_FINOVR-V_NOVCOUNT = LV_NOVCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_NOVCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.



    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_NOVCOUNT = 0 AND WA_FINOVR-FINNOV_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    ""********************************************* This for Nov Conut Ending******************************************************
    ""********************************************* This for Dec Conut Start******************************************************


    SORT IT_FINOVR BY PERNR8 KUNNR8 MVGR9.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR9.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL8 NE 0 AND WA_FINOVR-MVGR9 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL8.
        WA_FINOVR-FINDEC_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINDEC_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.




    SORT IT_FINOVR DESCENDING BY PERNR8 KUNNR8 MVGR9 FINDEC_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATDECCOUNT1 = LV_MATDECCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR9.
        WA_FINOVR-V_MATDECCOUNT1 = LV_MATDECCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATDECCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.

    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATDECCOUNT1 = 0 AND WA_FINOVR-FINDEC_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR ASCENDING BY PERNR8 MVGR9.

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINDEC_VAL IS NOT INITIAL AND WA_FINOVR-FINDEC_VAL > 18.

        ON CHANGE OF WA_FINOVR-PERNR8 OR WA_FINOVR-MVGR9.
          CLEAR LV_CUSTCOUNT9.
        ENDON.
        IF WA_FINOVR-MVGR9 IS NOT INITIAL.
          LV_CUSTCOUNT9 = LV_CUSTCOUNT9 + 1.
        ENDIF.
        WA_FINOVR-DECCUSTCOUNT = LV_CUSTCOUNT9.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING DECCUSTCOUNT.
      ENDIF.
    ENDLOOP.



    SORT IT_FINOVR DESCENDING BY PERNR8 MVGR9 DECCUSTCOUNT.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_DECCOUNT = LV_DECCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR9.
        WA_FINOVR-V_DECCOUNT = LV_DECCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_DECCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.



    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_DECCOUNT = 0 AND WA_FINOVR-FINDEC_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    ""********************************************* This for Dec Conut Ending******************************************************



    ""********************************************* This for Jan Conut Start******************************************************


    SORT IT_FINOVR BY PERNR9 KUNNR9 MVGR10.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR10.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL9 NE 0 AND WA_FINOVR-MVGR10 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL9.
        WA_FINOVR-FINJAN_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINJAN_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.




    SORT IT_FINOVR DESCENDING BY PERNR9 KUNNR9 MVGR10 FINJAN_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATJANCOUNT1 = LV_MATJANCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR10.
        WA_FINOVR-V_MATJANCOUNT1 = LV_MATJANCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATJANCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.

    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATJANCOUNT1 = 0 AND WA_FINOVR-FINJAN_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR ASCENDING BY PERNR9 MVGR10.

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINJAN_VAL IS NOT INITIAL AND WA_FINOVR-FINJAN_VAL > 18.

        ON CHANGE OF WA_FINOVR-PERNR9 OR WA_FINOVR-MVGR10.
          CLEAR LV_CUSTCOUNT10.
        ENDON.
        IF WA_FINOVR-MVGR10 IS NOT INITIAL.
          LV_CUSTCOUNT10 = LV_CUSTCOUNT10 + 1.
        ENDIF.
        WA_FINOVR-JANCUSTCOUNT = LV_CUSTCOUNT10.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING JANCUSTCOUNT.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR9 MVGR10 JANCUSTCOUNT.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_JANCOUNT = LV_JANCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR10.
        WA_FINOVR-V_JANCOUNT = LV_JANCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_JANCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_JANCOUNT = 0 AND WA_FINOVR-FINJAN_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    ""********************************************* This for Jan Conut Ending******************************************************

    ""********************************************* This for Feb Conut Start******************************************************

    SORT IT_FINOVR BY PERNR10 KUNNR10 MVGR11.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR11.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL10 NE 0 AND WA_FINOVR-MVGR11 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL10.
        WA_FINOVR-FINFEB_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINFEB_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR10 KUNNR10 MVGR11 FINFEB_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATFEBCOUNT1 = LV_MATFEBCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR11.
        WA_FINOVR-V_MATFEBCOUNT1 = LV_MATFEBCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATFEBCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.

    ENDLOOP.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATFEBCOUNT1 = 0 AND WA_FINOVR-FINFEB_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.

    SORT IT_FINOVR ASCENDING BY PERNR10 MVGR11.


    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINFEB_VAL IS NOT INITIAL AND WA_FINOVR-FINFEB_VAL > 18.

        ON CHANGE OF WA_FINOVR-PERNR10 OR WA_FINOVR-MVGR11.
          CLEAR LV_CUSTCOUNT11.
        ENDON.
        IF WA_FINOVR-MVGR11 IS NOT INITIAL.
          LV_CUSTCOUNT11 = LV_CUSTCOUNT11 + 1.
        ENDIF.
        WA_FINOVR-FEBCUSTCOUNT = LV_CUSTCOUNT11.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FEBCUSTCOUNT.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR10 MVGR11 FEBCUSTCOUNT.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_FEBCOUNT = LV_FEBCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR11.
        WA_FINOVR-V_FEBCOUNT = LV_FEBCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_FEBCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_FEBCOUNT = 0 AND WA_FINOVR-FINFEB_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    ""********************************************* This for Feb Conut Ending******************************************************
    ""********************************************* This for Mar Conut Start******************************************************

    SORT IT_FINOVR BY PERNR11 KUNNR11 MVGR12.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR12.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL11 NE 0 AND WA_FINOVR-MVGR12 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL11.
        WA_FINOVR-FINMAR_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINMAR_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR11 KUNNR11 MVGR12 FINMAR_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATMARCOUNT1 = LV_MATMARCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR12.
        WA_FINOVR-V_MATMARCOUNT1 = LV_MATMARCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATMARCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.

    ENDLOOP.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATMARCOUNT1 = 0 AND WA_FINOVR-FINMAR_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.

    SORT IT_FINOVR ASCENDING BY PERNR11 MVGR12.

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINMAR_VAL IS NOT INITIAL AND WA_FINOVR-FINMAR_VAL > 18.

        ON CHANGE OF WA_FINOVR-PERNR11 OR WA_FINOVR-MVGR12.
          CLEAR LV_CUSTCOUNT12.
        ENDON.
        IF WA_FINOVR-MVGR12 IS NOT INITIAL.
          LV_CUSTCOUNT12 = LV_CUSTCOUNT12 + 1.
        ENDIF.
        WA_FINOVR-MARCUSTCOUNT = LV_CUSTCOUNT12.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING MARCUSTCOUNT.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR11 MVGR12 MARCUSTCOUNT.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MARCOUNT = LV_MARCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR12.
        WA_FINOVR-V_MARCOUNT = LV_MARCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MARCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MARCOUNT = 0 AND WA_FINOVR-FINMAR_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.

    ""********************************************* This for Feb Conut Ending******************************************************

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-MVGR1 EQ ''.

        IF WA_FINOVR-MVGR1 = 0 AND WA_FINOVR-APRCUSTCOUNT = 0 AND WA_FINOVR-MAYCUSTCOUNT = 0 AND WA_FINOVR-JUNCUSTCOUNT = 0 AND WA_FINOVR-JULYCUSTCOUNT = 0 AND
          WA_FINOVR-AUGCUSTCOUNT = 0 AND WA_FINOVR-SEPCUSTCOUNT = 0 AND WA_FINOVR-OCTCUSTCOUNT = 0 AND WA_FINOVR-NOVCUSTCOUNT = 0 AND
          WA_FINOVR-DECCUSTCOUNT = 0 AND WA_FINOVR-JANCUSTCOUNT = 0 AND WA_FINOVR-FEBCUSTCOUNT = 0 AND WA_FINOVR-MARCUSTCOUNT = 0.

          DELETE IT_FINOVR.

        ENDIF.

      ENDIF.


    ENDLOOP.


    SORT IT_FINOVR BY VKBUR BEZEI PERNR SO_NAME MVGR1.

*
**
**  BREAK-POINT .
**
**  LOOP AT IT_FINOVR INTO WA_FINOVR.
**
**    ON CHANGE OF WA_FINOVR-MVGR1.
**
**      CLEAR LV_SUM1.
**
**    ENDON.
**
**    IF WA_FINOVR-MVGR1 IS NOT INITIAL.
**
**      LV_SUM1 = LV_SUM1 + WA_FINOVR-JUNCUSTCOUNT.
**      WA_FINOVR-JUNCUSTCOUNT1 = LV_SUM1.
**
**
**    MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING JUNCUSTCOUNT1.
**    CLEAR WA_FINOVR.
**
**    ENDIF.
**
**  ENDLOOP.



    LOOP AT IT_FINOVR INTO WA_FINOVR.

      WA_FINAL-MVGR1 =  WA_FINOVR-MVGR1.
      WA_FINAL-VKBUR =  WA_FINOVR-VKBUR.
      WA_FINAL-BEZEI =  WA_FINOVR-BEZEI.
      WA_FINAL-PERNR =  WA_FINOVR-PERNR.
      WA_FINAL-SO_NAME = WA_FINOVR-SO_NAME.
      WA_FINAL-GBEZEI =  WA_FINOVR-GBEZEI.
      WA_FINAL-MVGR0 =  WA_FINOVR-MVGR1.
      WA_FINAL-TARGET = 0.

      WA_FINAL-PLAN = 0.
      WA_FINAL-PLAN1 = 0.
      WA_FINAL-PLAN2 = 0.

      WA_FINAL-JANACH = 0.
      WA_FINAL-FEBACH = 0.
      WA_FINAL-MARACH = 0.

      WA_FINAL-JANACH1 = 0.
      WA_FINAL-FEBACH1 = 0.
      WA_FINAL-MARACH1 = 0.

*    WA_FINOVR-APRCUSTCOUNT = WA_FINAL-APRCUSTCOUNT.

      MOVE WA_FINOVR-APRCUSTCOUNT TO WA_FINAL-APRCUSTCOUNT.
      MOVE WA_FINOVR-MAYCUSTCOUNT TO WA_FINAL-MAYCUSTCOUNT.
      MOVE WA_FINOVR-JUNCUSTCOUNT TO WA_FINAL-JUNCUSTCOUNT.

      MOVE WA_FINOVR-JULYCUSTCOUNT TO WA_FINAL-JULYCUSTCOUNT.
      MOVE WA_FINOVR-AUGCUSTCOUNT TO WA_FINAL-AUGCUSTCOUNT.
      MOVE WA_FINOVR-SEPCUSTCOUNT TO WA_FINAL-SEPCUSTCOUNT.

      MOVE WA_FINOVR-OCTCUSTCOUNT TO WA_FINAL-OCTCUSTCOUNT.
      MOVE WA_FINOVR-NOVCUSTCOUNT TO WA_FINAL-NOVCUSTCOUNT.
      MOVE WA_FINOVR-DECCUSTCOUNT TO WA_FINAL-DECCUSTCOUNT.


      MOVE WA_FINOVR-JANCUSTCOUNT TO WA_FINAL-JANCUSTCOUNT.
      MOVE WA_FINOVR-FEBCUSTCOUNT TO WA_FINAL-FEBCUSTCOUNT.
      MOVE WA_FINOVR-MARCUSTCOUNT TO WA_FINAL-MARCUSTCOUNT.

      COLLECT WA_FINAL INTO GT_FINAL.

    ENDLOOP.


*** ZTable query for perncentage and plan achivment.


    LOOP AT GT_FINAL INTO WA_FINAL.

      CASE WA_FINAL-MVGR1.

        WHEN '8'.
          LOOP AT GT_MATGRP INTO WA_MATGRP WHERE MVGR1 = '8'.
            WA_FINAL-PERCENTAGE = WA_MATGRP-PERCENTAGE.
          ENDLOOP.

        WHEN '10'.
          LOOP AT GT_MATGRP INTO WA_MATGRP WHERE MVGR1 = '10'.
            WA_FINAL-PERCENTAGE = WA_MATGRP-PERCENTAGE.
          ENDLOOP.

        WHEN '11'.
          LOOP AT GT_MATGRP INTO WA_MATGRP WHERE MVGR1 = '11'.
            WA_FINAL-PERCENTAGE = WA_MATGRP-PERCENTAGE.
          ENDLOOP.

        WHEN '13'.
          LOOP AT GT_MATGRP INTO WA_MATGRP WHERE MVGR1 = '13'.
            WA_FINAL-PERCENTAGE = WA_MATGRP-PERCENTAGE.
          ENDLOOP.

        WHEN '17'.
          LOOP AT GT_MATGRP INTO WA_MATGRP WHERE MVGR1 = '17'.
            WA_FINAL-PERCENTAGE = WA_MATGRP-PERCENTAGE.
          ENDLOOP.

        WHEN '21'.
          LOOP AT GT_MATGRP INTO WA_MATGRP WHERE MVGR1 = '21'.
            WA_FINAL-PERCENTAGE = WA_MATGRP-PERCENTAGE.
          ENDLOOP.

        WHEN '23'.
          LOOP AT GT_MATGRP INTO WA_MATGRP WHERE MVGR1 = '23'.
            WA_FINAL-PERCENTAGE = WA_MATGRP-PERCENTAGE.
          ENDLOOP.

        WHEN '51'.
          LOOP AT GT_MATGRP INTO WA_MATGRP WHERE MVGR1 = '51'.
            WA_FINAL-PERCENTAGE = WA_MATGRP-PERCENTAGE.
          ENDLOOP.

        WHEN '37'.
          LOOP AT GT_MATGRP INTO WA_MATGRP WHERE MVGR1 = '37'.
            WA_FINAL-PERCENTAGE = WA_MATGRP-PERCENTAGE.
          ENDLOOP.

        WHEN '38'.
          LOOP AT GT_MATGRP INTO WA_MATGRP WHERE MVGR1 = '38'.
            WA_FINAL-PERCENTAGE = WA_MATGRP-PERCENTAGE.
          ENDLOOP.

        WHEN '39'.
          LOOP AT GT_MATGRP INTO WA_MATGRP WHERE MVGR1 = '39'.
            WA_FINAL-PERCENTAGE = WA_MATGRP-PERCENTAGE.
          ENDLOOP.

        WHEN '41'.
          LOOP AT GT_MATGRP INTO WA_MATGRP WHERE MVGR1 = '41'.
            WA_FINAL-PERCENTAGE = WA_MATGRP-PERCENTAGE.
          ENDLOOP.


      ENDCASE.

      MODIFY GT_FINAL FROM WA_FINAL TRANSPORTING PERCENTAGE.
      CLEAR WA_FINAL.


    ENDLOOP.


    LOOP AT GT_FINAL INTO WA_FINAL.

      IF WA_FINAL-MVGR1 IS NOT INITIAL.
        LOOP AT GT_MATGRPPLAN INTO WA_MATGRPPLAN WHERE MONTH1 = '1'.
          IF WA_FINAL-PERCENTAGE NE 0.
            WA_FINAL-JANACH = WA_MATGRPPLAN-PERCENTAGE.
          ENDIF.
        ENDLOOP.

        LOOP AT GT_MATGRPPLAN INTO WA_MATGRPPLAN WHERE MONTH1 = '2'.
          IF WA_FINAL-PERCENTAGE NE 0.
            WA_FINAL-FEBACH = WA_MATGRPPLAN-PERCENTAGE.
          ENDIF.
        ENDLOOP.

        LOOP AT GT_MATGRPPLAN INTO WA_MATGRPPLAN WHERE MONTH1 = '3'.
          IF WA_FINAL-PERCENTAGE NE 0.
            WA_FINAL-MARACH = WA_MATGRPPLAN-PERCENTAGE.
          ENDIF.
        ENDLOOP.

        MODIFY GT_FINAL FROM WA_FINAL TRANSPORTING JANACH FEBACH MARACH.
        CLEAR WA_FINAL.

      ENDIF.

    ENDLOOP.



*SORT GT_FINAL BY PERNR GBEZEI.

    LOOP AT GT_FINAL INTO WA_FINAL.

      ON CHANGE OF WA_FINAL-PERNR.
        CLEAR TARGET1.
      ENDON.

      IF WA_FINAL-MVGR1 EQ '31'.

        TARGET1 = TARGET1 + WA_FINAL-APRCUSTCOUNT + WA_FINAL-MAYCUSTCOUNT + WA_FINAL-JUNCUSTCOUNT + WA_FINAL-JULYCUSTCOUNT + WA_FINAL-AUGCUSTCOUNT + WA_FINAL-SEPCUSTCOUNT + WA_FINAL-OCTCUSTCOUNT + WA_FINAL-NOVCUSTCOUNT + WA_FINAL-DECCUSTCOUNT .

        TARGET1 = TARGET1 / 9.
        MOVE  TARGET1 TO WA_FINAL-TARGET.
        MODIFY GT_FINAL FROM WA_FINAL TRANSPORTING TARGET.
        CLEAR WA_FINAL.

      ENDIF.

    ENDLOOP.


    SORT GT_FINAL DESCENDING BY PERNR TARGET.

*BREAK-POINT.

    LOOP AT GT_FINAL INTO WA_FINAL.
      ON CHANGE OF WA_FINAL-PERNR.
        CLEAR TARGET2.
        TARGET1 = WA_FINAL-TARGET.
      ENDON.

      CASE WA_FINAL-MVGR1.

        WHEN '8'.
          TARGET2 = TARGET1 * WA_FINAL-PERCENTAGE / 100.
          MOVE  TARGET2 TO WA_FINAL-FINTARGET.

        WHEN '10'.
          TARGET2 = TARGET1 * WA_FINAL-PERCENTAGE / 100.
          MOVE  TARGET2 TO WA_FINAL-FINTARGET.
        WHEN '11'.
          TARGET2 = TARGET1 * WA_FINAL-PERCENTAGE / 100.
          MOVE  TARGET2 TO WA_FINAL-FINTARGET.

        WHEN '13'.
          TARGET2 = TARGET1 * WA_FINAL-PERCENTAGE / 100.
          MOVE  TARGET2 TO WA_FINAL-FINTARGET.

        WHEN '17'.
          TARGET2 = TARGET1 * WA_FINAL-PERCENTAGE / 100.
          MOVE  TARGET2 TO WA_FINAL-FINTARGET.

        WHEN '21'.
          TARGET2 = TARGET1 * WA_FINAL-PERCENTAGE / 100.
          MOVE  TARGET2 TO WA_FINAL-FINTARGET.

        WHEN '23'.
          TARGET2 = TARGET1 * WA_FINAL-PERCENTAGE / 100.
          MOVE  TARGET2 TO WA_FINAL-FINTARGET.

        WHEN '51'.

          TARGET2 = TARGET1 * WA_FINAL-PERCENTAGE / 100.
          MOVE  TARGET2 TO WA_FINAL-FINTARGET.

        WHEN '37'.
          TARGET2 = TARGET1 * WA_FINAL-PERCENTAGE / 100.
          MOVE  TARGET2 TO WA_FINAL-FINTARGET.

        WHEN '38'.
          TARGET2 = TARGET1 * WA_FINAL-PERCENTAGE / 100.
          MOVE  TARGET2 TO WA_FINAL-FINTARGET.

        WHEN '39'.
          TARGET2 = TARGET1 * WA_FINAL-PERCENTAGE / 100.
          MOVE  TARGET2 TO WA_FINAL-FINTARGET.

        WHEN '41'.
          TARGET2 = TARGET1 * WA_FINAL-PERCENTAGE / 100.
          MOVE  TARGET2 TO WA_FINAL-FINTARGET.

      ENDCASE.

      MODIFY GT_FINAL FROM WA_FINAL TRANSPORTING FINTARGET.
      CLEAR : WA_FINAL.

    ENDLOOP.

    LOOP AT GT_FINAL INTO WA_FINAL.


      IF WA_FINAL-JANACH NE 0.
        WA_FINAL-PLAN = WA_FINAL-FINTARGET / 100 * WA_FINAL-JANACH .
      ENDIF.

      IF WA_FINAL-FEBACH NE 0.
        WA_FINAL-PLAN1 = WA_FINAL-FINTARGET / 100 * WA_FINAL-FEBACH .
      ENDIF.

      IF WA_FINAL-MARACH NE 0.
        WA_FINAL-PLAN2 = WA_FINAL-FINTARGET / 100 * WA_FINAL-MARACH .

      ENDIF.

      MODIFY GT_FINAL FROM WA_FINAL TRANSPORTING PLAN PLAN1 PLAN2.
      CLEAR WA_FINAL.

    ENDLOOP.



    LOOP AT GT_FINAL INTO WA_FINAL.

      IF WA_FINAL-JANACH NE 0.
        WA_FINAL-JANACH1 = WA_FINAL-JANCUSTCOUNT /  WA_FINAL-JANACH .
      ENDIF.

      IF WA_FINAL-FEBACH NE 0.
        WA_FINAL-FEBACH1 = WA_FINAL-FEBCUSTCOUNT /  WA_FINAL-FEBACH .
      ENDIF.

      IF WA_FINAL-MARACH NE 0.
        WA_FINAL-MARACH1 = WA_FINAL-MARCUSTCOUNT /  WA_FINAL-MARACH .
      ENDIF.

      MODIFY GT_FINAL FROM WA_FINAL TRANSPORTING JANACH1 FEBACH1  MARACH1.

    ENDLOOP.


  ENDIF.


  IF PRD_TOT = 'X'.                                  "Report 22222222222222222222222

    LOOP AT GT_PA0002 INTO WA_PA0002.

      LOOP AT GT_KNVP INTO WA_KNVP WHERE PERNR = WA_PA0002-PERNR AND PERNR NE 0.

        LOOP AT IT_VBRK INTO WA_VBRK WHERE  KUNAG = WA_KNVP-KUNNR.

          LOOP AT IT_MARA INTO WA_MARA WHERE MATNR = WA_VBRK-MATNR.

*        WA_FINOVR-KUNNR = WA_VBRK-KUNAG .

            WA_FINOVR-MATNR = WA_MARA-MATNR.
            WA_FINOVR-NETWR =  WA_FINOVR-NETWR + WA_VBRK-NETWR.
            WA_FINOVR-FKIMG  =   WA_FINOVR-FKIMG + WA_VBRK-FKIMG.

            CALL FUNCTION 'DATE_TO_PERIOD_CONVERT'
              EXPORTING
                I_DATE         = WA_VBRK-FKDAT
                I_MONMIT       = 00
                I_PERIV        = 'K4'
              IMPORTING
                E_BUPER        = NO_MONTH
                E_GJAHR        = D_YEAR
              EXCEPTIONS
                INPUT_FALSE    = 1
                T009_NOTFOUND  = 2
                T009B_NOTFOUND = 3
                OTHERS         = 4.

            IF NO_MONTH = '004' .
              WA_FINOVR-QTY0 =  WA_FINOVR-QTY0 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT0 =  WA_FINOVR-AMT0 + WA_VBRK-NETWR.

              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.
            ELSEIF NO_MONTH = '005'.

              WA_FINOVR-QTY1 =  WA_FINOVR-QTY1 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT1 =  WA_FINOVR-AMT1 + WA_VBRK-NETWR.

              WA_FINOVR-KUNNR1 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR1 = WA_PA0002-PERNR.
              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.

            ELSEIF NO_MONTH = '006'.
              WA_FINOVR-QTY2 =  WA_FINOVR-QTY2 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT2 =  WA_FINOVR-AMT2 + WA_VBRK-NETWR.

              WA_FINOVR-KUNNR2 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR2 = WA_PA0002-PERNR.
              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.

            ELSEIF NO_MONTH = '007'.
              WA_FINOVR-QTY3 =  WA_FINOVR-QTY3 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT3 =  WA_FINOVR-AMT3 + WA_VBRK-NETWR.

              WA_FINOVR-KUNNR3 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR3 = WA_PA0002-PERNR.
              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.

            ELSEIF NO_MONTH = '008'.
              WA_FINOVR-QTY4 =  WA_FINOVR-QTY4 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT4 = WA_FINOVR-AMT4 +  WA_VBRK-NETWR.

              WA_FINOVR-KUNNR4 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR4 = WA_PA0002-PERNR.
              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.

            ELSEIF NO_MONTH = '009'.
              WA_FINOVR-QTY5 =  WA_FINOVR-QTY5 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT5 =  WA_FINOVR-AMT5 +   WA_VBRK-NETWR.

              WA_FINOVR-KUNNR5 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR5 = WA_PA0002-PERNR.
              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.

            ELSEIF NO_MONTH = '010'.
              WA_FINOVR-QTY6 =  WA_FINOVR-QTY6 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT6 =  WA_FINOVR-AMT6 +  WA_VBRK-NETWR.

              WA_FINOVR-KUNNR6 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR6 = WA_PA0002-PERNR.

              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.

            ELSEIF NO_MONTH = '011'.
              WA_FINOVR-QTY7 =  WA_FINOVR-QTY7 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT7 =  WA_FINOVR-AMT7 + WA_VBRK-NETWR.

              WA_FINOVR-KUNNR7 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR7 = WA_PA0002-PERNR.

              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.

            ELSEIF NO_MONTH = '012'.
              WA_FINOVR-QTY8 =  WA_FINOVR-QTY8 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT8 =  WA_FINOVR-AMT8 + WA_VBRK-NETWR.

              WA_FINOVR-KUNNR8 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR8 = WA_PA0002-PERNR.

              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.

            ELSEIF NO_MONTH = '001'.
              WA_FINOVR-QTY9 =  WA_FINOVR-QTY9 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT9 = WA_FINOVR-AMT9 + WA_VBRK-NETWR.

              WA_FINOVR-KUNNR9 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR9 = WA_PA0002-PERNR.

              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.

            ELSEIF NO_MONTH = '002'.
              WA_FINOVR-QTY10 =  WA_FINOVR-QTY10 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT10 =  WA_FINOVR-AMT10 + WA_VBRK-NETWR.

              WA_FINOVR-KUNNR10 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR10 = WA_PA0002-PERNR.

              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.


            ELSEIF NO_MONTH = '003'.
              WA_FINOVR-QTY11 =  WA_FINOVR-QTY11 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT11 =  WA_FINOVR-AMT11 + WA_VBRK-NETWR.

              WA_FINOVR-KUNNR11 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR11 = WA_PA0002-PERNR.

              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.

            ENDIF.

            WA_FINOVR-FKDAT = WA_VBRK-FKDAT.
            WA_FINOVR-SPART = WA_VBRK-SPART.
            WA_FINOVR-FKART = WA_VBRK-FKART.
            WA_FINOVR-KUNAG = WA_VBRK-KUNAG.
            WA_FINOVR-KUNRG = WA_VBRK-KUNRG.
            WA_FINOVR-VKORG = WA_VBRK-VKORG.
            WA_FINOVR-VTWEG = WA_VBRK-VTWEG.
*        WA_FINOVR-NETWR =   WA_VBRK-NETWR.
            WA_FINOVR-SFAKN = WA_VBRK-SFAKN.
            WA_FINOVR-VKBUR = WA_VBRK-VKBUR.

            READ TABLE IT_MVKE INTO WA_MVKE WITH  KEY MATNR = WA_MARA-MATNR.
            IF SY-SUBRC = 0.
              IF NO_MONTH = '004' .
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '005'.
                WA_FINOVR-MVGR2 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '006'.
                WA_FINOVR-MVGR3 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '007'.
                WA_FINOVR-MVGR4 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '008'.
                WA_FINOVR-MVGR5 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '009'.
                WA_FINOVR-MVGR6 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '010'.
                WA_FINOVR-MVGR7 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '011'.
                WA_FINOVR-MVGR8 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '012'.
                WA_FINOVR-MVGR9 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '001'.
                WA_FINOVR-MVGR10 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '002'.
                WA_FINOVR-MVGR11 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '003'.
                WA_FINOVR-MVGR12 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

*                ELSEIF NO_MONTH = '005'.
*         WA_FINOVR-MVGR2 = WA_MVKE-MVGR1.
*                ELSEIF NO_MONTH = '005'.
*         WA_FINOVR-MVGR2 = WA_MVKE-MVGR1.
*                ELSEIF NO_MONTH = '005'.
*         WA_FINOVR-MVGR2 = WA_MVKE-MVGR1.

              ENDIF.

            ENDIF.

          ENDLOOP.

          APPEND WA_FINOVR TO IT_FINOVR.
          CLEAR WA_FINOVR.

        ENDLOOP.

      ENDLOOP.

*DELETE IT_FINOVR WHERE MVGR1 = 0.

    ENDLOOP.


    IF IT_FINOVR IS INITIAL.
      MESSAGE 'No Data Exists for the Input' TYPE 'S' DISPLAY LIKE 'E'.
      STOP.
    ENDIF.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      READ TABLE IT_TVKBT INTO WA_TVKBT WITH KEY VKBUR = WA_FINOVR-VKBUR.
      IF SY-SUBRC = 0.
        WA_FINOVR-BEZEI = WA_TVKBT-BEZEI.
      ENDIF.
      READ TABLE GT_MAKT INTO WA_MAKT WITH  KEY MATNR = WA_FINOVR-MATNR.
      WA_FINOVR-MAKTX = WA_MAKT-MAKTX.

      READ TABLE GT_KNA1 INTO WA_KNA1 WITH  KEY KUNNR = WA_FINOVR-KUNNR.
      WA_FINOVR-NAME1 = WA_KNA1-NAME1.
      READ TABLE IT_TVM1T INTO WA_TVM1T WITH KEY MVGR1 = WA_FINOVR-MVGR1 .
      IF SY-SUBRC = 0.
        WA_FINOVR-GBEZEI = WA_TVM1T-BEZEI.
      ENDIF.
      READ TABLE IT_TSPAT INTO WA_TSPAT WITH KEY SPART = WA_FINOVR-SPART.
      IF SY-SUBRC = 0.
        WA_FINOVR-VTEXT = WA_TSPAT-VTEXT.
      ENDIF.
      READ TABLE IT_MARA INTO WA_MARA WITH KEY MATNR = WA_FINOVR-MATNR.
      WA_FINOVR-VOLUM = WA_MARA-VOLUM.
      MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING BEZEI MAKTX NAME1 GBEZEI VTEXT VOLUM.
      CLEAR WA_FINOVR.
    ENDLOOP.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      WA_FINOVR-QTY_LTR =  WA_FINOVR-FKIMG * WA_FINOVR-VOLUM.
      WA_FINOVR-VOL0 =  WA_FINOVR-QTY0 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL1 = WA_FINOVR-QTY1 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL2 = WA_FINOVR-QTY2 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL3 = WA_FINOVR-QTY3 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL4 = WA_FINOVR-QTY4 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL5 = WA_FINOVR-QTY5 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL6 = WA_FINOVR-QTY6 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL7 = WA_FINOVR-QTY7 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL8 = WA_FINOVR-QTY8 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL9 = WA_FINOVR-QTY9 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL10 = WA_FINOVR-QTY10 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL11 = WA_FINOVR-QTY11 * WA_FINOVR-VOLUM .


*    LV_COUNT = LV_COUNT + 1 .
*
*   AT END OF MATNR.
*      WA_FINOVR-V_COUNT = LV_COUNT.

      MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING QTY_LTR VOL0  VOL1 VOL2 VOL3 VOL4 VOL5 VOL6 VOL7 VOL8 VOL9 VOL10 VOL11 .
      CLEAR WA_FINOVR.
*    ENDAT.
    ENDLOOP.



    "********************************************* This for Apr Conut Start******************************************************

    SORT IT_FINOVR BY PERNR KUNNR MVGR1.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR1.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL0 NE 0 AND WA_FINOVR-MVGR1 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL0.
        WA_FINOVR-FINAPR_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINAPR_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.

  SORT IT_FINOVR DESCENDING BY PERNR KUNNR MVGR1 FINAPR_VAL.

  LOOP AT IT_FINOVR INTO WA_FINOVR.
    LV_MATAPCOUNT1 = LV_MATAPCOUNT1 + 1.
    ON CHANGE OF WA_FINOVR-MVGR1.
      WA_FINOVR-V_MATAPCOUNT1 = LV_MATAPCOUNT1.
      MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATAPCOUNT1.
      CLEAR WA_FINOVR.
    ENDON.
  ENDLOOP.


  LOOP AT IT_FINOVR INTO WA_FINOVR.
    IF WA_FINOVR-V_MATAPCOUNT1 = 0 AND WA_FINOVR-FINAPR_VAL NE 0.
      DELETE IT_FINOVR.
    ENDIF.
  ENDLOOP.


  SORT IT_FINOVR ASCENDING BY PERNR MVGR1.


  LOOP AT IT_FINOVR INTO WA_FINOVR.

    IF WA_FINOVR-FINAPR_VAL IS NOT INITIAL .

      ON CHANGE OF WA_FINOVR-PERNR OR WA_FINOVR-MVGR1.
        CLEAR LV_CUSTCOUNT1.
      ENDON.
      IF WA_FINOVR-MVGR1 IS NOT INITIAL.
        LV_CUSTCOUNT1 = LV_CUSTCOUNT1 + 1.
      ENDIF.
      WA_FINOVR-APRCUSTCOUNT = LV_CUSTCOUNT1.
      MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING APRCUSTCOUNT.
    ENDIF.
  ENDLOOP.


  SORT IT_FINOVR DESCENDING BY PERNR MVGR1 APRCUSTCOUNT.

  LOOP AT IT_FINOVR INTO WA_FINOVR.
    LV_APRCOUNT = LV_APRCOUNT + 1.
    ON CHANGE OF WA_FINOVR-MVGR1.
      WA_FINOVR-V_APRCOUNT = LV_APRCOUNT.
      MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_APRCOUNT.
      CLEAR WA_FINOVR.
    ENDON.
  ENDLOOP.

  LOOP AT IT_FINOVR INTO WA_FINOVR.
    IF WA_FINOVR-V_APRCOUNT = 0 AND WA_FINOVR-FINAPR_VAL NE 0.
      DELETE IT_FINOVR.
    ENDIF.
  ENDLOOP.

    ""********************************************* This for Apr Conut End******************************************************


    ""********************************************* This for May Conut Start******************************************************

    SORT IT_FINOVR BY PERNR1 KUNNR1 MVGR2.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR2.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL1 NE 0 AND WA_FINOVR-MVGR2 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL1.
        WA_FINOVR-FINMAY_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINMAY_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.

  SORT IT_FINOVR DESCENDING BY PERNR1 KUNNR1 MVGR2 FINMAY_VAL.

  LOOP AT IT_FINOVR INTO WA_FINOVR.
    LV_MATMAYCOUNT1 = LV_MATMAYCOUNT1 + 1.
    ON CHANGE OF WA_FINOVR-MVGR2.
      WA_FINOVR-V_MATMAYCOUNT1 = LV_MATMAYCOUNT1.
      MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATMAYCOUNT1.
      CLEAR WA_FINOVR.
    ENDON.

  ENDLOOP.


  LOOP AT IT_FINOVR INTO WA_FINOVR.
    IF WA_FINOVR-V_MATMAYCOUNT1 = 0 AND WA_FINOVR-FINMAY_VAL NE 0.
      DELETE IT_FINOVR.
    ENDIF.
  ENDLOOP.


  SORT IT_FINOVR ASCENDING BY PERNR1 MVGR2.

  LOOP AT IT_FINOVR INTO WA_FINOVR.

    IF WA_FINOVR-FINMAY_VAL IS NOT INITIAL .

      ON CHANGE OF WA_FINOVR-PERNR1 OR WA_FINOVR-MVGR2.
        CLEAR LV_CUSTCOUNT2.
      ENDON.
      IF WA_FINOVR-MVGR2 IS NOT INITIAL.
        LV_CUSTCOUNT2 = LV_CUSTCOUNT2 + 1.
      ENDIF.
      WA_FINOVR-MAYCUSTCOUNT = LV_CUSTCOUNT2.
      MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING MAYCUSTCOUNT.
    ENDIF.
  ENDLOOP.

  SORT IT_FINOVR DESCENDING BY PERNR1 MVGR2 MAYCUSTCOUNT.

  LOOP AT IT_FINOVR INTO WA_FINOVR.
    LV_MAYCOUNT = LV_MAYCOUNT + 1.
    ON CHANGE OF WA_FINOVR-MVGR2.
      WA_FINOVR-V_MAYCOUNT = LV_MAYCOUNT.
      MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MAYCOUNT.
      CLEAR WA_FINOVR.
    ENDON.
  ENDLOOP.


  LOOP AT IT_FINOVR INTO WA_FINOVR.
    IF WA_FINOVR-V_MAYCOUNT = 0 AND WA_FINOVR-FINMAY_VAL NE 0.
      DELETE IT_FINOVR.
    ENDIF.
  ENDLOOP.

    ""********************************************* This for MAY Conut End******************************************************


    ""********************************************* This for June Conut Start******************************************************

    SORT IT_FINOVR BY PERNR2 KUNNR2 MVGR3.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR3.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL2 NE 0 AND WA_FINOVR-MVGR3 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL2.
        WA_FINOVR-FINJUN_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINJUN_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.



  SORT IT_FINOVR DESCENDING BY PERNR2 KUNNR2 MVGR3 FINJUN_VAL.

  LOOP AT IT_FINOVR INTO WA_FINOVR.
    LV_MATJUNCOUNT1 = LV_MATJUNCOUNT1 + 1.
    ON CHANGE OF WA_FINOVR-MVGR3.
      WA_FINOVR-V_MATJUNCOUNT1 = LV_MATJUNCOUNT1.
      MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATJUNCOUNT1.
      CLEAR WA_FINOVR.
    ENDON.

  ENDLOOP.



  LOOP AT IT_FINOVR INTO WA_FINOVR.
    IF WA_FINOVR-V_MATJUNCOUNT1 = 0 AND WA_FINOVR-FINJUN_VAL NE 0.
      DELETE IT_FINOVR.
    ENDIF.
  ENDLOOP.


  SORT IT_FINOVR ASCENDING BY PERNR2 MVGR3.

  LOOP AT IT_FINOVR INTO WA_FINOVR.

    IF WA_FINOVR-FINJUN_VAL IS NOT INITIAL .

      ON CHANGE OF WA_FINOVR-PERNR2 OR WA_FINOVR-MVGR3.
        CLEAR LV_CUSTCOUNT3.
      ENDON.
      IF WA_FINOVR-MVGR3 IS NOT INITIAL.
        LV_CUSTCOUNT3 = LV_CUSTCOUNT3 + 1.
      ENDIF.
      WA_FINOVR-JUNCUSTCOUNT = LV_CUSTCOUNT3.
      MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING JUNCUSTCOUNT.
    ENDIF.
  ENDLOOP.


  SORT IT_FINOVR DESCENDING BY PERNR2 MVGR3 JUNCUSTCOUNT.

  LOOP AT IT_FINOVR INTO WA_FINOVR.
    LV_JUNCOUNT = LV_JUNCOUNT + 1.
    ON CHANGE OF WA_FINOVR-MVGR3.
      WA_FINOVR-V_JUNCOUNT = LV_JUNCOUNT.
      MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_JUNCOUNT.
      CLEAR WA_FINOVR.
    ENDON.
  ENDLOOP.


  LOOP AT IT_FINOVR INTO WA_FINOVR.
    IF WA_FINOVR-V_JUNCOUNT = 0 AND WA_FINOVR-FINJUN_VAL NE 0.
      DELETE IT_FINOVR.
    ENDIF.
  ENDLOOP.

    ""********************************************* This for June Conut Ending******************************************************

    ""********************************************* This for July Conut Start******************************************************


    SORT IT_FINOVR BY PERNR3 KUNNR3 MVGR4.



    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR4.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL3 NE 0 AND WA_FINOVR-MVGR4 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL3.
        WA_FINOVR-FINJULY_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINJULY_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR3 KUNNR3 MVGR4 FINJULY_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATJULYCOUNT1 = LV_MATJULYCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR4.
        WA_FINOVR-V_MATJULYCOUNT1 = LV_MATJULYCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATJULYCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.

    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATJULYCOUNT1 = 0 AND WA_FINOVR-FINJULY_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR ASCENDING BY PERNR3 MVGR4.

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINJULY_VAL IS NOT INITIAL .

        ON CHANGE OF WA_FINOVR-PERNR3 OR WA_FINOVR-MVGR4.
          CLEAR LV_CUSTCOUNT4.
        ENDON.
        IF WA_FINOVR-MVGR4 IS NOT INITIAL.
          LV_CUSTCOUNT4 = LV_CUSTCOUNT4 + 1.
        ENDIF.
        WA_FINOVR-JULYCUSTCOUNT = LV_CUSTCOUNT4.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING JULYCUSTCOUNT.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR3 MVGR4 JULYCUSTCOUNT.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_JULYCOUNT = LV_JULYCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR4.
        WA_FINOVR-V_JULYCOUNT = LV_JULYCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_JULYCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_JULYCOUNT = 0 AND WA_FINOVR-FINJULY_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.

    ""********************************************* This for July Conut Ending******************************************************

    ""********************************************* This for August Conut Start******************************************************


    SORT IT_FINOVR BY PERNR4 KUNNR4 MVGR5.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR5.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL4 NE 0 AND WA_FINOVR-MVGR5 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL4.
        WA_FINOVR-FINAUG_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINAUG_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR4 KUNNR4 MVGR5 FINAUG_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATAUGCOUNT1 = LV_MATAUGCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR5.
        WA_FINOVR-V_MATAUGCOUNT1 = LV_MATAUGCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATAUGCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.

    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATAUGCOUNT1 = 0 AND WA_FINOVR-FINAUG_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR ASCENDING BY PERNR4 MVGR5.

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINAUG_VAL IS NOT INITIAL.

        ON CHANGE OF WA_FINOVR-PERNR4 OR WA_FINOVR-MVGR5.
          CLEAR LV_CUSTCOUNT5.
        ENDON.
        IF WA_FINOVR-MVGR5 IS NOT INITIAL.
          LV_CUSTCOUNT5 = LV_CUSTCOUNT5 + 1.
        ENDIF.
        WA_FINOVR-AUGCUSTCOUNT = LV_CUSTCOUNT5.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING AUGCUSTCOUNT.
      ENDIF.
    ENDLOOP.



    SORT IT_FINOVR DESCENDING BY PERNR4 MVGR5 AUGCUSTCOUNT.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_AUGCOUNT = LV_AUGCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR5.
        WA_FINOVR-V_AUGCOUNT = LV_AUGCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_AUGCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_AUGCOUNT = 0 AND WA_FINOVR-FINAUG_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    "********************************************* This for August Conut Ending******************************************************

    "********************************************* This for Sep Conut Start******************************************************

    SORT IT_FINOVR BY PERNR5 KUNNR5 MVGR6.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR6.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL5 NE 0 AND WA_FINOVR-MVGR6 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL5.
        WA_FINOVR-FINSEP_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINSEP_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.



    SORT IT_FINOVR DESCENDING BY PERNR5 KUNNR5 MVGR6 FINSEP_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATSEPCOUNT1 = LV_MATSEPCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR6.
        WA_FINOVR-V_MATSEPCOUNT1 = LV_MATSEPCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATSEPCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.

    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATSEPCOUNT1 = 0 AND WA_FINOVR-FINSEP_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.



    SORT IT_FINOVR ASCENDING BY PERNR5 MVGR6.

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINSEP_VAL IS NOT INITIAL.

        ON CHANGE OF WA_FINOVR-PERNR5 OR WA_FINOVR-MVGR6.
          CLEAR LV_CUSTCOUNT6.
        ENDON.
        IF WA_FINOVR-MVGR6 IS NOT INITIAL.
          LV_CUSTCOUNT6 = LV_CUSTCOUNT6 + 1.
        ENDIF.
        WA_FINOVR-SEPCUSTCOUNT = LV_CUSTCOUNT6.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING SEPCUSTCOUNT.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR5 MVGR6 SEPCUSTCOUNT.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_SEPCOUNT = LV_SEPCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR6.
        WA_FINOVR-V_SEPCOUNT = LV_SEPCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_SEPCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_SEPCOUNT = 0 AND WA_FINOVR-FINSEP_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    "********************************************* This for SEP Conut END******************************************************

    "********************************************* This for OCT  Conut Start******************************************************


    SORT IT_FINOVR BY PERNR6 KUNNR6 MVGR7.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR7.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL6 NE 0 AND WA_FINOVR-MVGR7 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL6.
        WA_FINOVR-FINOCT_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINOCT_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR6 KUNNR6 MVGR7 FINOCT_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATOCTCOUNT1 = LV_MATOCTCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR7.
        WA_FINOVR-V_MATOCTCOUNT1 = LV_MATOCTCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATOCTCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.

    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATOCTCOUNT1 = 0 AND WA_FINOVR-FINOCT_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR ASCENDING BY PERNR6 MVGR7.

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINOCT_VAL IS NOT INITIAL.

        ON CHANGE OF WA_FINOVR-PERNR6 OR WA_FINOVR-MVGR7.
          CLEAR LV_CUSTCOUNT7.
        ENDON.
        IF WA_FINOVR-MVGR7 IS NOT INITIAL.
          LV_CUSTCOUNT7 = LV_CUSTCOUNT7 + 1.
        ENDIF.
        WA_FINOVR-OCTCUSTCOUNT = LV_CUSTCOUNT7.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING OCTCUSTCOUNT.
      ENDIF.
    ENDLOOP.



    SORT IT_FINOVR DESCENDING BY PERNR6 MVGR7 OCTCUSTCOUNT.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_OCTCOUNT = LV_OCTCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR7.
        WA_FINOVR-V_OCTCOUNT = LV_OCTCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_OCTCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.



    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_OCTCOUNT = 0 AND WA_FINOVR-FINOCT_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    "********************************************* This for Oct Conut Ending******************************************************



    "********************************************* This for Nov  Conut Start******************************************************

    SORT IT_FINOVR BY PERNR7 KUNNR7 MVGR8.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR8.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL7 NE 0 AND WA_FINOVR-MVGR8 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL7.
        WA_FINOVR-FINNOV_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINNOV_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR7 KUNNR7 MVGR8 FINNOV_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATNOVCOUNT1 = LV_MATNOVCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR8.
        WA_FINOVR-V_MATNOVCOUNT1 = LV_MATNOVCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATNOVCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.

    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATNOVCOUNT1 = 0 AND WA_FINOVR-FINNOV_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR ASCENDING BY PERNR7 MVGR8.

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINNOV_VAL IS NOT INITIAL.

        ON CHANGE OF WA_FINOVR-PERNR7 OR WA_FINOVR-MVGR8.
          CLEAR LV_CUSTCOUNT8.
        ENDON.
        IF WA_FINOVR-MVGR8 IS NOT INITIAL.
          LV_CUSTCOUNT8 = LV_CUSTCOUNT8 + 1.
        ENDIF.
        WA_FINOVR-NOVCUSTCOUNT = LV_CUSTCOUNT8.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING NOVCUSTCOUNT.
      ENDIF.
    ENDLOOP.



    SORT IT_FINOVR DESCENDING BY PERNR7 MVGR8 NOVCUSTCOUNT.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_NOVCOUNT = LV_NOVCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR8.
        WA_FINOVR-V_NOVCOUNT = LV_NOVCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_NOVCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.



    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_NOVCOUNT = 0 AND WA_FINOVR-FINNOV_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    "********************************************* This for Nov Conut Ending******************************************************
    "********************************************* This for Dec Conut Start******************************************************


    SORT IT_FINOVR BY PERNR8 KUNNR8 MVGR9.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR9.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL8 NE 0 AND WA_FINOVR-MVGR9 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL8.
        WA_FINOVR-FINDEC_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINDEC_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.




    SORT IT_FINOVR DESCENDING BY PERNR8 KUNNR8 MVGR9 FINDEC_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATDECCOUNT1 = LV_MATDECCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR9.
        WA_FINOVR-V_MATDECCOUNT1 = LV_MATDECCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATDECCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.

    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATDECCOUNT1 = 0 AND WA_FINOVR-FINDEC_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR ASCENDING BY PERNR8 MVGR9.

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINDEC_VAL IS NOT INITIAL.

        ON CHANGE OF WA_FINOVR-PERNR8 OR WA_FINOVR-MVGR9.
          CLEAR LV_CUSTCOUNT9.
        ENDON.
        IF WA_FINOVR-MVGR9 IS NOT INITIAL.
          LV_CUSTCOUNT9 = LV_CUSTCOUNT9 + 1.
        ENDIF.
        WA_FINOVR-DECCUSTCOUNT = LV_CUSTCOUNT9.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING DECCUSTCOUNT.
      ENDIF.
    ENDLOOP.



    SORT IT_FINOVR DESCENDING BY PERNR8 MVGR9 DECCUSTCOUNT.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_DECCOUNT = LV_DECCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR9.
        WA_FINOVR-V_DECCOUNT = LV_DECCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_DECCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.



    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_DECCOUNT = 0 AND WA_FINOVR-FINDEC_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    "********************************************* This for Dec Conut Ending******************************************************



    "********************************************* This for Jan Conut Start******************************************************


    SORT IT_FINOVR BY PERNR9 KUNNR9 MVGR10.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR10.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL9 NE 0 AND WA_FINOVR-MVGR10 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL9.
        WA_FINOVR-FINJAN_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINJAN_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.




    SORT IT_FINOVR DESCENDING BY PERNR9 KUNNR9 MVGR10 FINJAN_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATJANCOUNT1 = LV_MATJANCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR10.
        WA_FINOVR-V_MATJANCOUNT1 = LV_MATJANCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATJANCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.

    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATJANCOUNT1 = 0 AND WA_FINOVR-FINJAN_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR ASCENDING BY PERNR9 MVGR10.

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINJAN_VAL IS NOT INITIAL.

        ON CHANGE OF WA_FINOVR-PERNR9 OR WA_FINOVR-MVGR10.
          CLEAR LV_CUSTCOUNT10.
        ENDON.
        IF WA_FINOVR-MVGR10 IS NOT INITIAL.
          LV_CUSTCOUNT10 = LV_CUSTCOUNT10 + 1.
        ENDIF.
        WA_FINOVR-JANCUSTCOUNT = LV_CUSTCOUNT10.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING JANCUSTCOUNT.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR9 MVGR10 JANCUSTCOUNT.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_JANCOUNT = LV_JANCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR10.
        WA_FINOVR-V_JANCOUNT = LV_JANCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_JANCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_JANCOUNT = 0 AND WA_FINOVR-FINJAN_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    "********************************************* This for Jan Conut Ending******************************************************

    "********************************************* This for Feb Conut Start******************************************************

    SORT IT_FINOVR BY PERNR10 KUNNR10 MVGR11.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR11.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL10 NE 0 AND WA_FINOVR-MVGR11 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL10.
        WA_FINOVR-FINFEB_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINFEB_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR10 KUNNR10 MVGR11 FINFEB_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATFEBCOUNT1 = LV_MATFEBCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR11.
        WA_FINOVR-V_MATFEBCOUNT1 = LV_MATFEBCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATFEBCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.

    ENDLOOP.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATFEBCOUNT1 = 0 AND WA_FINOVR-FINFEB_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.

    SORT IT_FINOVR ASCENDING BY PERNR10 MVGR11.


    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINFEB_VAL IS NOT INITIAL .

        ON CHANGE OF WA_FINOVR-PERNR10 OR WA_FINOVR-MVGR11.
          CLEAR LV_CUSTCOUNT11.
        ENDON.
        IF WA_FINOVR-MVGR11 IS NOT INITIAL.
          LV_CUSTCOUNT11 = LV_CUSTCOUNT11 + 1.
        ENDIF.
        WA_FINOVR-FEBCUSTCOUNT = LV_CUSTCOUNT11.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FEBCUSTCOUNT.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR10 MVGR11 FEBCUSTCOUNT.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_FEBCOUNT = LV_FEBCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR11.
        WA_FINOVR-V_FEBCOUNT = LV_FEBCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_FEBCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_FEBCOUNT = 0 AND WA_FINOVR-FINFEB_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    "********************************************* This for Feb Conut Ending******************************************************
    "********************************************* This for Mar Conut Start******************************************************

    SORT IT_FINOVR BY PERNR11 KUNNR11 MVGR12.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR12.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL11 NE 0 AND WA_FINOVR-MVGR12 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL11.
        WA_FINOVR-FINMAR_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINMAR_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR11 KUNNR11 MVGR12 FINMAR_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATMARCOUNT1 = LV_MATMARCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR12.
        WA_FINOVR-V_MATMARCOUNT1 = LV_MATMARCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATMARCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.

    ENDLOOP.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATMARCOUNT1 = 0 AND WA_FINOVR-FINMAR_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.

    SORT IT_FINOVR ASCENDING BY PERNR11 MVGR12.

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINMAR_VAL IS NOT INITIAL.

        ON CHANGE OF WA_FINOVR-PERNR11 OR WA_FINOVR-MVGR12.
          CLEAR LV_CUSTCOUNT12.
        ENDON.
        IF WA_FINOVR-MVGR12 IS NOT INITIAL.
          LV_CUSTCOUNT12 = LV_CUSTCOUNT12 + 1.
        ENDIF.
        WA_FINOVR-MARCUSTCOUNT = LV_CUSTCOUNT12.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING MARCUSTCOUNT.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR11 MVGR12 MARCUSTCOUNT.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MARCOUNT = LV_MARCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR12.
        WA_FINOVR-V_MARCOUNT = LV_MARCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MARCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MARCOUNT = 0 AND WA_FINOVR-FINMAR_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.

    "********************************************* This for Feb Conut Ending******************************************************

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-MVGR1 EQ ''.

        IF WA_FINOVR-MVGR1 = 0 AND WA_FINOVR-APRCUSTCOUNT = 0 AND WA_FINOVR-MAYCUSTCOUNT = 0 AND WA_FINOVR-JUNCUSTCOUNT = 0 AND WA_FINOVR-JULYCUSTCOUNT = 0 AND
          WA_FINOVR-AUGCUSTCOUNT = 0 AND WA_FINOVR-SEPCUSTCOUNT = 0 AND WA_FINOVR-OCTCUSTCOUNT = 0 AND WA_FINOVR-NOVCUSTCOUNT = 0 AND
          WA_FINOVR-DECCUSTCOUNT = 0 AND WA_FINOVR-JANCUSTCOUNT = 0 AND WA_FINOVR-FEBCUSTCOUNT = 0 AND WA_FINOVR-MARCUSTCOUNT = 0.

          DELETE IT_FINOVR.

        ENDIF.

      ENDIF.


    ENDLOOP.


    SORT IT_FINOVR BY VKBUR BEZEI PERNR SO_NAME MVGR1.


*
*  BREAK-POINT .
*
*  LOOP AT IT_FINOVR INTO WA_FINOVR.
*
*    ON CHANGE OF WA_FINOVR-MVGR1.
*
*      CLEAR LV_SUM1.
*
*    ENDON.
*
*    IF WA_FINOVR-MVGR1 IS NOT INITIAL.
*
*      LV_SUM1 = LV_SUM1 + WA_FINOVR-JUNCUSTCOUNT.
*      WA_FINOVR-JUNCUSTCOUNT1 = LV_SUM1.
*
*
*    MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING JUNCUSTCOUNT1.
*    CLEAR WA_FINOVR.
*
*    ENDIF.
*
*  ENDLOOP.



    LOOP AT IT_FINOVR INTO WA_FINOVR.

      WA_FINAL-MVGR1 =  WA_FINOVR-MVGR1.
      WA_FINAL-VKBUR =  WA_FINOVR-VKBUR.
      WA_FINAL-BEZEI =  WA_FINOVR-BEZEI.
      WA_FINAL-PERNR =  WA_FINOVR-PERNR.
      WA_FINAL-SO_NAME = WA_FINOVR-SO_NAME.
      WA_FINAL-GBEZEI =  WA_FINOVR-GBEZEI.
      WA_FINAL-MVGR0 =  WA_FINOVR-MVGR1.
      WA_FINAL-TARGET = 0.

      WA_FINAL-PLAN = 0.
      WA_FINAL-PLAN1 = 0.
      WA_FINAL-PLAN2 = 0.

      WA_FINAL-JANACH = 0.
      WA_FINAL-FEBACH = 0.
      WA_FINAL-MARACH = 0.

      WA_FINAL-JANACH1 = 0.
      WA_FINAL-FEBACH1 = 0.
      WA_FINAL-MARACH1 = 0.

      MOVE WA_FINOVR-FINAPR_VAL TO WA_FINAL-FINAPR_VAL.
      MOVE WA_FINOVR-FINMAY_VAL TO WA_FINAL-FINMAY_VAL.
      MOVE WA_FINOVR-FINJUN_VAL TO WA_FINAL-FINJUN_VAL.
      MOVE WA_FINOVR-FINJULY_VAL TO WA_FINAL-FINJULY_VAL.
      MOVE WA_FINOVR-FINAUG_VAL TO WA_FINAL-FINAUG_VAL.
      MOVE WA_FINOVR-FINSEP_VAL TO WA_FINAL-FINSEP_VAL.

      MOVE WA_FINOVR-FINOCT_VAL TO WA_FINAL-FINOCT_VAL.
      MOVE WA_FINOVR-FINNOV_VAL TO WA_FINAL-FINNOV_VAL.
      MOVE WA_FINOVR-FINDEC_VAL TO WA_FINAL-FINDEC_VAL.


      MOVE WA_FINOVR-FINJAN_VAL TO WA_FINAL-FINJAN_VAL.
      MOVE WA_FINOVR-FINFEB_VAL TO WA_FINAL-FINFEB_VAL.
      MOVE WA_FINOVR-FINMAR_VAL TO WA_FINAL-FINMAR_VAL.

      COLLECT WA_FINAL INTO GT_FINAL.

    ENDLOOP.


    LOOP AT GT_FINAL INTO WA_FINAL.

      ON CHANGE OF WA_FINAL-PERNR.
        CLEAR TARGET1.
      ENDON.

      IF WA_FINAL-MVGR1 EQ '31'.

        TARGET1 = TARGET1 + WA_FINAL-FINAPR_VAL + WA_FINAL-FINMAY_VAL + WA_FINAL-FINJUN_VAL + WA_FINAL-FINJULY_VAL + WA_FINAL-FINAUG_VAL + WA_FINAL-FINSEP_VAL + WA_FINAL-FINOCT_VAL + WA_FINAL-FINNOV_VAL + WA_FINAL-FINDEC_VAL .

        TARGET1 = TARGET1 / 9.
        MOVE  TARGET1 TO WA_FINAL-TARGET.
        MODIFY GT_FINAL FROM WA_FINAL TRANSPORTING TARGET.
        CLEAR WA_FINAL.

      ENDIF.

    ENDLOOP.


    SORT GT_FINAL DESCENDING BY PERNR TARGET.

  ENDIF.




  IF PRD_AVG = 'X'.                              """"REPORTTTTTTTTTTTTTTT  3333333333333333333333

    LOOP AT GT_PA0002 INTO WA_PA0002.

      LOOP AT GT_KNVP INTO WA_KNVP WHERE PERNR = WA_PA0002-PERNR AND PERNR NE 0.

        LOOP AT IT_VBRK INTO WA_VBRK WHERE  KUNAG = WA_KNVP-KUNNR.

          LOOP AT IT_MARA INTO WA_MARA WHERE MATNR = WA_VBRK-MATNR.

*        WA_FINOVR-KUNNR = WA_VBRK-KUNAG .

            WA_FINOVR-MATNR = WA_MARA-MATNR.

            WA_FINOVR-NETWR =  WA_FINOVR-NETWR + WA_VBRK-NETWR.
            WA_FINOVR-FKIMG  =   WA_FINOVR-FKIMG + WA_VBRK-FKIMG.

            CALL FUNCTION 'DATE_TO_PERIOD_CONVERT'
              EXPORTING
                I_DATE         = WA_VBRK-FKDAT
                I_MONMIT       = 00
                I_PERIV        = 'K4'
              IMPORTING
                E_BUPER        = NO_MONTH
                E_GJAHR        = D_YEAR
              EXCEPTIONS
                INPUT_FALSE    = 1
                T009_NOTFOUND  = 2
                T009B_NOTFOUND = 3
                OTHERS         = 4.

            IF NO_MONTH = '004' .
              WA_FINOVR-QTY0 =  WA_FINOVR-QTY0 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT0 =  WA_FINOVR-AMT0 + WA_VBRK-NETWR.

              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.
            ELSEIF NO_MONTH = '005'.

              WA_FINOVR-QTY1 =  WA_FINOVR-QTY1 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT1 =  WA_FINOVR-AMT1 + WA_VBRK-NETWR.

              WA_FINOVR-KUNNR1 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR1 = WA_PA0002-PERNR.
              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.

            ELSEIF NO_MONTH = '006'.
              WA_FINOVR-QTY2 =  WA_FINOVR-QTY2 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT2 =  WA_FINOVR-AMT2 + WA_VBRK-NETWR.

              WA_FINOVR-KUNNR2 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR2 = WA_PA0002-PERNR.
              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.

            ELSEIF NO_MONTH = '007'.
              WA_FINOVR-QTY3 =  WA_FINOVR-QTY3 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT3 =  WA_FINOVR-AMT3 + WA_VBRK-NETWR.

              WA_FINOVR-KUNNR3 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR3 = WA_PA0002-PERNR.
              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.

            ELSEIF NO_MONTH = '008'.
              WA_FINOVR-QTY4 =  WA_FINOVR-QTY4 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT4 = WA_FINOVR-AMT4 +  WA_VBRK-NETWR.

              WA_FINOVR-KUNNR4 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR4 = WA_PA0002-PERNR.
              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.

            ELSEIF NO_MONTH = '009'.
              WA_FINOVR-QTY5 =  WA_FINOVR-QTY5 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT5 =  WA_FINOVR-AMT5 +   WA_VBRK-NETWR.

              WA_FINOVR-KUNNR5 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR5 = WA_PA0002-PERNR.
              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.

            ELSEIF NO_MONTH = '010'.
              WA_FINOVR-QTY6 =  WA_FINOVR-QTY6 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT6 =  WA_FINOVR-AMT6 +  WA_VBRK-NETWR.

              WA_FINOVR-KUNNR6 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR6 = WA_PA0002-PERNR.

              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.

            ELSEIF NO_MONTH = '011'.
              WA_FINOVR-QTY7 =  WA_FINOVR-QTY7 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT7 =  WA_FINOVR-AMT7 + WA_VBRK-NETWR.

              WA_FINOVR-KUNNR7 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR7 = WA_PA0002-PERNR.

              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.

            ELSEIF NO_MONTH = '012'.
              WA_FINOVR-QTY8 =  WA_FINOVR-QTY8 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT8 =  WA_FINOVR-AMT8 + WA_VBRK-NETWR.

              WA_FINOVR-KUNNR8 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR8 = WA_PA0002-PERNR.

              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.

            ELSEIF NO_MONTH = '001'.
              WA_FINOVR-QTY9 =  WA_FINOVR-QTY9 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT9 = WA_FINOVR-AMT9 + WA_VBRK-NETWR.

              WA_FINOVR-KUNNR9 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR9 = WA_PA0002-PERNR.

              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.

            ELSEIF NO_MONTH = '002'.
              WA_FINOVR-QTY10 =  WA_FINOVR-QTY10 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT10 =  WA_FINOVR-AMT10 + WA_VBRK-NETWR.

              WA_FINOVR-KUNNR10 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR10 = WA_PA0002-PERNR.

              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.


            ELSEIF NO_MONTH = '003'.
              WA_FINOVR-QTY11 =  WA_FINOVR-QTY11 +  WA_VBRK-FKIMG .
              WA_FINOVR-AMT11 =  WA_FINOVR-AMT11 + WA_VBRK-NETWR.

              WA_FINOVR-KUNNR11 = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR11 = WA_PA0002-PERNR.

              WA_FINOVR-KUNNR = WA_VBRK-KUNAG .
              WA_FINOVR-PERNR = WA_PA0002-PERNR.
              WA_FINOVR-SO_NAME = WA_PA0002-VORNA.

            ENDIF.

            WA_FINOVR-FKDAT = WA_VBRK-FKDAT.
            WA_FINOVR-SPART = WA_VBRK-SPART.
            WA_FINOVR-FKART = WA_VBRK-FKART.
            WA_FINOVR-KUNAG = WA_VBRK-KUNAG.
            WA_FINOVR-KUNRG = WA_VBRK-KUNRG.
            WA_FINOVR-VKORG = WA_VBRK-VKORG.
            WA_FINOVR-VTWEG = WA_VBRK-VTWEG.
*        WA_FINOVR-NETWR =   WA_VBRK-NETWR.
            WA_FINOVR-SFAKN = WA_VBRK-SFAKN.
            WA_FINOVR-VKBUR = WA_VBRK-VKBUR.

            READ TABLE IT_MVKE INTO WA_MVKE WITH  KEY MATNR = WA_MARA-MATNR.
            IF SY-SUBRC = 0.
              IF NO_MONTH = '004' .
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '005'.
                WA_FINOVR-MVGR2 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '006'.
                WA_FINOVR-MVGR3 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '007'.
                WA_FINOVR-MVGR4 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '008'.
                WA_FINOVR-MVGR5 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '009'.
                WA_FINOVR-MVGR6 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '010'.
                WA_FINOVR-MVGR7 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '011'.
                WA_FINOVR-MVGR8 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '012'.
                WA_FINOVR-MVGR9 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '001'.
                WA_FINOVR-MVGR10 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '002'.
                WA_FINOVR-MVGR11 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

              ELSEIF NO_MONTH = '003'.
                WA_FINOVR-MVGR12 = WA_MVKE-MVGR1.
                WA_FINOVR-MVGR1 = WA_MVKE-MVGR1.

*                ELSEIF NO_MONTH = '005'.
*         WA_FINOVR-MVGR2 = WA_MVKE-MVGR1.
*                ELSEIF NO_MONTH = '005'.
*         WA_FINOVR-MVGR2 = WA_MVKE-MVGR1.
*                ELSEIF NO_MONTH = '005'.
*         WA_FINOVR-MVGR2 = WA_MVKE-MVGR1.

              ENDIF.

            ENDIF.

          ENDLOOP.

          APPEND WA_FINOVR TO IT_FINOVR.
          CLEAR WA_FINOVR.

        ENDLOOP.

      ENDLOOP.

*DELETE IT_FINOVR WHERE MVGR1 = 0.

    ENDLOOP.


    IF IT_FINOVR IS INITIAL.
      MESSAGE 'No Data Exists for the Input' TYPE 'S' DISPLAY LIKE 'E'.
      STOP.
    ENDIF.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      READ TABLE IT_TVKBT INTO WA_TVKBT WITH KEY VKBUR = WA_FINOVR-VKBUR.
      IF SY-SUBRC = 0.
        WA_FINOVR-BEZEI = WA_TVKBT-BEZEI.
      ENDIF.
      READ TABLE GT_MAKT INTO WA_MAKT WITH  KEY MATNR = WA_FINOVR-MATNR.
      WA_FINOVR-MAKTX = WA_MAKT-MAKTX.

      READ TABLE GT_KNA1 INTO WA_KNA1 WITH  KEY KUNNR = WA_FINOVR-KUNNR.
      WA_FINOVR-NAME1 = WA_KNA1-NAME1.
      READ TABLE IT_TVM1T INTO WA_TVM1T WITH KEY MVGR1 = WA_FINOVR-MVGR1 .
      IF SY-SUBRC = 0.
        WA_FINOVR-GBEZEI = WA_TVM1T-BEZEI.
      ENDIF.
      READ TABLE IT_TSPAT INTO WA_TSPAT WITH KEY SPART = WA_FINOVR-SPART.
      IF SY-SUBRC = 0.
        WA_FINOVR-VTEXT = WA_TSPAT-VTEXT.
      ENDIF.
      READ TABLE IT_MARA INTO WA_MARA WITH KEY MATNR = WA_FINOVR-MATNR.
      WA_FINOVR-VOLUM = WA_MARA-VOLUM.
      MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING BEZEI MAKTX NAME1 GBEZEI VTEXT VOLUM.
      CLEAR WA_FINOVR.
    ENDLOOP.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      WA_FINOVR-QTY_LTR =  WA_FINOVR-FKIMG * WA_FINOVR-VOLUM.
      WA_FINOVR-VOL0 =  WA_FINOVR-QTY0 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL1 = WA_FINOVR-QTY1 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL2 = WA_FINOVR-QTY2 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL3 = WA_FINOVR-QTY3 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL4 = WA_FINOVR-QTY4 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL5 = WA_FINOVR-QTY5 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL6 = WA_FINOVR-QTY6 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL7 = WA_FINOVR-QTY7 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL8 = WA_FINOVR-QTY8 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL9 = WA_FINOVR-QTY9 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL10 = WA_FINOVR-QTY10 * WA_FINOVR-VOLUM .
      WA_FINOVR-VOL11 = WA_FINOVR-QTY11 * WA_FINOVR-VOLUM .


*    LV_COUNT = LV_COUNT + 1 .
*
*   AT END OF MATNR.
*      WA_FINOVR-V_COUNT = LV_COUNT.

      MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING QTY_LTR VOL0  VOL1 VOL2 VOL3 VOL4 VOL5 VOL6 VOL7 VOL8 VOL9 VOL10 VOL11 .
      CLEAR WA_FINOVR.
*    ENDAT.
    ENDLOOP.



    "********************************************* This for Apr Conut Start******************************************************

    SORT IT_FINOVR BY PERNR KUNNR MVGR1.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR1.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL0 NE 0 AND WA_FINOVR-MVGR1 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL0.
        WA_FINOVR-FINAPR_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINAPR_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.

    SORT IT_FINOVR DESCENDING BY PERNR KUNNR MVGR1 FINAPR_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATAPCOUNT1 = LV_MATAPCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR1.
        WA_FINOVR-V_MATAPCOUNT1 = LV_MATAPCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATAPCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATAPCOUNT1 = 0 AND WA_FINOVR-FINAPR_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR ASCENDING BY PERNR MVGR1.


    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINAPR_VAL IS NOT INITIAL." AND WA_FINOVR-FINAPR_VAL > 18.

        ON CHANGE OF WA_FINOVR-PERNR OR WA_FINOVR-MVGR1.
          CLEAR LV_CUSTCOUNT1.
        ENDON.
        IF WA_FINOVR-MVGR1 IS NOT INITIAL.
          LV_CUSTCOUNT1 = LV_CUSTCOUNT1 + 1.
        ENDIF.
        WA_FINOVR-APRCUSTCOUNT = LV_CUSTCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING APRCUSTCOUNT.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR MVGR1 APRCUSTCOUNT.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_APRCOUNT = LV_APRCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR1.
        WA_FINOVR-V_APRCOUNT = LV_APRCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_APRCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_APRCOUNT = 0 AND WA_FINOVR-FINAPR_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.

    ""********************************************* This for Apr Conut End******************************************************


    ""********************************************* This for May Conut Start******************************************************

    SORT IT_FINOVR BY PERNR1 KUNNR1 MVGR2.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR2.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL1 NE 0 AND WA_FINOVR-MVGR2 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL1.
        WA_FINOVR-FINMAY_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINMAY_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.

    SORT IT_FINOVR DESCENDING BY PERNR1 KUNNR1 MVGR2 FINMAY_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATMAYCOUNT1 = LV_MATMAYCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR2.
        WA_FINOVR-V_MATMAYCOUNT1 = LV_MATMAYCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATMAYCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.

    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATMAYCOUNT1 = 0 AND WA_FINOVR-FINMAY_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR ASCENDING BY PERNR1 MVGR2.

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINMAY_VAL IS NOT INITIAL ."AND WA_FINOVR-FINMAY_VAL > 18.

        ON CHANGE OF WA_FINOVR-PERNR1 OR WA_FINOVR-MVGR2.
          CLEAR LV_CUSTCOUNT2.
        ENDON.
        IF WA_FINOVR-MVGR2 IS NOT INITIAL.
          LV_CUSTCOUNT2 = LV_CUSTCOUNT2 + 1.
        ENDIF.
        WA_FINOVR-MAYCUSTCOUNT = LV_CUSTCOUNT2.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING MAYCUSTCOUNT.
      ENDIF.
    ENDLOOP.

    SORT IT_FINOVR DESCENDING BY PERNR1 MVGR2 MAYCUSTCOUNT.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MAYCOUNT = LV_MAYCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR2.
        WA_FINOVR-V_MAYCOUNT = LV_MAYCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MAYCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MAYCOUNT = 0 AND WA_FINOVR-FINMAY_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.

    ""********************************************* This for MAY Conut End******************************************************


    ""********************************************* This for June Conut Start******************************************************

    SORT IT_FINOVR BY PERNR2 KUNNR2 MVGR3.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR3.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL2 NE 0 AND WA_FINOVR-MVGR3 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL2.
        WA_FINOVR-FINJUN_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINJUN_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.



    SORT IT_FINOVR DESCENDING BY PERNR2 KUNNR2 MVGR3 FINJUN_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATJUNCOUNT1 = LV_MATJUNCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR3.
        WA_FINOVR-V_MATJUNCOUNT1 = LV_MATJUNCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATJUNCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.

    ENDLOOP.



    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATJUNCOUNT1 = 0 AND WA_FINOVR-FINJUN_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR ASCENDING BY PERNR2 MVGR3.

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINJUN_VAL IS NOT INITIAL." AND WA_FINOVR-FINJUN_VAL > 18.

        ON CHANGE OF WA_FINOVR-PERNR2 OR WA_FINOVR-MVGR3.
          CLEAR LV_CUSTCOUNT3.
        ENDON.
        IF WA_FINOVR-MVGR3 IS NOT INITIAL.
          LV_CUSTCOUNT3 = LV_CUSTCOUNT3 + 1.
        ENDIF.
        WA_FINOVR-JUNCUSTCOUNT = LV_CUSTCOUNT3.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING JUNCUSTCOUNT.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR2 MVGR3 JUNCUSTCOUNT.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_JUNCOUNT = LV_JUNCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR3.
        WA_FINOVR-V_JUNCOUNT = LV_JUNCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_JUNCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_JUNCOUNT = 0 AND WA_FINOVR-FINJUN_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.

    ""********************************************* This for June Conut Ending******************************************************

    ""********************************************* This for July Conut Start******************************************************


    SORT IT_FINOVR BY PERNR3 KUNNR3 MVGR4.



    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR4.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL3 NE 0 AND WA_FINOVR-MVGR4 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL3.
        WA_FINOVR-FINJULY_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINJULY_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR3 KUNNR3 MVGR4 FINJULY_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATJULYCOUNT1 = LV_MATJULYCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR4.
        WA_FINOVR-V_MATJULYCOUNT1 = LV_MATJULYCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATJULYCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.

    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATJULYCOUNT1 = 0 AND WA_FINOVR-FINJULY_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR ASCENDING BY PERNR3 MVGR4.

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINJULY_VAL IS NOT INITIAL ."AND WA_FINOVR-FINJULY_VAL > 18.

        ON CHANGE OF WA_FINOVR-PERNR3 OR WA_FINOVR-MVGR4.
          CLEAR LV_CUSTCOUNT4.
        ENDON.
        IF WA_FINOVR-MVGR4 IS NOT INITIAL.
          LV_CUSTCOUNT4 = LV_CUSTCOUNT4 + 1.
        ENDIF.
        WA_FINOVR-JULYCUSTCOUNT = LV_CUSTCOUNT4.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING JULYCUSTCOUNT.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR3 MVGR4 JULYCUSTCOUNT.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_JULYCOUNT = LV_JULYCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR4.
        WA_FINOVR-V_JULYCOUNT = LV_JULYCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_JULYCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_JULYCOUNT = 0 AND WA_FINOVR-FINJULY_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.

    ""********************************************* This for July Conut Ending******************************************************

    ""********************************************* This for August Conut Start******************************************************


    SORT IT_FINOVR BY PERNR4 KUNNR4 MVGR5.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR5.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL4 NE 0 AND WA_FINOVR-MVGR5 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL4.
        WA_FINOVR-FINAUG_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINAUG_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR4 KUNNR4 MVGR5 FINAUG_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATAUGCOUNT1 = LV_MATAUGCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR5.
        WA_FINOVR-V_MATAUGCOUNT1 = LV_MATAUGCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATAUGCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.

    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATAUGCOUNT1 = 0 AND WA_FINOVR-FINAUG_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR ASCENDING BY PERNR4 MVGR5.

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINAUG_VAL IS NOT INITIAL ."AND WA_FINOVR-FINAUG_VAL > 18.

        ON CHANGE OF WA_FINOVR-PERNR4 OR WA_FINOVR-MVGR5.
          CLEAR LV_CUSTCOUNT5.
        ENDON.
        IF WA_FINOVR-MVGR5 IS NOT INITIAL.
          LV_CUSTCOUNT5 = LV_CUSTCOUNT5 + 1.
        ENDIF.
        WA_FINOVR-AUGCUSTCOUNT = LV_CUSTCOUNT5.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING AUGCUSTCOUNT.
      ENDIF.
    ENDLOOP.



    SORT IT_FINOVR DESCENDING BY PERNR4 MVGR5 AUGCUSTCOUNT.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_AUGCOUNT = LV_AUGCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR5.
        WA_FINOVR-V_AUGCOUNT = LV_AUGCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_AUGCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_AUGCOUNT = 0 AND WA_FINOVR-FINAUG_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    ""********************************************* This for August Conut Ending******************************************************

    ""********************************************* This for Sep Conut Start******************************************************

    SORT IT_FINOVR BY PERNR5 KUNNR5 MVGR6.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR6.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL5 NE 0 AND WA_FINOVR-MVGR6 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL5.
        WA_FINOVR-FINSEP_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINSEP_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.



    SORT IT_FINOVR DESCENDING BY PERNR5 KUNNR5 MVGR6 FINSEP_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATSEPCOUNT1 = LV_MATSEPCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR6.
        WA_FINOVR-V_MATSEPCOUNT1 = LV_MATSEPCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATSEPCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.

    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATSEPCOUNT1 = 0 AND WA_FINOVR-FINSEP_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.



    SORT IT_FINOVR ASCENDING BY PERNR5 MVGR6.

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINSEP_VAL IS NOT INITIAL." AND WA_FINOVR-FINSEP_VAL > 18.

        ON CHANGE OF WA_FINOVR-PERNR5 OR WA_FINOVR-MVGR6.
          CLEAR LV_CUSTCOUNT6.
        ENDON.
        IF WA_FINOVR-MVGR6 IS NOT INITIAL.
          LV_CUSTCOUNT6 = LV_CUSTCOUNT6 + 1.
        ENDIF.
        WA_FINOVR-SEPCUSTCOUNT = LV_CUSTCOUNT6.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING SEPCUSTCOUNT.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR5 MVGR6 SEPCUSTCOUNT.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_SEPCOUNT = LV_SEPCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR6.
        WA_FINOVR-V_SEPCOUNT = LV_SEPCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_SEPCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_SEPCOUNT = 0 AND WA_FINOVR-FINSEP_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    ""********************************************* This for SEP Conut END******************************************************

    ""********************************************* This for OCT  Conut Start******************************************************


    SORT IT_FINOVR BY PERNR6 KUNNR6 MVGR7.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR7.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL6 NE 0 AND WA_FINOVR-MVGR7 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL6.
        WA_FINOVR-FINOCT_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINOCT_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR6 KUNNR6 MVGR7 FINOCT_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATOCTCOUNT1 = LV_MATOCTCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR7.
        WA_FINOVR-V_MATOCTCOUNT1 = LV_MATOCTCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATOCTCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.

    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATOCTCOUNT1 = 0 AND WA_FINOVR-FINOCT_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR ASCENDING BY PERNR6 MVGR7.

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINOCT_VAL IS NOT INITIAL." AND WA_FINOVR-FINOCT_VAL > 18.

        ON CHANGE OF WA_FINOVR-PERNR6 OR WA_FINOVR-MVGR7.
          CLEAR LV_CUSTCOUNT7.
        ENDON.
        IF WA_FINOVR-MVGR7 IS NOT INITIAL.
          LV_CUSTCOUNT7 = LV_CUSTCOUNT7 + 1.
        ENDIF.
        WA_FINOVR-OCTCUSTCOUNT = LV_CUSTCOUNT7.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING OCTCUSTCOUNT.
      ENDIF.
    ENDLOOP.



    SORT IT_FINOVR DESCENDING BY PERNR6 MVGR7 OCTCUSTCOUNT.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_OCTCOUNT = LV_OCTCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR7.
        WA_FINOVR-V_OCTCOUNT = LV_OCTCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_OCTCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.



    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_OCTCOUNT = 0 AND WA_FINOVR-FINOCT_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    ""********************************************* This for Oct Conut Ending******************************************************



    ""********************************************* This for Nov  Conut Start******************************************************

    SORT IT_FINOVR BY PERNR7 KUNNR7 MVGR8.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR8.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL7 NE 0 AND WA_FINOVR-MVGR8 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL7.
        WA_FINOVR-FINNOV_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINNOV_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR7 KUNNR7 MVGR8 FINNOV_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATNOVCOUNT1 = LV_MATNOVCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR8.
        WA_FINOVR-V_MATNOVCOUNT1 = LV_MATNOVCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATNOVCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.

    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATNOVCOUNT1 = 0 AND WA_FINOVR-FINNOV_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR ASCENDING BY PERNR7 MVGR8.

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINNOV_VAL IS NOT INITIAL." AND WA_FINOVR-FINNOV_VAL > 18.

        ON CHANGE OF WA_FINOVR-PERNR7 OR WA_FINOVR-MVGR8.
          CLEAR LV_CUSTCOUNT8.
        ENDON.
        IF WA_FINOVR-MVGR8 IS NOT INITIAL.
          LV_CUSTCOUNT8 = LV_CUSTCOUNT8 + 1.
        ENDIF.
        WA_FINOVR-NOVCUSTCOUNT = LV_CUSTCOUNT8.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING NOVCUSTCOUNT.
      ENDIF.
    ENDLOOP.



    SORT IT_FINOVR DESCENDING BY PERNR7 MVGR8 NOVCUSTCOUNT.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_NOVCOUNT = LV_NOVCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR8.
        WA_FINOVR-V_NOVCOUNT = LV_NOVCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_NOVCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.



    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_NOVCOUNT = 0 AND WA_FINOVR-FINNOV_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    ""********************************************* This for Nov Conut Ending******************************************************
    ""********************************************* This for Dec Conut Start******************************************************


    SORT IT_FINOVR BY PERNR8 KUNNR8 MVGR9.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR9.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL8 NE 0 AND WA_FINOVR-MVGR9 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL8.
        WA_FINOVR-FINDEC_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINDEC_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.




    SORT IT_FINOVR DESCENDING BY PERNR8 KUNNR8 MVGR9 FINDEC_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATDECCOUNT1 = LV_MATDECCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR9.
        WA_FINOVR-V_MATDECCOUNT1 = LV_MATDECCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATDECCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.

    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATDECCOUNT1 = 0 AND WA_FINOVR-FINDEC_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR ASCENDING BY PERNR8 MVGR9.

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINDEC_VAL IS NOT INITIAL." AND WA_FINOVR-FINDEC_VAL > 18.

        ON CHANGE OF WA_FINOVR-PERNR8 OR WA_FINOVR-MVGR9.
          CLEAR LV_CUSTCOUNT9.
        ENDON.
        IF WA_FINOVR-MVGR9 IS NOT INITIAL.
          LV_CUSTCOUNT9 = LV_CUSTCOUNT9 + 1.
        ENDIF.
        WA_FINOVR-DECCUSTCOUNT = LV_CUSTCOUNT9.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING DECCUSTCOUNT.
      ENDIF.
    ENDLOOP.



    SORT IT_FINOVR DESCENDING BY PERNR8 MVGR9 DECCUSTCOUNT.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_DECCOUNT = LV_DECCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR9.
        WA_FINOVR-V_DECCOUNT = LV_DECCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_DECCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.



    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_DECCOUNT = 0 AND WA_FINOVR-FINDEC_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    ""********************************************* This for Dec Conut Ending******************************************************



    ""********************************************* This for Jan Conut Start******************************************************


    SORT IT_FINOVR BY PERNR9 KUNNR9 MVGR10.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR10.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL9 NE 0 AND WA_FINOVR-MVGR10 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL9.
        WA_FINOVR-FINJAN_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINJAN_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.




    SORT IT_FINOVR DESCENDING BY PERNR9 KUNNR9 MVGR10 FINJAN_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATJANCOUNT1 = LV_MATJANCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR10.
        WA_FINOVR-V_MATJANCOUNT1 = LV_MATJANCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATJANCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.

    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATJANCOUNT1 = 0 AND WA_FINOVR-FINJAN_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR ASCENDING BY PERNR9 MVGR10.

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINJAN_VAL IS NOT INITIAL." AND WA_FINOVR-FINJAN_VAL > 18.

        ON CHANGE OF WA_FINOVR-PERNR9 OR WA_FINOVR-MVGR10.
          CLEAR LV_CUSTCOUNT10.
        ENDON.
        IF WA_FINOVR-MVGR10 IS NOT INITIAL.
          LV_CUSTCOUNT10 = LV_CUSTCOUNT10 + 1.
        ENDIF.
        WA_FINOVR-JANCUSTCOUNT = LV_CUSTCOUNT10.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING JANCUSTCOUNT.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR9 MVGR10 JANCUSTCOUNT.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_JANCOUNT = LV_JANCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR10.
        WA_FINOVR-V_JANCOUNT = LV_JANCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_JANCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_JANCOUNT = 0 AND WA_FINOVR-FINJAN_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    ""********************************************* This for Jan Conut Ending******************************************************

    ""********************************************* This for Feb Conut Start******************************************************

    SORT IT_FINOVR BY PERNR10 KUNNR10 MVGR11.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR11.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL10 NE 0 AND WA_FINOVR-MVGR11 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL10.
        WA_FINOVR-FINFEB_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINFEB_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR10 KUNNR10 MVGR11 FINFEB_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATFEBCOUNT1 = LV_MATFEBCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR11.
        WA_FINOVR-V_MATFEBCOUNT1 = LV_MATFEBCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATFEBCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.

    ENDLOOP.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATFEBCOUNT1 = 0 AND WA_FINOVR-FINFEB_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.

    SORT IT_FINOVR ASCENDING BY PERNR10 MVGR11.


    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINFEB_VAL IS NOT INITIAL ."AND WA_FINOVR-FINFEB_VAL > 18.

        ON CHANGE OF WA_FINOVR-PERNR10 OR WA_FINOVR-MVGR11.
          CLEAR LV_CUSTCOUNT11.
        ENDON.
        IF WA_FINOVR-MVGR11 IS NOT INITIAL.
          LV_CUSTCOUNT11 = LV_CUSTCOUNT11 + 1.
        ENDIF.
        WA_FINOVR-FEBCUSTCOUNT = LV_CUSTCOUNT11.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FEBCUSTCOUNT.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR10 MVGR11 FEBCUSTCOUNT.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_FEBCOUNT = LV_FEBCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR11.
        WA_FINOVR-V_FEBCOUNT = LV_FEBCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_FEBCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_FEBCOUNT = 0 AND WA_FINOVR-FINFEB_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.


    ""********************************************* This for Feb Conut Ending******************************************************
    ""********************************************* This for Mar Conut Start******************************************************

    SORT IT_FINOVR BY PERNR11 KUNNR11 MVGR12.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      ON CHANGE OF WA_FINOVR-MVGR12.
        CLEAR LV_SUM.
      ENDON.
      IF WA_FINOVR-VOL11 NE 0 AND WA_FINOVR-MVGR12 NE 0.
        LV_SUM = LV_SUM + WA_FINOVR-VOL11.
        WA_FINOVR-FINMAR_VAL = LV_SUM.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FINMAR_VAL.
        CLEAR WA_FINOVR.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR11 KUNNR11 MVGR12 FINMAR_VAL.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MATMARCOUNT1 = LV_MATMARCOUNT1 + 1.
      ON CHANGE OF WA_FINOVR-MVGR12.
        WA_FINOVR-V_MATMARCOUNT1 = LV_MATMARCOUNT1.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MATMARCOUNT1.
        CLEAR WA_FINOVR.
      ENDON.

    ENDLOOP.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MATMARCOUNT1 = 0 AND WA_FINOVR-FINMAR_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.

    SORT IT_FINOVR ASCENDING BY PERNR11 MVGR12.

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-FINMAR_VAL IS NOT INITIAL." AND WA_FINOVR-FINMAR_VAL > 18.

        ON CHANGE OF WA_FINOVR-PERNR11 OR WA_FINOVR-MVGR12.
          CLEAR LV_CUSTCOUNT12.
        ENDON.
        IF WA_FINOVR-MVGR12 IS NOT INITIAL.
          LV_CUSTCOUNT12 = LV_CUSTCOUNT12 + 1.
        ENDIF.
        WA_FINOVR-MARCUSTCOUNT = LV_CUSTCOUNT12.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING MARCUSTCOUNT.
      ENDIF.
    ENDLOOP.


    SORT IT_FINOVR DESCENDING BY PERNR11 MVGR12 MARCUSTCOUNT.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      LV_MARCOUNT = LV_MARCOUNT + 1.
      ON CHANGE OF WA_FINOVR-MVGR12.
        WA_FINOVR-V_MARCOUNT = LV_MARCOUNT.
        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_MARCOUNT.
        CLEAR WA_FINOVR.
      ENDON.
    ENDLOOP.

    LOOP AT IT_FINOVR INTO WA_FINOVR.
      IF WA_FINOVR-V_MARCOUNT = 0 AND WA_FINOVR-FINMAR_VAL NE 0.
        DELETE IT_FINOVR.
      ENDIF.
    ENDLOOP.

    ""********************************************* This for Feb Conut Ending******************************************************

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-MVGR1 EQ ''.

        IF WA_FINOVR-MVGR1 = 0 AND WA_FINOVR-APRCUSTCOUNT = 0 AND WA_FINOVR-MAYCUSTCOUNT = 0 AND WA_FINOVR-JUNCUSTCOUNT = 0 AND WA_FINOVR-JULYCUSTCOUNT = 0 AND
          WA_FINOVR-AUGCUSTCOUNT = 0 AND WA_FINOVR-SEPCUSTCOUNT = 0 AND WA_FINOVR-OCTCUSTCOUNT = 0 AND WA_FINOVR-NOVCUSTCOUNT = 0 AND
          WA_FINOVR-DECCUSTCOUNT = 0 AND WA_FINOVR-JANCUSTCOUNT = 0 AND WA_FINOVR-FEBCUSTCOUNT = 0 AND WA_FINOVR-MARCUSTCOUNT = 0.

          DELETE IT_FINOVR.

        ENDIF.

      ENDIF.


    ENDLOOP.


    SORT IT_FINOVR BY VKBUR BEZEI PERNR SO_NAME MVGR1.

*
**
**  BREAK-POINT .
**
**  LOOP AT IT_FINOVR INTO WA_FINOVR.
**
**    ON CHANGE OF WA_FINOVR-MVGR1.
**
**      CLEAR LV_SUM1.
**
**    ENDON.
**
**    IF WA_FINOVR-MVGR1 IS NOT INITIAL.
**
**      LV_SUM1 = LV_SUM1 + WA_FINOVR-JUNCUSTCOUNT.
**      WA_FINOVR-JUNCUSTCOUNT1 = LV_SUM1.
**
**
**    MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING JUNCUSTCOUNT1.
**    CLEAR WA_FINOVR.
**
**    ENDIF.
**
**  ENDLOOP.
*
*
*
*  LOOP AT IT_FINOVR INTO WA_FINOVR.
*
*     WA_FINAL-MVGR1 =  WA_FINOVR-MVGR1.
*     WA_FINAL-VKBUR =  WA_FINOVR-VKBUR.
*     WA_FINAL-BEZEI =  WA_FINOVR-BEZEI.
*     WA_FINAL-PERNR =  WA_FINOVR-PERNR.
*     WA_FINAL-SO_NAME = WA_FINOVR-SO_NAME.
*     WA_FINAL-GBEZEI =  WA_FINOVR-GBEZEI.
*     WA_FINAL-MVGR0 =  WA_FINOVR-MVGR1.
*     WA_FINAL-TARGET = 0.
*
*     WA_FINAL-PLAN = 0.
*     WA_FINAL-PLAN1 = 0.
*     WA_FINAL-PLAN2 = 0.
*
*     WA_FINAL-JANACH = 0.
*     WA_FINAL-FEBACH = 0.
*     WA_FINAL-MARACH = 0.
*
*     WA_FINAL-JANACH1 = 0.
*     WA_FINAL-FEBACH1 = 0.
*     WA_FINAL-MARACH1 = 0.
*
*    MOVE WA_FINOVR-FINAPR_VAL TO WA_FINAL-FINAPR_VAL.
*    MOVE WA_FINOVR-FINMAY_VAL TO WA_FINAL-FINMAY_VAL.
*    MOVE WA_FINOVR-FINJUN_VAL TO WA_FINAL-FINJUN_VAL.
*    MOVE WA_FINOVR-FINJULY_VAL TO WA_FINAL-FINJULY_VAL.
*    MOVE WA_FINOVR-FINAUG_VAL TO WA_FINAL-FINAUG_VAL.
*    MOVE WA_FINOVR-FINSEP_VAL TO WA_FINAL-FINSEP_VAL.
*
*    MOVE WA_FINOVR-FINOCT_VAL TO WA_FINAL-FINOCT_VAL.
*    MOVE WA_FINOVR-FINNOV_VAL TO WA_FINAL-FINNOV_VAL.
*    MOVE WA_FINOVR-FINDEC_VAL TO WA_FINAL-FINDEC_VAL.
*
*
*    MOVE WA_FINOVR-FINJAN_VAL TO WA_FINAL-FINJAN_VAL.
*    MOVE WA_FINOVR-FINFEB_VAL TO WA_FINAL-FINFEB_VAL.
*    MOVE WA_FINOVR-FINMAR_VAL TO WA_FINAL-FINMAR_VAL.
*
*    COLLECT WA_FINAL INTO GT_FINAL.
*
*  ENDLOOP.

*    BREAK-POINT.


    LOOP AT IT_FINOVR INTO WA_FINOVR.

      WA_FINAL-MVGR1 =  WA_FINOVR-MVGR1.
      WA_FINAL-VKBUR =  WA_FINOVR-VKBUR.
      WA_FINAL-BEZEI =  WA_FINOVR-BEZEI.
      WA_FINAL-PERNR =  WA_FINOVR-PERNR.
      WA_FINAL-SO_NAME = WA_FINOVR-SO_NAME.
      WA_FINAL-GBEZEI =  WA_FINOVR-GBEZEI.
      WA_FINAL-MVGR0 =  WA_FINOVR-MVGR1.
      WA_FINAL-TARGET = 0.

      WA_FINAL-PLAN = 0.
      WA_FINAL-PLAN1 = 0.
      WA_FINAL-PLAN2 = 0.

      WA_FINAL-JANACH = 0.
      WA_FINAL-FEBACH = 0.
      WA_FINAL-MARACH = 0.

      WA_FINAL-JANACH1 = 0.
      WA_FINAL-FEBACH1 = 0.
      WA_FINAL-MARACH1 = 0.

*      WA_FINAL-FINAPR_AVG = 0.
*      WA_FINAL-FINMAY_AVG = 0.
*      WA_FINAL-FINJUN_AVG = 0.
*      WA_FINAL-FINJULY_AVG = 0 .
*      WA_FINAL-FINAUG_AVG = 0 .
*      WA_FINAL-FINSEP_AVG = 0 .
*      WA_FINAL-FINOCT_AVG = 0 .
*      WA_FINAL-FINNOV_AVG = 0 .
*      WA_FINAL-FINDEC_AVG = 0 .
*      WA_FINAL-FINJAN_AVG = 0 .
*      WA_FINAL-FINFEB_AVG = 0 .
*      WA_FINAL-FINMAR_AVG = 0 .

*    WA_FINOVR-APRCUSTCOUNT = WA_FINAL-APRCUSTCOUNT.


      MOVE WA_FINOVR-APRCUSTCOUNT TO WA_FINAL-APRCUSTCOUNT.
      MOVE WA_FINOVR-MAYCUSTCOUNT TO WA_FINAL-MAYCUSTCOUNT.
      MOVE WA_FINOVR-JUNCUSTCOUNT TO WA_FINAL-JUNCUSTCOUNT.

      MOVE WA_FINOVR-JULYCUSTCOUNT TO WA_FINAL-JULYCUSTCOUNT.
      MOVE WA_FINOVR-AUGCUSTCOUNT TO WA_FINAL-AUGCUSTCOUNT.
      MOVE WA_FINOVR-SEPCUSTCOUNT TO WA_FINAL-SEPCUSTCOUNT.

      MOVE WA_FINOVR-OCTCUSTCOUNT TO WA_FINAL-OCTCUSTCOUNT.
      MOVE WA_FINOVR-NOVCUSTCOUNT TO WA_FINAL-NOVCUSTCOUNT.
      MOVE WA_FINOVR-DECCUSTCOUNT TO WA_FINAL-DECCUSTCOUNT.


      MOVE WA_FINOVR-JANCUSTCOUNT TO WA_FINAL-JANCUSTCOUNT.
      MOVE WA_FINOVR-FEBCUSTCOUNT TO WA_FINAL-FEBCUSTCOUNT.
      MOVE WA_FINOVR-MARCUSTCOUNT TO WA_FINAL-MARCUSTCOUNT.

      MOVE WA_FINOVR-FINAPR_VAL TO WA_FINAL-FINAPR_VAL.
      MOVE WA_FINOVR-FINMAY_VAL TO WA_FINAL-FINMAY_VAL.
      MOVE WA_FINOVR-FINJUN_VAL TO WA_FINAL-FINJUN_VAL.
      MOVE WA_FINOVR-FINJULY_VAL TO WA_FINAL-FINJULY_VAL.
      MOVE WA_FINOVR-FINAUG_VAL TO WA_FINAL-FINAUG_VAL.
      MOVE WA_FINOVR-FINSEP_VAL TO WA_FINAL-FINSEP_VAL.
      MOVE WA_FINOVR-FINOCT_VAL TO WA_FINAL-FINOCT_VAL.
      MOVE WA_FINOVR-FINNOV_VAL TO WA_FINAL-FINNOV_VAL.
      MOVE WA_FINOVR-FINDEC_VAL TO WA_FINAL-FINDEC_VAL.

      MOVE WA_FINOVR-FINJAN_VAL TO WA_FINAL-FINJAN_VAL.
      MOVE WA_FINOVR-FINFEB_VAL TO WA_FINAL-FINFEB_VAL.
      MOVE WA_FINOVR-FINMAR_VAL TO WA_FINAL-FINMAR_VAL.


      COLLECT WA_FINAL INTO GT_FINAL.

    ENDLOOP.


*** ZTable query for perncentage and plan achivment.

*
*LOOP AT GT_FINAL INTO WA_FINAL.
*
*   CASE WA_FINAL-MVGR1.
*
*     WHEN '8'.
*       LOOP AT GT_MATGRP INTO WA_MATGRP WHERE MVGR1 = '8'.
*         WA_FINAL-PERCENTAGE = WA_MATGRP-PERCENTAGE.
*         ENDLOOP.
*
*     WHEN '10'.
*       LOOP AT GT_MATGRP INTO WA_MATGRP WHERE MVGR1 = '10'.
*         WA_FINAL-PERCENTAGE = WA_MATGRP-PERCENTAGE.
*         ENDLOOP.
*
*    WHEN '11'.
*       LOOP AT GT_MATGRP INTO WA_MATGRP WHERE MVGR1 = '11'.
*         WA_FINAL-PERCENTAGE = WA_MATGRP-PERCENTAGE.
*         ENDLOOP.
*
*    WHEN '13'.
*       LOOP AT GT_MATGRP INTO WA_MATGRP WHERE MVGR1 = '13'.
*         WA_FINAL-PERCENTAGE = WA_MATGRP-PERCENTAGE.
*         ENDLOOP.
*
*    WHEN '17'.
*        LOOP AT GT_MATGRP INTO WA_MATGRP WHERE MVGR1 = '17'.
*         WA_FINAL-PERCENTAGE = WA_MATGRP-PERCENTAGE.
*         ENDLOOP.
*
*    WHEN '21'.
*       LOOP AT GT_MATGRP INTO WA_MATGRP WHERE MVGR1 = '21'.
*         WA_FINAL-PERCENTAGE = WA_MATGRP-PERCENTAGE.
*         ENDLOOP.
*
*    WHEN '23'.
*       LOOP AT GT_MATGRP INTO WA_MATGRP WHERE MVGR1 = '23'.
*        WA_FINAL-PERCENTAGE = WA_MATGRP-PERCENTAGE.
*         ENDLOOP.
*
*    WHEN '51'.
*       LOOP AT GT_MATGRP INTO WA_MATGRP WHERE MVGR1 = '51'.
*         WA_FINAL-PERCENTAGE = WA_MATGRP-PERCENTAGE.
*         ENDLOOP.
*
*     WHEN '37'.
*        LOOP AT GT_MATGRP INTO WA_MATGRP WHERE MVGR1 = '37'.
*         WA_FINAL-PERCENTAGE = WA_MATGRP-PERCENTAGE.
*         ENDLOOP.
*
*      WHEN '38'.
*        LOOP AT GT_MATGRP INTO WA_MATGRP WHERE MVGR1 = '38'.
*         WA_FINAL-PERCENTAGE = WA_MATGRP-PERCENTAGE.
*         ENDLOOP.
*
*       WHEN '39'.
*           LOOP AT GT_MATGRP INTO WA_MATGRP WHERE MVGR1 = '39'.
*           WA_FINAL-PERCENTAGE = WA_MATGRP-PERCENTAGE.
*           ENDLOOP.
*
*       WHEN '41'.
*           LOOP AT GT_MATGRP INTO WA_MATGRP WHERE MVGR1 = '41'.
*            WA_FINAL-PERCENTAGE = WA_MATGRP-PERCENTAGE.
*         ENDLOOP.
*
*
*     ENDCASE.
*
*     MODIFY GT_FINAL FROM WA_FINAL TRANSPORTING PERCENTAGE.
*     CLEAR WA_FINAL.
*
*
*ENDLOOP.
*
*
*LOOP AT GT_FINAL INTO WA_FINAL.
*
*    IF WA_FINAL-MVGR1 IS NOT INITIAL.
*            LOOP AT GT_MATGRPPLAN INTO WA_MATGRPPLAN WHERE MONTH1 = '1'.
*            IF WA_FINAL-PERCENTAGE NE 0.
*            WA_FINAL-JANACH = WA_MATGRPPLAN-PERCENTAGE.
*            ENDIF.
*            ENDLOOP.
*
*            LOOP AT GT_MATGRPPLAN INTO WA_MATGRPPLAN WHERE MONTH1 = '2'.
*            IF WA_FINAL-PERCENTAGE NE 0.
*            WA_FINAL-FEBACH = WA_MATGRPPLAN-PERCENTAGE.
*            ENDIF.
*            ENDLOOP.
*
*            LOOP AT GT_MATGRPPLAN INTO WA_MATGRPPLAN WHERE MONTH1 = '3'.
*            IF WA_FINAL-PERCENTAGE NE 0.
*            WA_FINAL-MARACH = WA_MATGRPPLAN-PERCENTAGE.
*            ENDIF.
*            ENDLOOP.
*
*             MODIFY GT_FINAL FROM WA_FINAL TRANSPORTING JANACH FEBACH MARACH.
*             CLEAR WA_FINAL.
*
*  ENDIF.
*
* ENDLOOP.
*


*SORT GT_FINAL BY PERNR GBEZEI.

    LOOP AT GT_FINAL INTO WA_FINAL.

      ON CHANGE OF WA_FINAL-PERNR.
        CLEAR TARGET1.
      ENDON.

      IF WA_FINAL-MVGR1 EQ '31'.

        TARGET1 = TARGET1 + WA_FINAL-APRCUSTCOUNT + WA_FINAL-MAYCUSTCOUNT + WA_FINAL-JUNCUSTCOUNT + WA_FINAL-JULYCUSTCOUNT + WA_FINAL-AUGCUSTCOUNT + WA_FINAL-SEPCUSTCOUNT + WA_FINAL-OCTCUSTCOUNT + WA_FINAL-NOVCUSTCOUNT + WA_FINAL-DECCUSTCOUNT .

        TARGET1 = TARGET1 / 9.
        MOVE  TARGET1 TO WA_FINAL-TARGET.
        MODIFY GT_FINAL FROM WA_FINAL TRANSPORTING TARGET.
        CLEAR WA_FINAL.

      ENDIF.

    ENDLOOP.


    SORT GT_FINAL DESCENDING BY PERNR TARGET.



    LOOP AT GT_FINAL INTO WA_FINAL.

      APRV1 = WA_FINAL-FINAPR_VAL / WA_FINAL-APRCUSTCOUNT.
      MAYV1 = WA_FINAL-FINMAY_VAL / WA_FINAL-MAYCUSTCOUNT.
      JUNV1 = WA_FINAL-FINJUN_VAL / WA_FINAL-JUNCUSTCOUNT.

      JULYV1 = WA_FINAL-FINJULY_VAL / WA_FINAL-JULYCUSTCOUNT.
      AUGV1 = WA_FINAL-FINAUG_VAL / WA_FINAL-AUGCUSTCOUNT.
      SEPV1 = WA_FINAL-FINSEP_VAL / WA_FINAL-SEPCUSTCOUNT.

      OCTV1 = WA_FINAL-FINOCT_VAL / WA_FINAL-OCTCUSTCOUNT.
      NOVV1 = WA_FINAL-FINNOV_VAL / WA_FINAL-NOVCUSTCOUNT.
      DECV1 = WA_FINAL-FINDEC_VAL / WA_FINAL-DECCUSTCOUNT.

      JANV1 = WA_FINAL-FINJAN_VAL / WA_FINAL-JANCUSTCOUNT.
      FRBV1 = WA_FINAL-FINFEB_VAL / WA_FINAL-FEBCUSTCOUNT.
      MARV1 = WA_FINAL-FINMAR_VAL / WA_FINAL-MARCUSTCOUNT.

      MOVE APRV1 TO WA_FINAL-APRV.
      MOVE MAYV1 TO WA_FINAL-MAYV.
      MOVE JUNV1 TO WA_FINAL-JUNV.
      MOVE JULYV1 TO WA_FINAL-JULYV.
      MOVE AUGV1 TO WA_FINAL-AUGV.
      MOVE SEPV1 TO WA_FINAL-SEPV.
      MOVE OCTV1 TO WA_FINAL-OCTV.
      MOVE NOVV1 TO WA_FINAL-NOVV.
      MOVE DECV1 TO WA_FINAL-DECV.
      MOVE JANV1 TO WA_FINAL-JANV.
      MOVE FRBV1 TO WA_FINAL-FRBV.
      MOVE MARV1 TO WA_FINAL-MARV.

      MODIFY GT_FINAL FROM WA_FINAL TRANSPORTING APRV MAYV JUNV JULYV AUGV SEPV OCTV NOVV DECV JANV FRBV MARV.
      CLEAR WA_FINAL.

    ENDLOOP.

  ENDIF.





ENDFORM.                    "DATA_RETRIEVAL_OVERVIEW





" DATA_RETRIEVAL_OVERVIEW
*&---------------------------------------------------------------------*
*&      Form  BUILD_FIELDCATALOG_OVERVIEW
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
**----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  AUTHCHECK_OVERVIEW
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM AUTHCHECK_OVERVIEW .

  LOOP AT IT_FINOVR INTO WA_FINOVR.
    AUTHORITY-CHECK OBJECT 'ZINVOICE'
    ID 'ZVKBUR' FIELD WA_FINOVR-VKBUR
    ID 'ZSPART' DUMMY
    ID 'ACTVT' FIELD '03'.
    IF SY-SUBRC NE 0.
      WA_FINOVR-FLAG = 'x' .
      MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FLAG.
      MESSAGE 'NO AUTHORIZATION FOR CERTAIN RECORDS' TYPE 'S'.
    ENDIF.

    AUTHORITY-CHECK OBJECT 'ZINVOICE'
    ID 'ZVKBUR' DUMMY
    ID 'ZSPART' FIELD WA_FINOVR-SPART
    ID 'ACTVT' FIELD '03'.
    IF SY-SUBRC NE 0.
      WA_FINOVR-FLAG = 'x' .
      MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FLAG.
      MESSAGE 'NO AUTHORIZATION FOR CERTAIN RECORDS' TYPE 'S'.
    ENDIF.
    CLEAR: WA_FINOVR.
  ENDLOOP.

  DELETE IT_FINOVR WHERE FLAG = 'x'.


ENDFORM.                    " AUTHCHECK_OVERVIEW



*&---------------------------------------------------------------------*
*&      Form  BUILD_FIELDCATALOG_OVERVIEW
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM BUILD_FIELDCATALOG_OVERVIEW .


  IF PRD_SPRD = 'X'.


    WA_FIELDCAT-FIELDNAME   = 'VKBUR'.
    WA_FIELDCAT-SELTEXT_M   = 'SALES OFFICE'.
    WA_FIELDCAT-COL_POS     = 1.
*   WA_FIELDCAT-KEY    = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.

    WA_FIELDCAT-FIELDNAME   = 'BEZEI'.
    WA_FIELDCAT-SELTEXT_M   = 'SALES DESCRIPTION'.
    WA_FIELDCAT-COL_POS     = 2.
*   WA_FIELDCAT-KEY    = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.


    WA_FIELDCAT-FIELDNAME   = 'PERNR'.
    WA_FIELDCAT-SELTEXT_M   = 'PERNR'.
    WA_FIELDCAT-COL_POS     = 3.
*  WA_SORT-GROUP = 'X'.
*  WA_FIELDCAT-KEY    = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR1'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR1'.
*  WA_FIELDCAT-COL_POS     = 3.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR2'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR2'.
*  WA_FIELDCAT-COL_POS     = 4.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR3'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR3'.
*  WA_FIELDCAT-COL_POS     = 5.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR4'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR4'.
*  WA_FIELDCAT-COL_POS     = 6.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR5'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR5'.
*  WA_FIELDCAT-COL_POS     = 7.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR6'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR6'.
*  WA_FIELDCAT-COL_POS     = 8.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR7'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR7'.
*  WA_FIELDCAT-COL_POS     = 9.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR8'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR8'.
*  WA_FIELDCAT-COL_POS     = 10.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR9'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR9'.
*  WA_FIELDCAT-COL_POS     = 11.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR10'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR10'.
*  WA_FIELDCAT-COL_POS     = 12.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR11'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR11'.
*  WA_FIELDCAT-COL_POS     = 13.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


    WA_FIELDCAT-FIELDNAME   = 'SO_NAME'.
    WA_FIELDCAT-SELTEXT_M   = 'SO_NAME'.
    WA_FIELDCAT-COL_POS     = 15.
*  WA_FIELDCAT-TEXT_FIELDNAME = 'SO_NAME'.
*  WA_FIELDCAT-COLTEXT = 'SO_NAME'.
*  WA_FIELDCAT-IFIELDNAME = 'SO_NAME'.
*  WA_FIELDCAT-KEY    = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.

*  WA_FIELDCAT-FIELDNAME   = 'KUNNR'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR'.
*  WA_FIELDCAT-COL_POS     = 16.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR1'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR1'.
*  WA_FIELDCAT-COL_POS     = 17.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR2'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR2'.
*  WA_FIELDCAT-COL_POS     = 18.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR3'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR3'.
*  WA_FIELDCAT-COL_POS     = 19.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR4'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR4'.
*  WA_FIELDCAT-COL_POS     = 20.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR5'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR5'.
*  WA_FIELDCAT-COL_POS     = 21.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR6'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR6'.
*  WA_FIELDCAT-COL_POS     = 22.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR7'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR7'.
*  WA_FIELDCAT-COL_POS     = 23.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR8'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR8'.
*  WA_FIELDCAT-COL_POS     = 24.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR9'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR9'.
*  WA_FIELDCAT-COL_POS     = 25.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR10'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR10'.
*  WA_FIELDCAT-COL_POS     = 26.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR11'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR11'.
*  WA_FIELDCAT-COL_POS     = 27.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


*    WA_FIELDCAT-FIELDNAME   = 'MATNR'.  KUNNR TYPE KNA1-KUNNR,
*  WA_FIELDCAT-SELTEXT_M   = 'MATERIAL'.
*  WA_FIELDCAT-COL_POS     = 7.
*  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'MAKTX'.
*  WA_FIELDCAT-SELTEXT_M   = 'MATERIAL DESCRIPTION'.
*  WA_FIELDCAT-COL_POS     = 9.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'VOLUM'.
*  WA_FIELDCAT-SELTEXT_M   = 'Liters Per Material'.
*  WA_FIELDCAT-COL_POS     = 11.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
**  WA_FIELDCAT-FIELDNAME   = 'NAME1'.
**  WA_FIELDCAT-SELTEXT_M   = 'Customer Name'.
**  WA_FIELDCAT-COL_POS     = 7.
***  WA_FIELDCAT-KEY    = 'X'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.

    WA_FIELDCAT-FIELDNAME   = 'MVGR1'.
    WA_FIELDCAT-SELTEXT_M   = 'MVGR1'.
    WA_FIELDCAT-COL_POS     = 28.
*  WA_FIELDCAT-KEY         = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR0'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR0'.
*  WA_FIELDCAT-COL_POS     = 29.
**  WA_FIELDCAT-KEY         = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'MVGRMAY'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGRMAY'.
*  WA_FIELDCAT-COL_POS     = 29.
**  WA_FIELDCAT-KEY         = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


*  WA_FIELDCAT-FIELDNAME   = 'MVGR2'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR2'.
*  WA_FIELDCAT-COL_POS     = 29.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR3'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR3'.
*  WA_FIELDCAT-COL_POS     = 30.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR4'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR4'.
*  WA_FIELDCAT-COL_POS     = 31.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR5'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR5'.
*  WA_FIELDCAT-COL_POS     = 32.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR6'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR6'.
*  WA_FIELDCAT-COL_POS     = 33.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR7'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR7'.
*  WA_FIELDCAT-COL_POS     = 34.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR8'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR8'.
*  WA_FIELDCAT-COL_POS     = 35.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR9'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR9'.
*  WA_FIELDCAT-COL_POS     = 36.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR10'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR10'.
*  WA_FIELDCAT-COL_POS     = 37.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR11'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR11'.
*  WA_FIELDCAT-COL_POS     = 38.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR12'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR12'.
*  WA_FIELDCAT-COL_POS     = 39.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.



    WA_FIELDCAT-FIELDNAME   = 'GBEZEI'.
    WA_FIELDCAT-SELTEXT_M   = 'MATERIAL GROUP DESC.'.
    WA_FIELDCAT-COL_POS     = 41.
*  WA_FIELDCAT-KEY    = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.


*  WA_FIELDCAT-FIELDNAME   = 'FINAPR_VAL'.
*  WA_FIELDCAT-SELTEXT_M   = 'APR'.
*  WA_FIELDCAT-COL_POS     = 18.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.



*  WA_FIELDCAT-FIELDNAME   = 'V_MATAPCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATAPCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 19.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


    WA_FIELDCAT-FIELDNAME   = 'APRCUSTCOUNT'.
    WA_FIELDCAT-SELTEXT_M   = 'Apr'.
    WA_FIELDCAT-COL_POS     = 42.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.


*  WA_FIELDCAT-FIELDNAME   = 'V_APRCOUNT'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_APRCOUNT'.
*  WA_FIELDCAT-COL_POS     = 21.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


*  WA_FIELDCAT-FIELDNAME   = 'VOL1'.
*  WA_FIELDCAT-SELTEXT_M   = 'May Value'.
*  WA_FIELDCAT-COL_POS     = 21.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
**  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
*  WA_FIELDCAT-CTABNAME    = 'VBRK'.
*
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


*  WA_FIELDCAT-FIELDNAME   = 'FINMAY_VAL'.
*  WA_FIELDCAT-SELTEXT_M   = 'FINMAY_VAL'.
*  WA_FIELDCAT-COL_POS     = 22.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.



*  WA_FIELDCAT-FIELDNAME   = 'V_MATMAYCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATMAYCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 23.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


    WA_FIELDCAT-FIELDNAME   = 'MAYCUSTCOUNT'.
    WA_FIELDCAT-SELTEXT_M   = 'May'.
    WA_FIELDCAT-COL_POS     = 44.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'V_MAYCOUNT'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MAYCOUNT'.
*  WA_FIELDCAT-COL_POS     = 25.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
**
*  WA_FIELDCAT-FIELDNAME   = 'VOL2'.
*  WA_FIELDCAT-SELTEXT_M   = 'June Value'.
*  WA_FIELDCAT-COL_POS     = 46.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
*  WA_FIELDCAT-CTABNAME    = 'VBRK'.
*
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'FINJUN_VAL'.
*  WA_FIELDCAT-SELTEXT_M   = 'FINJUN_VAL'.
*  WA_FIELDCAT-COL_POS     = 48.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'V_MATJUNCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATJUNCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 50.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*

    WA_FIELDCAT-FIELDNAME   = 'JUNCUSTCOUNT'.
    WA_FIELDCAT-SELTEXT_M   = 'Jun'.
    WA_FIELDCAT-COL_POS     = 52.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.

*
*
*  WA_FIELDCAT-FIELDNAME   = 'V_JUNCOUNT'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_JUNCOUNT'.
*  WA_FIELDCAT-COL_POS     = 54.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*

**
**  WA_FIELDCAT-FIELDNAME   = 'AMT2'.
**  WA_FIELDCAT-SELTEXT_M   = 'June Value'.
**  WA_FIELDCAT-COL_POS     = 24.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.
*
**  WA_FIELDCAT-FIELDNAME   = 'QTY3'.
**  WA_FIELDCAT-SELTEXT_M   = 'July Qty(Case)'.
**  WA_FIELDCAT-COL_POS     = 25.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
***  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
***  WA_FIELDCAT-CTABNAME    = 'VBRK'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'VOL3'.
*  WA_FIELDCAT-SELTEXT_M   = 'July Value'.
*  WA_FIELDCAT-COL_POS     = 54.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*
*  WA_FIELDCAT-FIELDNAME   = 'FINJULY_VAL'. FINAUG_VAL
*  WA_FIELDCAT-SELTEXT_M   = 'FINJULY_VAL'.
*  WA_FIELDCAT-COL_POS     = 56.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'V_MATJULYCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATJULYCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 58.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

    WA_FIELDCAT-FIELDNAME   = 'JULYCUSTCOUNT'.
    WA_FIELDCAT-SELTEXT_M   = 'July'.
    WA_FIELDCAT-COL_POS     = 60.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'V_JULYCOUNT'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_JULYCOUNT'.
*  WA_FIELDCAT-COL_POS     = 62.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.



**
**  WA_FIELDCAT-FIELDNAME   = 'AMT3'.
**  WA_FIELDCAT-SELTEXT_M   = 'July Value'.
**  WA_FIELDCAT-COL_POS     = 27.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.
**
**  WA_FIELDCAT-FIELDNAME   = 'QTY4'.
**  WA_FIELDCAT-SELTEXT_M   = 'August Qty(Case)'.
**  WA_FIELDCAT-COL_POS     = 28.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
***  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
***  WA_FIELDCAT-CTABNAME    = 'VBRK'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.


*
*  WA_FIELDCAT-FIELDNAME   = 'VOL4'.
*  WA_FIELDCAT-SELTEXT_M   = 'Aug Value'.
*  WA_FIELDCAT-COL_POS     = 62.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'FINAUG_VAL'.
*  WA_FIELDCAT-SELTEXT_M   = 'FINAUG_VAL'.
*  WA_FIELDCAT-COL_POS     = 64.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'V_MATAUGCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATAUGCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 66.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

    WA_FIELDCAT-FIELDNAME   = 'AUGCUSTCOUNT'.
    WA_FIELDCAT-SELTEXT_M   = 'Aug'.
    WA_FIELDCAT-COL_POS     = 68.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.




**  WA_FIELDCAT-FIELDNAME   = 'AMT4'.
**  WA_FIELDCAT-SELTEXT_M   = 'Augest Value'.
**  WA_FIELDCAT-COL_POS     = 30.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.
**
**  WA_FIELDCAT-FIELDNAME   = 'QTY5'.
**  WA_FIELDCAT-SELTEXT_M   = 'September Qty(Case)'.
**  WA_FIELDCAT-COL_POS     = 31.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
***  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
***  WA_FIELDCAT-CTABNAME    = 'VBRK'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.


*  WA_FIELDCAT-FIELDNAME   = 'VOL5'.
*  WA_FIELDCAT-SELTEXT_M   = 'Sep Value'.
*  WA_FIELDCAT-COL_POS     = 70.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'FINSEP_VAL'.
*  WA_FIELDCAT-SELTEXT_M   = 'FINSEP_VAL'.
*  WA_FIELDCAT-COL_POS     = 72.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


    WA_FIELDCAT-FIELDNAME   = 'SEPCUSTCOUNT'.
    WA_FIELDCAT-SELTEXT_M   = 'Sep'.
    WA_FIELDCAT-COL_POS     = 70.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.


*
**  WA_FIELDCAT-FIELDNAME   = 'AMT5'. FINSEP_VAL
**  WA_FIELDCAT-SELTEXT_M   = 'September Value'.
**  WA_FIELDCAT-COL_POS     = 33.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.
**
**  WA_FIELDCAT-FIELDNAME   = 'QTY6'.
**  WA_FIELDCAT-SELTEXT_M   = 'October Qty(Case)'.
**  WA_FIELDCAT-COL_POS     = 34.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
***  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
***  WA_FIELDCAT-CTABNAME    = 'VBRK'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
***  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'VOL6'.
*  WA_FIELDCAT-SELTEXT_M   = 'Oct Value'.
*  WA_FIELDCAT-COL_POS     = 72.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'FINOCT_VAL'.
*  WA_FIELDCAT-SELTEXT_M   = 'FINOCT_VAL'.
*  WA_FIELDCAT-COL_POS     = 74.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'V_MATOCTCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATOCTCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 76.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


    WA_FIELDCAT-FIELDNAME   = 'OCTCUSTCOUNT'.
    WA_FIELDCAT-SELTEXT_M   = 'Oct'.
    WA_FIELDCAT-COL_POS     = 78.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.



**  WA_FIELDCAT-FIELDNAME   = 'AMT6'.
**  WA_FIELDCAT-SELTEXT_M   = 'October Value'.
**  WA_FIELDCAT-COL_POS     = 36.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.
**
**  WA_FIELDCAT-FIELDNAME   = 'QTY7'.
**  WA_FIELDCAT-SELTEXT_M   = 'November Qty(Case)'.
**  WA_FIELDCAT-COL_POS     = 37.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
***  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
***  WA_FIELDCAT-CTABNAME    = 'VBRK'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'VOL7'.
*  WA_FIELDCAT-SELTEXT_M   = 'Nov Value'.
*  WA_FIELDCAT-COL_POS     = 80.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'FINNOV_VAL'.
*  WA_FIELDCAT-SELTEXT_M   = 'FINNOV_VAL'.
*  WA_FIELDCAT-COL_POS     = 82.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'V_MATNOVCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATNOVCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 84.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


    WA_FIELDCAT-FIELDNAME   = 'NOVCUSTCOUNT'.
    WA_FIELDCAT-SELTEXT_M   = 'Nov'.
    WA_FIELDCAT-COL_POS     = 86.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.

*  WA_FIELDCAT-FIELDNAME   = 'V_NOVCOUNT'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_NOVCOUNT'.
*  WA_FIELDCAT-COL_POS     = 88.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*

**  WA_FIELDCAT-FIELDNAME   = 'AMT7'.
**  WA_FIELDCAT-SELTEXT_M   = 'November  Value'.
**  WA_FIELDCAT-COL_POS     = 39.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.
**
**  WA_FIELDCAT-FIELDNAME   = 'QTY8'.
**  WA_FIELDCAT-SELTEXT_M   = 'December Qty(Case)'.
**  WA_FIELDCAT-COL_POS     = 40.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
***  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
***  WA_FIELDCAT-CTABNAME    = 'VBRK'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'VOL8'.
*  WA_FIELDCAT-SELTEXT_M   = 'Dec-Value'.
*  WA_FIELDCAT-COL_POS     = 88.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'FINDEC_VAL'.
*  WA_FIELDCAT-SELTEXT_M   = 'FINDEC_VAL'.
*  WA_FIELDCAT-COL_POS     = 90.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'V_MATDECCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATDECCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 92.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


    WA_FIELDCAT-FIELDNAME   = 'DECCUSTCOUNT'.
    WA_FIELDCAT-SELTEXT_M   = 'Dec'.
    WA_FIELDCAT-COL_POS     = 90.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.


*    WA_FIELDCAT-FIELDNAME   = 'TARGET'.
*    WA_FIELDCAT-SELTEXT_M   = 'Tot-Tar'.
*    WA_FIELDCAT-COL_POS     = 91.
*    WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*    APPEND WA_FIELDCAT TO IT_FIELDCAT.
*    CLEAR  WA_FIELDCAT.

    WA_FIELDCAT-FIELDNAME   = 'PERCENTAGE'.
    WA_FIELDCAT-SELTEXT_M   = 'Keyprod% '.
    WA_FIELDCAT-COL_POS     = 92.
    WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.


    WA_FIELDCAT-FIELDNAME   = 'FINTARGET'.

    WA_FIELDCAT-SELTEXT_M   = 'Target'.
    WA_FIELDCAT-COL_POS     = 93.
    WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.

    WA_FIELDCAT-FIELDNAME   = 'JANACH'.
    WA_FIELDCAT-SELTEXT_M   = 'Jan %'.
    WA_FIELDCAT-COL_POS     = 94.
    WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.

    WA_FIELDCAT-FIELDNAME   = 'PLAN'.
    WA_FIELDCAT-SELTEXT_M   = 'Jan-Plan'.
    WA_FIELDCAT-COL_POS     = 95.
    WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.


**  WA_FIELDCAT-FIELDNAME   = 'AMT8'.
**  WA_FIELDCAT-SELTEXT_M   = 'December  Value'.
**  WA_FIELDCAT-COL_POS     = 42.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.
**
**  WA_FIELDCAT-FIELDNAME   = 'QTY9'.
**  WA_FIELDCAT-SELTEXT_M   = 'Jan. Qty(Case)'.
**  WA_FIELDCAT-COL_POS     = 43.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
***  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
***  WA_FIELDCAT-CTABNAME    = 'VBRK'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'VOL9'.
*  WA_FIELDCAT-SELTEXT_M   = 'JanValue'.
*  WA_FIELDCAT-COL_POS     = 95.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'FINJAN_VAL'.
*  WA_FIELDCAT-SELTEXT_M   = 'FINJAN_VAL'.
*  WA_FIELDCAT-COL_POS     = 96.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'V_MATJANCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATJANCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 97.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.



    WA_FIELDCAT-FIELDNAME   = 'JANCUSTCOUNT'.
    WA_FIELDCAT-SELTEXT_M   = 'Jan-Sale'.
    WA_FIELDCAT-COL_POS     = 96.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.


    WA_FIELDCAT-FIELDNAME   = 'JANACH1'.
    WA_FIELDCAT-SELTEXT_M   = 'Jan-Ach'.
    WA_FIELDCAT-COL_POS     = 98.
    WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.



**  WA_FIELDCAT-FIELDNAME   = 'AMT9'.
**  WA_FIELDCAT-SELTEXT_M   = 'January Value'.
**  WA_FIELDCAT-COL_POS     = 45.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.
**
**  WA_FIELDCAT-FIELDNAME   = 'QTY10'.
**  WA_FIELDCAT-SELTEXT_M   = 'Febrary Qty(Case)'.
**  WA_FIELDCAT-COL_POS     = 46.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
***  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
***  WA_FIELDCAT-CTABNAME    = 'VBRK'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
***  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'VOL10'.
*  WA_FIELDCAT-SELTEXT_M   = 'FebValue'.
*  WA_FIELDCAT-COL_POS     = 96.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*
*  WA_FIELDCAT-FIELDNAME   = 'FINFEB_VAL'.
*  WA_FIELDCAT-SELTEXT_M   = 'FINFEB_VAL'.
*  WA_FIELDCAT-COL_POS     = 97.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'V_MATFEBCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATFEBCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 98.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

    WA_FIELDCAT-FIELDNAME   = 'FEBACH'.
    WA_FIELDCAT-SELTEXT_M   = 'Feb % '.
    WA_FIELDCAT-COL_POS     = 100.
    WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.

    WA_FIELDCAT-FIELDNAME   = 'PLAN1'.
    WA_FIELDCAT-SELTEXT_M   = 'Feb-Plan'.
    WA_FIELDCAT-COL_POS     = 101.
    WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.

    WA_FIELDCAT-FIELDNAME   = 'FEBCUSTCOUNT'.
    WA_FIELDCAT-SELTEXT_M   = 'Feb-Sale'.
    WA_FIELDCAT-COL_POS     = 102.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.


    WA_FIELDCAT-FIELDNAME   = 'FEBACH1'.
    WA_FIELDCAT-SELTEXT_M   = 'Feb-Ach'.
    WA_FIELDCAT-COL_POS     = 103.
    WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.



**  WA_FIELDCAT-FIELDNAME   = 'AMT10'.
**  WA_FIELDCAT-SELTEXT_M   = 'Febrary Value'.
**  WA_FIELDCAT-COL_POS     = 48.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.
**
**  WA_FIELDCAT-FIELDNAME   = 'QTY11'.
**  WA_FIELDCAT-SELTEXT_M   = 'March Qty(Case)'.
**  WA_FIELDCAT-COL_POS     = 49.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
***  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
***  WA_FIELDCAT-CTABNAME    = 'VBRK'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'VOL11'.
*  WA_FIELDCAT-SELTEXT_M   = 'MarValue'.
*  WA_FIELDCAT-COL_POS     = 97.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*
*  WA_FIELDCAT-FIELDNAME   = 'FINMAR_VAL'.
*  WA_FIELDCAT-SELTEXT_M   = 'FINMAR_VAL'.
*  WA_FIELDCAT-COL_POS     = 98.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'V_MATMARCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATMARCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 99.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT..

    WA_FIELDCAT-FIELDNAME   = 'MARACH'.
    WA_FIELDCAT-SELTEXT_M   = 'Mar % '.
    WA_FIELDCAT-COL_POS     = 104.
    WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.

    WA_FIELDCAT-FIELDNAME   = 'PLAN2'.
    WA_FIELDCAT-SELTEXT_M   = 'Mar-Plan'.
    WA_FIELDCAT-COL_POS     = 105.
    WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.

    WA_FIELDCAT-FIELDNAME   = 'MARCUSTCOUNT'.
    WA_FIELDCAT-SELTEXT_M   = 'Mar-Sale'.
    WA_FIELDCAT-COL_POS     = 106.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.


    WA_FIELDCAT-FIELDNAME   = 'MARACH1'.
    WA_FIELDCAT-SELTEXT_M   = 'Mar-Ach'.
    WA_FIELDCAT-COL_POS     = 107.
    WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.


*
*  WA_FIELDCAT-FIELDNAME   = 'TARGET'.
*  WA_FIELDCAT-SELTEXT_M   = 'Target'.
*  WA_FIELDCAT-COL_POS     = 103.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.



**  WA_FIELDCAT-FIELDNAME   = 'AMT11'.
**  WA_FIELDCAT-SELTEXT_M   = 'March Value'.
**  WA_FIELDCAT-COL_POS     = 51.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.
*
*  WA_SORT-FIELDNAME = 'VKBUR'.
*  WA_SORT-UP = 'X'.
**  WA_SORT-GROUP = 'X'.
**  WA_SORT-SUBTOT = 'X'.
*  APPEND WA_SORT TO IT_SORT.
*  CLEAR WA_SORT.
*
*  WA_SORT-FIELDNAME = 'BEZEI'.
*  WA_SORT-UP = 'X'.
**  WA_SORT-SUBTOT = 'X'.
*  APPEND WA_SORT TO IT_SORT.
*  CLEAR WA_SORT.
*
*  WA_SORT-FIELDNAME = 'PERNR'.
*  WA_SORT-UP = 'X'.
**  WA_SORT-SUBTOT = 'X'.
*  APPEND WA_SORT TO IT_SORT.
*  CLEAR WA_SORT.
*
*  WA_SORT-FIELDNAME = 'SO_NAME'.
*  WA_SORT-UP = 'X'.
**  WA_SORT-SUBTOT = 'X'.
*  APPEND WA_SORT TO IT_SORT.
*  CLEAR WA_SORT.
*
*  WA_SORT-FIELDNAME = 'MVGR1'.
*  WA_SORT-UP = 'X'.
**  WA_SORT-SUBTOT = 'X'.
*  APPEND WA_SORT TO IT_SORT.
*  CLEAR WA_SORT.

* WA_SORT-FIELDNAME = 'TARGET'.
*  WA_SORT-DOWN = 'X'.
**  WA_SORT-SUBTOT = 'X'.
*  APPEND WA_SORT TO IT_SORT.
*  CLEAR WA_SORT.

*  WA_SORT-FIELDNAME = 'PERNR'.
*  WA_SORT-UP = 'X'.
**  WA_SORT-SUBTOT = 'X'.
*  APPEND WA_SORT TO IT_SORT.
*  CLEAR WA_SORT.
*
* WA_SORT-FIELDNAME = 'TARGET'.
*  WA_SORT-DOWN = 'X'.
**  WA_SORT-SUBTOT = 'X'.
*  APPEND WA_SORT TO IT_SORT.
*  CLEAR WA_SORT.


  ENDIF.



  IF PRD_TOT = 'X'.


    WA_FIELDCAT-FIELDNAME   = 'VKBUR'.
    WA_FIELDCAT-SELTEXT_M   = 'SALES OFFICE'.
    WA_FIELDCAT-COL_POS     = 1.
*   WA_FIELDCAT-KEY    = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.

    WA_FIELDCAT-FIELDNAME   = 'BEZEI'.
    WA_FIELDCAT-SELTEXT_M   = 'SALES DESCRIPTION'.
    WA_FIELDCAT-COL_POS     = 2.
*   WA_FIELDCAT-KEY    = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.


    WA_FIELDCAT-FIELDNAME   = 'PERNR'.
    WA_FIELDCAT-SELTEXT_M   = 'PERNR'.
    WA_FIELDCAT-COL_POS     = 3.
*  WA_SORT-GROUP = 'X'.
*  WA_FIELDCAT-KEY    = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR1'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR1'.
*  WA_FIELDCAT-COL_POS     = 3.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR2'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR2'.
*  WA_FIELDCAT-COL_POS     = 4.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR3'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR3'.
*  WA_FIELDCAT-COL_POS     = 5.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR4'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR4'.
*  WA_FIELDCAT-COL_POS     = 6.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR5'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR5'.
*  WA_FIELDCAT-COL_POS     = 7.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR6'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR6'.
*  WA_FIELDCAT-COL_POS     = 8.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR7'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR7'.
*  WA_FIELDCAT-COL_POS     = 9.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR8'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR8'.
*  WA_FIELDCAT-COL_POS     = 10.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR9'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR9'.
*  WA_FIELDCAT-COL_POS     = 11.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR10'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR10'.
*  WA_FIELDCAT-COL_POS     = 12.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR11'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR11'.
*  WA_FIELDCAT-COL_POS     = 13.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


    WA_FIELDCAT-FIELDNAME   = 'SO_NAME'.
    WA_FIELDCAT-SELTEXT_M   = 'SO_NAME'.
    WA_FIELDCAT-COL_POS     = 15.
*  WA_FIELDCAT-TEXT_FIELDNAME = 'SO_NAME'.
*  WA_FIELDCAT-COLTEXT = 'SO_NAME'.
*  WA_FIELDCAT-IFIELDNAME = 'SO_NAME'.
*  WA_FIELDCAT-KEY    = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.

*  WA_FIELDCAT-FIELDNAME   = 'KUNNR'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR'.
*  WA_FIELDCAT-COL_POS     = 16.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR1'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR1'.
*  WA_FIELDCAT-COL_POS     = 17.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR2'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR2'.
*  WA_FIELDCAT-COL_POS     = 18.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR3'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR3'.
*  WA_FIELDCAT-COL_POS     = 19.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR4'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR4'.
*  WA_FIELDCAT-COL_POS     = 20.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR5'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR5'.
*  WA_FIELDCAT-COL_POS     = 21.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR6'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR6'.
*  WA_FIELDCAT-COL_POS     = 22.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR7'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR7'.
*  WA_FIELDCAT-COL_POS     = 23.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR8'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR8'.
*  WA_FIELDCAT-COL_POS     = 24.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR9'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR9'.
*  WA_FIELDCAT-COL_POS     = 25.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR10'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR10'.
*  WA_FIELDCAT-COL_POS     = 26.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR11'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR11'.
*  WA_FIELDCAT-COL_POS     = 27.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*    WA_FIELDCAT-FIELDNAME   = 'MATNR'.
*  WA_FIELDCAT-SELTEXT_M   = 'MATERIAL'.
*  WA_FIELDCAT-COL_POS     = 7.
*  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
**
*  WA_FIELDCAT-FIELDNAME   = 'MAKTX'.
*  WA_FIELDCAT-SELTEXT_M   = 'MATERIAL DESCRIPTION'.
*  WA_FIELDCAT-COL_POS     = 9.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'VOLUM'.
*  WA_FIELDCAT-SELTEXT_M   = 'Liters Per Material'.
*  WA_FIELDCAT-COL_POS     = 11.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
**  WA_FIELDCAT-FIELDNAME   = 'NAME1'.
**  WA_FIELDCAT-SELTEXT_M   = 'Customer Name'.
**  WA_FIELDCAT-COL_POS     = 7.
***  WA_FIELDCAT-KEY    = 'X'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.

    WA_FIELDCAT-FIELDNAME   = 'MVGR1'.
    WA_FIELDCAT-SELTEXT_M   = 'MVGR1'.
    WA_FIELDCAT-COL_POS     = 28.
*  WA_FIELDCAT-KEY         = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR0'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR0'.
*  WA_FIELDCAT-COL_POS     = 29.
**  WA_FIELDCAT-KEY         = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'MVGRMAY'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGRMAY'.
*  WA_FIELDCAT-COL_POS     = 29.
**  WA_FIELDCAT-KEY         = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


*  WA_FIELDCAT-FIELDNAME   = 'MVGR2'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR2'.
*  WA_FIELDCAT-COL_POS     = 29.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR3'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR3'.
*  WA_FIELDCAT-COL_POS     = 30.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR4'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR4'.
*  WA_FIELDCAT-COL_POS     = 31.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR5'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR5'.
*  WA_FIELDCAT-COL_POS     = 32.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR6'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR6'.
*  WA_FIELDCAT-COL_POS     = 33.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR7'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR7'.
*  WA_FIELDCAT-COL_POS     = 34.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR8'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR8'.
*  WA_FIELDCAT-COL_POS     = 35.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR9'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR9'.
*  WA_FIELDCAT-COL_POS     = 36.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR10'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR10'.
*  WA_FIELDCAT-COL_POS     = 37.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR11'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR11'.
*  WA_FIELDCAT-COL_POS     = 38.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR12'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR12'.
*  WA_FIELDCAT-COL_POS     = 39.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.



    WA_FIELDCAT-FIELDNAME   = 'GBEZEI'.
    WA_FIELDCAT-SELTEXT_M   = 'MATERIAL GROUP DESC.'.
    WA_FIELDCAT-COL_POS     = 41.
*  WA_FIELDCAT-KEY    = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.




*  WA_FIELDCAT-FIELDNAME   = 'QTY0'.
*  WA_FIELDCAT-SELTEXT_M   = 'Apr Qty(Case)'.
*  WA_FIELDCAT-COL_POS     = 42.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
**  WA_FIELDCAT-CTABNAME    = 'VBRK'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'VOL0'.
*  WA_FIELDCAT-SELTEXT_M   = 'Apr Value'.
*  WA_FIELDCAT-COL_POS     = 43.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
**  WA_FIELDCAT-CTABNAME    = 'VBRK'.
*
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

    WA_FIELDCAT-FIELDNAME   = 'FINAPR_VAL'.
    WA_FIELDCAT-SELTEXT_M   = 'Apr'.
    WA_FIELDCAT-COL_POS     = 44.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.


*  WA_FIELDCAT-FIELDNAME   = 'V_MATAPCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATAPCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 19.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'APRCUSTCOUNT'.
*  WA_FIELDCAT-SELTEXT_M   = 'Apr'.
*  WA_FIELDCAT-COL_POS     = 42.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


*  WA_FIELDCAT-FIELDNAME   = 'V_APRCOUNT'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_APRCOUNT'.
*  WA_FIELDCAT-COL_POS     = 21.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'QTY1'.
*  WA_FIELDCAT-SELTEXT_M   = 'May Qty(Case)'.
*  WA_FIELDCAT-COL_POS     = 44.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
**  WA_FIELDCAT-CTABNAME    = 'VBRK'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'VOL1'.
*  WA_FIELDCAT-SELTEXT_M   = 'May Value'.
*  WA_FIELDCAT-COL_POS     = 45.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
**  WA_FIELDCAT-CTABNAME    = 'VBRK'.
*
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


    WA_FIELDCAT-FIELDNAME   = 'FINMAY_VAL'.
    WA_FIELDCAT-SELTEXT_M   = 'May'.
    WA_FIELDCAT-COL_POS     = 46.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.



*  WA_FIELDCAT-FIELDNAME   = 'V_MATMAYCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATMAYCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 23.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'MAYCUSTCOUNT'.
*  WA_FIELDCAT-SELTEXT_M   = 'May'.
*  WA_FIELDCAT-COL_POS     = 44.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
**
*  WA_FIELDCAT-FIELDNAME   = 'V_MAYCOUNT'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MAYCOUNT'.
*  WA_FIELDCAT-COL_POS     = 25.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'QTY2'.
*  WA_FIELDCAT-SELTEXT_M   = 'Jun Qty(Case)'.
*  WA_FIELDCAT-COL_POS     = 46.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
**  WA_FIELDCAT-CTABNAME    = 'VBRK'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
**
*  WA_FIELDCAT-FIELDNAME   = 'VOL2'.
*  WA_FIELDCAT-SELTEXT_M   = 'June Value'.
*  WA_FIELDCAT-COL_POS     = 47.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
**  WA_FIELDCAT-CTABNAME    = 'VBRK'.
*
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

    WA_FIELDCAT-FIELDNAME   = 'FINJUN_VAL'.
    WA_FIELDCAT-SELTEXT_M   = 'Jun'.
    WA_FIELDCAT-COL_POS     = 48.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.

*  WA_FIELDCAT-FIELDNAME   = 'V_MATJUNCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATJUNCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 50.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*

*  WA_FIELDCAT-FIELDNAME   = 'JUNCUSTCOUNT'.
*  WA_FIELDCAT-SELTEXT_M   = 'Jun'.
*  WA_FIELDCAT-COL_POS     = 52.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
*
*  WA_FIELDCAT-FIELDNAME   = 'V_JUNCOUNT'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_JUNCOUNT'.
*  WA_FIELDCAT-COL_POS     = 54.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*

**
**  WA_FIELDCAT-FIELDNAME   = 'AMT2'.
**  WA_FIELDCAT-SELTEXT_M   = 'June Value'.
**  WA_FIELDCAT-COL_POS     = 24.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'QTY3'.
*  WA_FIELDCAT-SELTEXT_M   = 'July Qty(Case)'.
*  WA_FIELDCAT-COL_POS     = 53.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
**  WA_FIELDCAT-CTABNAME    = 'VBRK'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'VOL3'.
*  WA_FIELDCAT-SELTEXT_M   = 'July Value'.
*  WA_FIELDCAT-COL_POS     = 54.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.



    WA_FIELDCAT-FIELDNAME   = 'FINJULY_VAL'.
    WA_FIELDCAT-SELTEXT_M   = 'July'.
    WA_FIELDCAT-COL_POS     = 56.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.

*  WA_FIELDCAT-FIELDNAME   = 'V_MATJULYCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATJULYCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 58.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'JULYCUSTCOUNT'.
*  WA_FIELDCAT-SELTEXT_M   = 'July'.
*  WA_FIELDCAT-COL_POS     = 60.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'V_JULYCOUNT'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_JULYCOUNT'.
*  WA_FIELDCAT-COL_POS     = 62.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.



**
**  WA_FIELDCAT-FIELDNAME   = 'AMT3'.
**  WA_FIELDCAT-SELTEXT_M   = 'July Value'.
**  WA_FIELDCAT-COL_POS     = 27.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.

*  WA_FIELDCAT-FIELDNAME   = 'QTY4'.
*  WA_FIELDCAT-SELTEXT_M   = 'August Qty(Case)'.
*  WA_FIELDCAT-COL_POS     = 61.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
**  WA_FIELDCAT-CTABNAME    = 'VBRK'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


*
*  WA_FIELDCAT-FIELDNAME   = 'VOL4'.
*  WA_FIELDCAT-SELTEXT_M   = 'Aug Value'.
*  WA_FIELDCAT-COL_POS     = 62.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


    WA_FIELDCAT-FIELDNAME   = 'FINAUG_VAL'.
    WA_FIELDCAT-SELTEXT_M   = 'Aug'.
    WA_FIELDCAT-COL_POS     = 63.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'V_MATAUGCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATAUGCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 66.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*  WA_FIELDCAT-FIELDNAME   = 'AUGCUSTCOUNT'.
*  WA_FIELDCAT-SELTEXT_M   = 'Aug'.
*  WA_FIELDCAT-COL_POS     = 68.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.




**  WA_FIELDCAT-FIELDNAME   = 'AMT4'.
**  WA_FIELDCAT-SELTEXT_M   = 'Augest Value'.
**  WA_FIELDCAT-COL_POS     = 30.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.

*  WA_FIELDCAT-FIELDNAME   = 'QTY5'.
*  WA_FIELDCAT-SELTEXT_M   = 'September Qty(Case)'.
*  WA_FIELDCAT-COL_POS     = 68.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
**  WA_FIELDCAT-CTABNAME    = 'VBRK'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'VOL5'.
*  WA_FIELDCAT-SELTEXT_M   = 'Sep Value'.
*  WA_FIELDCAT-COL_POS     = 69.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


    WA_FIELDCAT-FIELDNAME   = 'FINSEP_VAL'.
    WA_FIELDCAT-SELTEXT_M   = 'Sep'.
    WA_FIELDCAT-COL_POS     = 70.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'SEPCUSTCOUNT'.
*  WA_FIELDCAT-SELTEXT_M   = 'Sep'.
*  WA_FIELDCAT-COL_POS     = 70.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


*
**  WA_FIELDCAT-FIELDNAME   = 'AMT5'. FINSEP_VAL
**  WA_FIELDCAT-SELTEXT_M   = 'September Value'.
**  WA_FIELDCAT-COL_POS     = 33.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.

*  WA_FIELDCAT-FIELDNAME   = 'QTY6'.
*  WA_FIELDCAT-SELTEXT_M   = 'October Qty(Case)'.
*  WA_FIELDCAT-COL_POS     = 77.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
**  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
**  WA_FIELDCAT-CTABNAME    = 'VBRK'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.

*  WA_FIELDCAT-FIELDNAME   = 'VOL6'.
*  WA_FIELDCAT-SELTEXT_M   = 'Oct Value'.
*  WA_FIELDCAT-COL_POS     = 78.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

    WA_FIELDCAT-FIELDNAME   = 'FINOCT_VAL'.
    WA_FIELDCAT-SELTEXT_M   = 'Oct'.
    WA_FIELDCAT-COL_POS     = 79.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.

*  WA_FIELDCAT-FIELDNAME   = 'V_MATOCTCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATOCTCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 76.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'OCTCUSTCOUNT'.
*  WA_FIELDCAT-SELTEXT_M   = 'Oct'.
*  WA_FIELDCAT-COL_POS     = 78.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.



**  WA_FIELDCAT-FIELDNAME   = 'AMT6'.
**  WA_FIELDCAT-SELTEXT_M   = 'October Value'.
**  WA_FIELDCAT-COL_POS     = 36.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.

*  WA_FIELDCAT-FIELDNAME   = 'QTY7'.
*  WA_FIELDCAT-SELTEXT_M   = 'November Qty(Case)'.
*  WA_FIELDCAT-COL_POS     = 79.
***  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
**  WA_FIELDCAT-CTABNAME    = 'VBRK'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'VOL7'.
*  WA_FIELDCAT-SELTEXT_M   = 'Nov Value'.
*  WA_FIELDCAT-COL_POS     = 80.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


    WA_FIELDCAT-FIELDNAME   = 'FINNOV_VAL'.
    WA_FIELDCAT-SELTEXT_M   = 'Nov'.
    WA_FIELDCAT-COL_POS     = 81.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'V_MATNOVCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATNOVCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 84.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


*  WA_FIELDCAT-FIELDNAME   = 'NOVCUSTCOUNT'.
*  WA_FIELDCAT-SELTEXT_M   = 'Nov'.
*  WA_FIELDCAT-COL_POS     = 86.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*  WA_FIELDCAT-FIELDNAME   = 'V_NOVCOUNT'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_NOVCOUNT'.
*  WA_FIELDCAT-COL_POS     = 88.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*

**  WA_FIELDCAT-FIELDNAME   = 'AMT7'.
**  WA_FIELDCAT-SELTEXT_M   = 'November  Value'.
**  WA_FIELDCAT-COL_POS     = 39.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.
**
*  WA_FIELDCAT-FIELDNAME   = 'QTY8'.
*  WA_FIELDCAT-SELTEXT_M   = 'December Qty(Case)'.
*  WA_FIELDCAT-COL_POS     = 87.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
**  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
**  WA_FIELDCAT-CTABNAME    = 'VBRK'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*  WA_FIELDCAT-FIELDNAME   = 'VOL8'.
*  WA_FIELDCAT-SELTEXT_M   = 'Dec-Value'.
*  WA_FIELDCAT-COL_POS     = 88.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


    WA_FIELDCAT-FIELDNAME   = 'FINDEC_VAL'.
    WA_FIELDCAT-SELTEXT_M   = 'Dec'.
    WA_FIELDCAT-COL_POS     = 90.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.


*  WA_FIELDCAT-FIELDNAME   = 'V_MATDECCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATDECCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 92.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


*  WA_FIELDCAT-FIELDNAME   = 'DECCUSTCOUNT'.
*  WA_FIELDCAT-SELTEXT_M   = 'Dec'.
*  WA_FIELDCAT-COL_POS     = 90.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'TARGET'.
*  WA_FIELDCAT-SELTEXT_M   = 'Tot-Tar'.
*  WA_FIELDCAT-COL_POS     = 91.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'PERCENTAGE'.
*  WA_FIELDCAT-SELTEXT_M   = 'Keyprod% '.
*  WA_FIELDCAT-COL_POS     = 92.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'FINTARGET'.
*
*  WA_FIELDCAT-SELTEXT_M   = 'Target'.
*  WA_FIELDCAT-COL_POS     = 93.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'JANACH'.
*  WA_FIELDCAT-SELTEXT_M   = 'Jan %'.
*  WA_FIELDCAT-COL_POS     = 94.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'PLAN'.
*  WA_FIELDCAT-SELTEXT_M   = 'Jan-Plan'.
*  WA_FIELDCAT-COL_POS     = 95.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


**  WA_FIELDCAT-FIELDNAME   = 'AMT8'.
**  WA_FIELDCAT-SELTEXT_M   = 'December  Value'.
**  WA_FIELDCAT-COL_POS     = 42.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.
**
*  WA_FIELDCAT-FIELDNAME   = 'QTY9'.
*  WA_FIELDCAT-SELTEXT_M   = 'Jan. Qty(Case)'.
*  WA_FIELDCAT-COL_POS     = 91.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
**  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
**  WA_FIELDCAT-CTABNAME    = 'VBRK'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'VOL9'.
*  WA_FIELDCAT-SELTEXT_M   = 'JanValue'.
*  WA_FIELDCAT-COL_POS     = 92.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


    WA_FIELDCAT-FIELDNAME   = 'FINJAN_VAL'.
    WA_FIELDCAT-SELTEXT_M   = 'Jan'.
    WA_FIELDCAT-COL_POS     = 93.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'V_MATJANCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATJANCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 97.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


*
*  WA_FIELDCAT-FIELDNAME   = 'JANCUSTCOUNT'.
*  WA_FIELDCAT-SELTEXT_M   = 'Jan-Sale'.
*  WA_FIELDCAT-COL_POS     = 96.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'JANACH1'.
*  WA_FIELDCAT-SELTEXT_M   = 'Jan-Ach'.
*  WA_FIELDCAT-COL_POS     = 98.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.



**  WA_FIELDCAT-FIELDNAME   = 'AMT9'.
**  WA_FIELDCAT-SELTEXT_M   = 'January Value'.
**  WA_FIELDCAT-COL_POS     = 45.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.
**
*  WA_FIELDCAT-FIELDNAME   = 'QTY10'.
*  WA_FIELDCAT-SELTEXT_M   = 'Febrary Qty(Case)'.
*  WA_FIELDCAT-COL_POS     = 96.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
**  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
**  WA_FIELDCAT-CTABNAME    = 'VBRK'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'VOL10'.
*  WA_FIELDCAT-SELTEXT_M   = 'FebValue'.
*  WA_FIELDCAT-COL_POS     = 97.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*


    WA_FIELDCAT-FIELDNAME   = 'FINFEB_VAL'.
    WA_FIELDCAT-SELTEXT_M   = 'Feb'.
    WA_FIELDCAT-COL_POS     = 98.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.


*  WA_FIELDCAT-FIELDNAME   = 'V_MATFEBCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATFEBCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 98.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'FEBACH'.
*  WA_FIELDCAT-SELTEXT_M   = 'Feb % '.
*  WA_FIELDCAT-COL_POS     = 100.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'PLAN1'.
*  WA_FIELDCAT-SELTEXT_M   = 'Feb-Plan'.
*  WA_FIELDCAT-COL_POS     = 101.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*  WA_FIELDCAT-FIELDNAME   = 'FEBCUSTCOUNT'.
*  WA_FIELDCAT-SELTEXT_M   = 'Feb-Sale'.
*  WA_FIELDCAT-COL_POS     = 102.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


*  WA_FIELDCAT-FIELDNAME   = 'FEBACH1'.
*  WA_FIELDCAT-SELTEXT_M   = 'Feb-Ach'.
*  WA_FIELDCAT-COL_POS     = 103.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*


**  WA_FIELDCAT-FIELDNAME   = 'AMT10'.
**  WA_FIELDCAT-SELTEXT_M   = 'Febrary Value'.
**  WA_FIELDCAT-COL_POS     = 48.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.
**
*  WA_FIELDCAT-FIELDNAME   = 'QTY11'.
*  WA_FIELDCAT-SELTEXT_M   = 'March Qty(Case)'.
*  WA_FIELDCAT-COL_POS     = 102.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
**  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
**  WA_FIELDCAT-CTABNAME    = 'VBRK'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*  WA_FIELDCAT-FIELDNAME   = 'VOL11'.
*  WA_FIELDCAT-SELTEXT_M   = 'MarValue'.
*  WA_FIELDCAT-COL_POS     = 103.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*


    WA_FIELDCAT-FIELDNAME   = 'FINMAR_VAL'.
    WA_FIELDCAT-SELTEXT_M   = 'Mar'.
    WA_FIELDCAT-COL_POS     = 105.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.

*  WA_FIELDCAT-FIELDNAME   = 'V_MATMARCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATMARCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 99.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT..
*
*  WA_FIELDCAT-FIELDNAME   = 'MARACH'.
*  WA_FIELDCAT-SELTEXT_M   = 'Mar % '.
*  WA_FIELDCAT-COL_POS     = 104.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'PLAN2'.
*  WA_FIELDCAT-SELTEXT_M   = 'Mar-Plan'.
*  WA_FIELDCAT-COL_POS     = 105.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'MARCUSTCOUNT'.
*  WA_FIELDCAT-SELTEXT_M   = 'Mar-Sale'.
*  WA_FIELDCAT-COL_POS     = 106.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'MARACH1'.
*  WA_FIELDCAT-SELTEXT_M   = 'Mar-Ach'.
*  WA_FIELDCAT-COL_POS     = 107.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'TARGET'.
*  WA_FIELDCAT-SELTEXT_M   = 'Target'.
*  WA_FIELDCAT-COL_POS     = 103.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

**  WA_FIELDCAT-FIELDNAME   = 'AMT11'.
**  WA_FIELDCAT-SELTEXT_M   = 'March Value'.
**  WA_FIELDCAT-COL_POS     = 51.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.


  ENDIF.


  IF PRD_AVG = 'X'.

    WA_FIELDCAT-FIELDNAME   = 'VKBUR'.
    WA_FIELDCAT-SELTEXT_M   = 'SALES OFFICE'.
    WA_FIELDCAT-COL_POS     = 1.
*   WA_FIELDCAT-KEY    = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.

    WA_FIELDCAT-FIELDNAME   = 'BEZEI'.
    WA_FIELDCAT-SELTEXT_M   = 'SALES DESCRIPTION'.
    WA_FIELDCAT-COL_POS     = 2.
*   WA_FIELDCAT-KEY    = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.


    WA_FIELDCAT-FIELDNAME   = 'PERNR'.
    WA_FIELDCAT-SELTEXT_M   = 'PERNR'.
    WA_FIELDCAT-COL_POS     = 3.
*  WA_SORT-GROUP = 'X'.
*  WA_FIELDCAT-KEY    = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR1'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR1'.
*  WA_FIELDCAT-COL_POS     = 3.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR2'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR2'.
*  WA_FIELDCAT-COL_POS     = 4.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR3'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR3'.
*  WA_FIELDCAT-COL_POS     = 5.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR4'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR4'.
*  WA_FIELDCAT-COL_POS     = 6.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR5'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR5'.
*  WA_FIELDCAT-COL_POS     = 7.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR6'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR6'.
*  WA_FIELDCAT-COL_POS     = 8.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR7'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR7'.
*  WA_FIELDCAT-COL_POS     = 9.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR8'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR8'.
*  WA_FIELDCAT-COL_POS     = 10.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR9'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR9'.
*  WA_FIELDCAT-COL_POS     = 11.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR10'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR10'.
*  WA_FIELDCAT-COL_POS     = 12.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'PERNR11'.
*  WA_FIELDCAT-SELTEXT_M   = 'PERNR11'.
*  WA_FIELDCAT-COL_POS     = 13.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


    WA_FIELDCAT-FIELDNAME   = 'SO_NAME'.
    WA_FIELDCAT-SELTEXT_M   = 'SO_NAME'.
    WA_FIELDCAT-COL_POS     = 15.
*  WA_FIELDCAT-TEXT_FIELDNAME = 'SO_NAME'.
*  WA_FIELDCAT-COLTEXT = 'SO_NAME'.
*  WA_FIELDCAT-IFIELDNAME = 'SO_NAME'.
*  WA_FIELDCAT-KEY    = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.

*  WA_FIELDCAT-FIELDNAME   = 'KUNNR'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR'.
*  WA_FIELDCAT-COL_POS     = 16.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR1'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR1'.
*  WA_FIELDCAT-COL_POS     = 17.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR2'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR2'.
*  WA_FIELDCAT-COL_POS     = 18.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR3'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR3'.
*  WA_FIELDCAT-COL_POS     = 19.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR4'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR4'.
*  WA_FIELDCAT-COL_POS     = 20.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR5'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR5'.
*  WA_FIELDCAT-COL_POS     = 21.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR6'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR6'.
*  WA_FIELDCAT-COL_POS     = 22.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR7'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR7'.
*  WA_FIELDCAT-COL_POS     = 23.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR8'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR8'.
*  WA_FIELDCAT-COL_POS     = 24.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR9'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR9'.
*  WA_FIELDCAT-COL_POS     = 25.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR10'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR10'.
*  WA_FIELDCAT-COL_POS     = 26.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'KUNNR11'.
*  WA_FIELDCAT-SELTEXT_M   = 'KUNNR11'.
*  WA_FIELDCAT-COL_POS     = 27.
**  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


*    WA_FIELDCAT-FIELDNAME   = 'MATNR'.  KUNNR TYPE KNA1-KUNNR,
*  WA_FIELDCAT-SELTEXT_M   = 'MATERIAL'.
*  WA_FIELDCAT-COL_POS     = 7.
*  WA_SORT-GROUP = 'X'.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'MAKTX'.
*  WA_FIELDCAT-SELTEXT_M   = 'MATERIAL DESCRIPTION'.
*  WA_FIELDCAT-COL_POS     = 9.
**  WA_FIELDCAT-KEY    = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'VOLUM'.
*  WA_FIELDCAT-SELTEXT_M   = 'Liters Per Material'.
*  WA_FIELDCAT-COL_POS     = 11.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
**  WA_FIELDCAT-FIELDNAME   = 'NAME1'.
**  WA_FIELDCAT-SELTEXT_M   = 'Customer Name'.
**  WA_FIELDCAT-COL_POS     = 7.
***  WA_FIELDCAT-KEY    = 'X'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.

    WA_FIELDCAT-FIELDNAME   = 'MVGR1'.
    WA_FIELDCAT-SELTEXT_M   = 'MVGR1'.
    WA_FIELDCAT-COL_POS     = 28.
*  WA_FIELDCAT-KEY         = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR0'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR0'.
*  WA_FIELDCAT-COL_POS     = 29.
**  WA_FIELDCAT-KEY         = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'MVGRMAY'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGRMAY'.
*  WA_FIELDCAT-COL_POS     = 29.
**  WA_FIELDCAT-KEY         = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


*  WA_FIELDCAT-FIELDNAME   = 'MVGR2'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR2'.
*  WA_FIELDCAT-COL_POS     = 29.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR3'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR3'.
*  WA_FIELDCAT-COL_POS     = 30.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR4'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR4'.
*  WA_FIELDCAT-COL_POS     = 31.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR5'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR5'.
*  WA_FIELDCAT-COL_POS     = 32.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR6'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR6'.
*  WA_FIELDCAT-COL_POS     = 33.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR7'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR7'.
*  WA_FIELDCAT-COL_POS     = 34.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR8'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR8'.
*  WA_FIELDCAT-COL_POS     = 35.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR9'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR9'.
*  WA_FIELDCAT-COL_POS     = 36.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR10'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR10'.
*  WA_FIELDCAT-COL_POS     = 37.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR11'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR11'.
*  WA_FIELDCAT-COL_POS     = 38.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'MVGR12'.
*  WA_FIELDCAT-SELTEXT_M   = 'MVGR12'.
*  WA_FIELDCAT-COL_POS     = 39.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.



    WA_FIELDCAT-FIELDNAME   = 'GBEZEI'.
    WA_FIELDCAT-SELTEXT_M   = 'MATERIAL GROUP DESC.'.
    WA_FIELDCAT-COL_POS     = 41.
*  WA_FIELDCAT-KEY    = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.


*  WA_FIELDCAT-FIELDNAME   = 'FINAPR_VAL'.
*  WA_FIELDCAT-SELTEXT_M   = 'Apr Val'.
*  WA_FIELDCAT-COL_POS     = 42.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.



*  WA_FIELDCAT-FIELDNAME   = 'V_MATAPCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATAPCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 19.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
*    WA_FIELDCAT-FIELDNAME   = 'APRCUSTCOUNT'.
*    WA_FIELDCAT-SELTEXT_M   = 'Apr'.
*    WA_FIELDCAT-COL_POS     = 43.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*    APPEND WA_FIELDCAT TO IT_FIELDCAT.
*    CLEAR  WA_FIELDCAT.

    WA_FIELDCAT-FIELDNAME   = 'APRV'.
    WA_FIELDCAT-SELTEXT_M   = 'Apr'.
    WA_FIELDCAT-COL_POS     = 44.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.

*  WA_FIELDCAT-FIELDNAME   = 'V_APRCOUNT'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_APRCOUNT'.
*  WA_FIELDCAT-COL_POS     = 21.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


*  WA_FIELDCAT-FIELDNAME   = 'VOL1'.
*  WA_FIELDCAT-SELTEXT_M   = 'May Value'.
*  WA_FIELDCAT-COL_POS     = 21.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
**  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
*  WA_FIELDCAT-CTABNAME    = 'VBRK'.
*
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


*  WA_FIELDCAT-FIELDNAME   = 'FINMAY_VAL'.
*  WA_FIELDCAT-SELTEXT_M   = 'May Val'.
*  WA_FIELDCAT-COL_POS     = 45.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.



*  WA_FIELDCAT-FIELDNAME   = 'V_MATMAYCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATMAYCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 23.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


*    WA_FIELDCAT-FIELDNAME   = 'MAYCUSTCOUNT'.
*    WA_FIELDCAT-SELTEXT_M   = 'May'.
*    WA_FIELDCAT-COL_POS     = 46.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*    APPEND WA_FIELDCAT TO IT_FIELDCAT.
*    CLEAR  WA_FIELDCAT.

    WA_FIELDCAT-FIELDNAME   = 'MAYV'.
    WA_FIELDCAT-SELTEXT_M   = 'May'.
    WA_FIELDCAT-COL_POS     = 47.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.


*
*  WA_FIELDCAT-FIELDNAME   = 'V_MAYCOUNT'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MAYCOUNT'.
*  WA_FIELDCAT-COL_POS     = 25.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
**
*  WA_FIELDCAT-FIELDNAME   = 'VOL2'.
*  WA_FIELDCAT-SELTEXT_M   = 'June Value'.
*  WA_FIELDCAT-COL_POS     = 46.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
*  WA_FIELDCAT-CTABNAME    = 'VBRK'.
*
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*    WA_FIELDCAT-FIELDNAME   = 'FINJUN_VAL'.
*    WA_FIELDCAT-SELTEXT_M   = 'Jun Val'.
*    WA_FIELDCAT-COL_POS     = 49.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*    APPEND WA_FIELDCAT TO IT_FIELDCAT.
*    CLEAR  WA_FIELDCAT.
**
*  WA_FIELDCAT-FIELDNAME   = 'V_MATJUNCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATJUNCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 50.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*

*    WA_FIELDCAT-FIELDNAME   = 'JUNCUSTCOUNT'.
*    WA_FIELDCAT-SELTEXT_M   = 'Jun'.
*    WA_FIELDCAT-COL_POS     = 52.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*    APPEND WA_FIELDCAT TO IT_FIELDCAT.
*    CLEAR  WA_FIELDCAT.

    WA_FIELDCAT-FIELDNAME   = 'JUNV'.
    WA_FIELDCAT-SELTEXT_M   = 'Jun'.
    WA_FIELDCAT-COL_POS     = 53.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'V_JUNCOUNT'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_JUNCOUNT'.
*  WA_FIELDCAT-COL_POS     = 54.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*

**
**  WA_FIELDCAT-FIELDNAME   = 'AMT2'.
**  WA_FIELDCAT-SELTEXT_M   = 'June Value'.
**  WA_FIELDCAT-COL_POS     = 24.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.
*
**  WA_FIELDCAT-FIELDNAME   = 'QTY3'.
**  WA_FIELDCAT-SELTEXT_M   = 'July Qty(Case)'.
**  WA_FIELDCAT-COL_POS     = 25.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
***  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
***  WA_FIELDCAT-CTABNAME    = 'VBRK'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'VOL3'.
*  WA_FIELDCAT-SELTEXT_M   = 'July Value'.
*  WA_FIELDCAT-COL_POS     = 54.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*
*    WA_FIELDCAT-FIELDNAME   = 'FINJULY_VAL'.
*    WA_FIELDCAT-SELTEXT_M   = 'July Val'.
*    WA_FIELDCAT-COL_POS     = 56.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*    APPEND WA_FIELDCAT TO IT_FIELDCAT.
*    CLEAR  WA_FIELDCAT.
**
*  WA_FIELDCAT-FIELDNAME   = 'V_MATJULYCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATJULYCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 58.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*    WA_FIELDCAT-FIELDNAME   = 'JULYCUSTCOUNT'.
*    WA_FIELDCAT-SELTEXT_M   = 'July'.
*    WA_FIELDCAT-COL_POS     = 60.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*    APPEND WA_FIELDCAT TO IT_FIELDCAT.
*    CLEAR  WA_FIELDCAT.

    WA_FIELDCAT-FIELDNAME   = 'JULYV'.
    WA_FIELDCAT-SELTEXT_M   = 'July'.
    WA_FIELDCAT-COL_POS     = 61.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.


*
*  WA_FIELDCAT-FIELDNAME   = 'V_JULYCOUNT'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_JULYCOUNT'.
*  WA_FIELDCAT-COL_POS     = 62.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.



**
**  WA_FIELDCAT-FIELDNAME   = 'AMT3'.
**  WA_FIELDCAT-SELTEXT_M   = 'July Value'.
**  WA_FIELDCAT-COL_POS     = 27.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.
**
**  WA_FIELDCAT-FIELDNAME   = 'QTY4'.
**  WA_FIELDCAT-SELTEXT_M   = 'August Qty(Case)'.
**  WA_FIELDCAT-COL_POS     = 28.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
***  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
***  WA_FIELDCAT-CTABNAME    = 'VBRK'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.


*
*  WA_FIELDCAT-FIELDNAME   = 'VOL4'.
*  WA_FIELDCAT-SELTEXT_M   = 'Aug Value'.
*  WA_FIELDCAT-COL_POS     = 62.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'FINAUG_VAL'.
*  WA_FIELDCAT-SELTEXT_M   = 'Aug Val'.
*  WA_FIELDCAT-COL_POS     = 67.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*  WA_FIELDCAT-FIELDNAME   = 'V_MATAUGCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATAUGCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 66.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*    WA_FIELDCAT-FIELDNAME   = 'AUGCUSTCOUNT'.
*    WA_FIELDCAT-SELTEXT_M   = 'Aug'.
*    WA_FIELDCAT-COL_POS     = 68.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*    APPEND WA_FIELDCAT TO IT_FIELDCAT.
*    CLEAR  WA_FIELDCAT.

    WA_FIELDCAT-FIELDNAME   = 'AUGV'.
    WA_FIELDCAT-SELTEXT_M   = 'Aug'.
    WA_FIELDCAT-COL_POS     = 69.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.



**  WA_FIELDCAT-FIELDNAME   = 'AMT4'.
**  WA_FIELDCAT-SELTEXT_M   = 'Augest Value'.
**  WA_FIELDCAT-COL_POS     = 30.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.
**
**  WA_FIELDCAT-FIELDNAME   = 'QTY5'.
**  WA_FIELDCAT-SELTEXT_M   = 'September Qty(Case)'.
**  WA_FIELDCAT-COL_POS     = 31.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
***  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
***  WA_FIELDCAT-CTABNAME    = 'VBRK'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.


*  WA_FIELDCAT-FIELDNAME   = 'VOL5'.
*  WA_FIELDCAT-SELTEXT_M   = 'Sep Value'.
*  WA_FIELDCAT-COL_POS     = 70.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'FINSEP_VAL'.
*  WA_FIELDCAT-SELTEXT_M   = 'Sep Val'.
*  WA_FIELDCAT-COL_POS     = 72.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


*    WA_FIELDCAT-FIELDNAME   = 'SEPCUSTCOUNT'.
*    WA_FIELDCAT-SELTEXT_M   = 'Sep'.
*    WA_FIELDCAT-COL_POS     = 73.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*    APPEND WA_FIELDCAT TO IT_FIELDCAT.
*    CLEAR  WA_FIELDCAT.

    WA_FIELDCAT-FIELDNAME   = 'SEPV'.
    WA_FIELDCAT-SELTEXT_M   = 'Sep'.
    WA_FIELDCAT-COL_POS     = 71.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.


*
**  WA_FIELDCAT-FIELDNAME   = 'AMT5'. FINSEP_VAL
**  WA_FIELDCAT-SELTEXT_M   = 'September Value'.
**  WA_FIELDCAT-COL_POS     = 33.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.
**
**  WA_FIELDCAT-FIELDNAME   = 'QTY6'.
**  WA_FIELDCAT-SELTEXT_M   = 'October Qty(Case)'.
**  WA_FIELDCAT-COL_POS     = 34.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
***  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
***  WA_FIELDCAT-CTABNAME    = 'VBRK'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
***  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'VOL6'.
*  WA_FIELDCAT-SELTEXT_M   = 'Oct Value'.
*  WA_FIELDCAT-COL_POS     = 72.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*  WA_FIELDCAT-FIELDNAME   = 'FINOCT_VAL'.
*  WA_FIELDCAT-SELTEXT_M   = 'Oct Val'.
*  WA_FIELDCAT-COL_POS     = 74.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*  WA_FIELDCAT-FIELDNAME   = 'V_MATOCTCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATOCTCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 76.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


*    WA_FIELDCAT-FIELDNAME   = 'OCTCUSTCOUNT'.
*    WA_FIELDCAT-SELTEXT_M   = 'Oct'.
*    WA_FIELDCAT-COL_POS     = 78.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*    APPEND WA_FIELDCAT TO IT_FIELDCAT.
*    CLEAR  WA_FIELDCAT.

    WA_FIELDCAT-FIELDNAME   = 'OCTV'.
    WA_FIELDCAT-SELTEXT_M   = 'Oct'.
    WA_FIELDCAT-COL_POS     = 79.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.


**  WA_FIELDCAT-FIELDNAME   = 'AMT6'.
**  WA_FIELDCAT-SELTEXT_M   = 'October Value'.
**  WA_FIELDCAT-COL_POS     = 36.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.
**
**  WA_FIELDCAT-FIELDNAME   = 'QTY7'.
**  WA_FIELDCAT-SELTEXT_M   = 'November Qty(Case)'.
**  WA_FIELDCAT-COL_POS     = 37.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
***  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
***  WA_FIELDCAT-CTABNAME    = 'VBRK'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'VOL7'.
*  WA_FIELDCAT-SELTEXT_M   = 'Nov Value'.
*  WA_FIELDCAT-COL_POS     = 80.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'FINNOV_VAL'.
*  WA_FIELDCAT-SELTEXT_M   = 'Nov Val'.
*  WA_FIELDCAT-COL_POS     = 82.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'V_MATNOVCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATNOVCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 84.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


*    WA_FIELDCAT-FIELDNAME   = 'NOVCUSTCOUNT'.
*    WA_FIELDCAT-SELTEXT_M   = 'Nov'.
*    WA_FIELDCAT-COL_POS     = 86.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*    APPEND WA_FIELDCAT TO IT_FIELDCAT.
*    CLEAR  WA_FIELDCAT.

    WA_FIELDCAT-FIELDNAME   = 'NOVV'.
    WA_FIELDCAT-SELTEXT_M   = 'Nov'.
    WA_FIELDCAT-COL_POS     = 87.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.

*  WA_FIELDCAT-FIELDNAME   = 'V_NOVCOUNT'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_NOVCOUNT'.
*  WA_FIELDCAT-COL_POS     = 88.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*

**  WA_FIELDCAT-FIELDNAME   = 'AMT7'.
**  WA_FIELDCAT-SELTEXT_M   = 'November  Value'.
**  WA_FIELDCAT-COL_POS     = 39.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.
**
**  WA_FIELDCAT-FIELDNAME   = 'QTY8'.
**  WA_FIELDCAT-SELTEXT_M   = 'December Qty(Case)'.
**  WA_FIELDCAT-COL_POS     = 40.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
***  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
***  WA_FIELDCAT-CTABNAME    = 'VBRK'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'VOL8'.
*  WA_FIELDCAT-SELTEXT_M   = 'Dec-Value'.
*  WA_FIELDCAT-COL_POS     = 88.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'FINDEC_VAL'.
*  WA_FIELDCAT-SELTEXT_M   = 'Dec Val'.
*  WA_FIELDCAT-COL_POS     = 90.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


*  WA_FIELDCAT-FIELDNAME   = 'V_MATDECCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATDECCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 92.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
*    WA_FIELDCAT-FIELDNAME   = 'DECCUSTCOUNT'.
*    WA_FIELDCAT-SELTEXT_M   = 'Dec'.
*    WA_FIELDCAT-COL_POS     = 91.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*    APPEND WA_FIELDCAT TO IT_FIELDCAT.
*    CLEAR  WA_FIELDCAT.

    WA_FIELDCAT-FIELDNAME   = 'DECV'.
    WA_FIELDCAT-SELTEXT_M   = 'Dec'.
    WA_FIELDCAT-COL_POS     = 92.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.


*  WA_FIELDCAT-FIELDNAME   = 'TARGET'.
*  WA_FIELDCAT-SELTEXT_M   = 'Tot-Tar'.
*  WA_FIELDCAT-COL_POS     = 91.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*  WA_FIELDCAT-FIELDNAME   = 'PERCENTAGE'.
*  WA_FIELDCAT-SELTEXT_M   = 'Keyprod% '.
*  WA_FIELDCAT-COL_POS     = 92.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'FINTARGET'.
*
*  WA_FIELDCAT-SELTEXT_M   = 'Target'.
*  WA_FIELDCAT-COL_POS     = 93.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*  WA_FIELDCAT-FIELDNAME   = 'JANACH'.
*  WA_FIELDCAT-SELTEXT_M   = 'Jan %'.
*  WA_FIELDCAT-COL_POS     = 94.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'PLAN'.
*  WA_FIELDCAT-SELTEXT_M   = 'Jan-Plan'.
*  WA_FIELDCAT-COL_POS     = 95.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*

**  WA_FIELDCAT-FIELDNAME   = 'AMT8'.
**  WA_FIELDCAT-SELTEXT_M   = 'December  Value'.
**  WA_FIELDCAT-COL_POS     = 42.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.
**
**  WA_FIELDCAT-FIELDNAME   = 'QTY9'.
**  WA_FIELDCAT-SELTEXT_M   = 'Jan. Qty(Case)'.
**  WA_FIELDCAT-COL_POS     = 43.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
***  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
***  WA_FIELDCAT-CTABNAME    = 'VBRK'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'VOL9'.
*  WA_FIELDCAT-SELTEXT_M   = 'JanValue'.
*  WA_FIELDCAT-COL_POS     = 95.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'FINJAN_VAL'.
*  WA_FIELDCAT-SELTEXT_M   = 'Jan Val'.
*  WA_FIELDCAT-COL_POS     = 96.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


*  WA_FIELDCAT-FIELDNAME   = 'V_MATJANCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATJANCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 97.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


*
*    WA_FIELDCAT-FIELDNAME   = 'JANCUSTCOUNT'.
*    WA_FIELDCAT-SELTEXT_M   = 'Jan'.
*    WA_FIELDCAT-COL_POS     = 97.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*    APPEND WA_FIELDCAT TO IT_FIELDCAT.
*    CLEAR  WA_FIELDCAT.

    WA_FIELDCAT-FIELDNAME   = 'JANV'.
    WA_FIELDCAT-SELTEXT_M   = 'Jan'.
    WA_FIELDCAT-COL_POS     = 98.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.


*  WA_FIELDCAT-FIELDNAME   = 'JANACH1'.
*  WA_FIELDCAT-SELTEXT_M   = 'Jan-Ach'.
*  WA_FIELDCAT-COL_POS     = 98.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*


**  WA_FIELDCAT-FIELDNAME   = 'AMT9'.
**  WA_FIELDCAT-SELTEXT_M   = 'January Value'.
**  WA_FIELDCAT-COL_POS     = 45.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.
**
**  WA_FIELDCAT-FIELDNAME   = 'QTY10'.
**  WA_FIELDCAT-SELTEXT_M   = 'Febrary Qty(Case)'.
**  WA_FIELDCAT-COL_POS     = 46.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
***  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
***  WA_FIELDCAT-CTABNAME    = 'VBRK'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
***  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'VOL10'.
*  WA_FIELDCAT-SELTEXT_M   = 'FebValue'.
*  WA_FIELDCAT-COL_POS     = 96.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*


*  WA_FIELDCAT-FIELDNAME   = 'FINFEB_VAL'.
*  WA_FIELDCAT-SELTEXT_M   = 'Feb Val'.
*  WA_FIELDCAT-COL_POS     = 99.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


*  WA_FIELDCAT-FIELDNAME   = 'V_MATFEBCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATFEBCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 98.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*  WA_FIELDCAT-FIELDNAME   = 'FEBACH'.
*  WA_FIELDCAT-SELTEXT_M   = 'Feb % '.
*  WA_FIELDCAT-COL_POS     = 100.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*  WA_FIELDCAT-FIELDNAME   = 'PLAN1'.
*  WA_FIELDCAT-SELTEXT_M   = 'Feb-Plan'.
*  WA_FIELDCAT-COL_POS     = 101.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*    WA_FIELDCAT-FIELDNAME   = 'FEBCUSTCOUNT'.
*    WA_FIELDCAT-SELTEXT_M   = 'Feb'.
*    WA_FIELDCAT-COL_POS     = 102.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*    APPEND WA_FIELDCAT TO IT_FIELDCAT.
*    CLEAR  WA_FIELDCAT.

    WA_FIELDCAT-FIELDNAME   = 'FRBV'.
    WA_FIELDCAT-SELTEXT_M   = 'Feb'.
    WA_FIELDCAT-COL_POS     = 103.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.


*  WA_FIELDCAT-FIELDNAME   = 'FEBACH1'.
*  WA_FIELDCAT-SELTEXT_M   = 'Feb-Ach'.
*  WA_FIELDCAT-COL_POS     = 103.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*


**  WA_FIELDCAT-FIELDNAME   = 'AMT10'.
**  WA_FIELDCAT-SELTEXT_M   = 'Febrary Value'.
**  WA_FIELDCAT-COL_POS     = 48.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
**  CLEAR  WA_FIELDCAT.
**
**  WA_FIELDCAT-FIELDNAME   = 'QTY11'.
**  WA_FIELDCAT-SELTEXT_M   = 'March Qty(Case)'.
**  WA_FIELDCAT-COL_POS     = 49.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
***  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
***  WA_FIELDCAT-CTABNAME    = 'VBRK'.
**  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'VOL11'.
*  WA_FIELDCAT-SELTEXT_M   = 'MarValue'.
*  WA_FIELDCAT-COL_POS     = 97.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


*
*  WA_FIELDCAT-FIELDNAME   = 'FINMAR_VAL'.
*  WA_FIELDCAT-SELTEXT_M   = 'Mar Val'.
*  WA_FIELDCAT-COL_POS     = 104.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


*  WA_FIELDCAT-FIELDNAME   = 'V_MATMARCOUNT1'.
*  WA_FIELDCAT-SELTEXT_M   = 'V_MATMARCOUNT1'.
*  WA_FIELDCAT-COL_POS     = 99.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT..

*  WA_FIELDCAT-FIELDNAME   = 'MARACH'.
*  WA_FIELDCAT-SELTEXT_M   = 'Mar % '.
*  WA_FIELDCAT-COL_POS     = 104.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*  WA_FIELDCAT-FIELDNAME   = 'PLAN2'.
*  WA_FIELDCAT-SELTEXT_M   = 'Mar-Plan'.
*  WA_FIELDCAT-COL_POS     = 105.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*    WA_FIELDCAT-FIELDNAME   = 'MARCUSTCOUNT'.
*    WA_FIELDCAT-SELTEXT_M   = 'Mar'.
*    WA_FIELDCAT-COL_POS     = 106.
**  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*    APPEND WA_FIELDCAT TO IT_FIELDCAT.
*    CLEAR  WA_FIELDCAT.

    WA_FIELDCAT-FIELDNAME   = 'MARV'.
    WA_FIELDCAT-SELTEXT_M   = 'Mar'.
    WA_FIELDCAT-COL_POS     = 107.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
*  WA_FIELDCAT-DO_SUM      = 'X'.
    APPEND WA_FIELDCAT TO IT_FIELDCAT.
    CLEAR  WA_FIELDCAT.

*  WA_FIELDCAT-FIELDNAME   = 'MARACH1'.
*  WA_FIELDCAT-SELTEXT_M   = 'Mar-Ach'.
*  WA_FIELDCAT-COL_POS     = 107.
*  WA_FIELDCAT-NO_ZERO     = 'X'.
**  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


  ENDIF.


ENDFORM.                    "BUILD_FIELDCATALOG_OVERVIEW

" BUILD_FIELDCATALOG_OVERVIEW
*&---------------------------------------------------------------------*
*&      Form  BUILD_ALV_OVERVIEW
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM BUILD_ALV_OVERVIEW .

  LAYOUT-COLWIDTH_OPTIMIZE = 'X'.
  LAYOUT-ZEBRA = 'X'.

  IF PRD_SPRD = 'X'.

    CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
*   I_INTERFACE_CHECK                 = ' '
*   I_BYPASSING_BUFFER                = ' '
*   I_BUFFER_ACTIVE                   = ' '
        I_CALLBACK_PROGRAM                = SY-REPID
*      I_CALLBACK_PF_STATUS_SET          = 'PF_STATUS_GET'
*      I_CALLBACK_USER_COMMAND           = 'MY_USER_COMMAND'
     I_CALLBACK_TOP_OF_PAGE            = 'ALV_CATALOG_HEADER'
*   I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*   I_CALLBACK_HTML_END_OF_LIST       = ' '
*   I_STRUCTURE_NAME                  =
*   I_BACKGROUND_ID                   = ' '
*   I_GRID_TITLE                      =
*   I_GRID_SETTINGS                   =
     IS_LAYOUT                          = LAYOUT
        IT_FIELDCAT                       = IT_FIELDCAT
*   IT_EXCLUDING                      =
*   IT_SPECIAL_GROUPS                 =
      IT_SORT                           = IT_SORT
*   IT_FILTER                         =
*   IS_SEL_HIDE                       =
     I_DEFAULT                         = 'X'
     I_SAVE                            = 'A'
*   IS_VARIANT                        =
*   IT_EVENTS                         =
*   IT_EVENT_EXIT                     =
*   IS_PRINT                          =
*   IS_REPREP_ID                      =
*   I_SCREEN_START_COLUMN             = 0
*   I_SCREEN_START_LINE               = 0
*   I_SCREEN_END_COLUMN               = 0
*   I_SCREEN_END_LINE                 = 0
*   I_HTML_HEIGHT_TOP                 = 0
*   I_HTML_HEIGHT_END                 = 0
*   IT_ALV_GRAPHICS                   =
*   IT_HYPERLINK                      =
*   IT_ADD_FIELDCAT                   =
*   IT_EXCEPT_QINFO                   =
*   IR_SALV_FULLSCREEN_ADAPTER        =
* IMPORTING
*   E_EXIT_CAUSED_BY_CALLER           =
*   ES_EXIT_CAUSED_BY_USER            =
      TABLES
*      T_OUTTAB                          = IT_FINOVR[]
          T_OUTTAB                         = GT_FINAL[]
* EXCEPTIONS
*   PROGRAM_ERROR                     = 1
*   OTHERS                            = 2
              .
    IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.


  ENDIF.

  IF PRD_TOT = 'X' .


    CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
*   I_INTERFACE_CHECK                 = ' '
*   I_BYPASSING_BUFFER                = ' '
*   I_BUFFER_ACTIVE                   = ' '
        I_CALLBACK_PROGRAM                = SY-REPID
*      I_CALLBACK_PF_STATUS_SET          = 'PF_STATUS_GET'
*      I_CALLBACK_USER_COMMAND           = 'MY_USER_COMMAND'
     I_CALLBACK_TOP_OF_PAGE            = 'ALV_CATALOG_HEADER'
*   I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*   I_CALLBACK_HTML_END_OF_LIST       = ' '
*   I_STRUCTURE_NAME                  =
*   I_BACKGROUND_ID                   = ' '
*   I_GRID_TITLE                      =
*   I_GRID_SETTINGS                   =
     IS_LAYOUT                          = LAYOUT
        IT_FIELDCAT                       = IT_FIELDCAT
*   IT_EXCLUDING                      =
*   IT_SPECIAL_GROUPS                 =
      IT_SORT                           = IT_SORT
*   IT_FILTER                         =
*   IS_SEL_HIDE                       =
     I_DEFAULT                         = 'X'
     I_SAVE                            = 'A'
*   IS_VARIANT                        =
*   IT_EVENTS                         =
*   IT_EVENT_EXIT                     =
*   IS_PRINT                          =
*   IS_REPREP_ID                      =
*   I_SCREEN_START_COLUMN             = 0
*   I_SCREEN_START_LINE               = 0
*   I_SCREEN_END_COLUMN               = 0
*   I_SCREEN_END_LINE                 = 0
*   I_HTML_HEIGHT_TOP                 = 0
*   I_HTML_HEIGHT_END                 = 0
*   IT_ALV_GRAPHICS                   =
*   IT_HYPERLINK                      =
*   IT_ADD_FIELDCAT                   =
*   IT_EXCEPT_QINFO                   =
*   IR_SALV_FULLSCREEN_ADAPTER        =
* IMPORTING
*   E_EXIT_CAUSED_BY_CALLER           =
*   ES_EXIT_CAUSED_BY_USER            =
      TABLES
*      T_OUTTAB                          = IT_FINOVR[]
          T_OUTTAB                         = GT_FINAL[]
* EXCEPTIONS
*   PROGRAM_ERROR                     = 1
*   OTHERS                            = 2
              .
    IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.

  ENDIF.



  IF PRD_AVG = 'X'.


    CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
*   I_INTERFACE_CHECK                 = ' '
*   I_BYPASSING_BUFFER                = ' '
*   I_BUFFER_ACTIVE                   = ' '
        I_CALLBACK_PROGRAM                = SY-REPID
*      I_CALLBACK_PF_STATUS_SET          = 'PF_STATUS_GET'
*      I_CALLBACK_USER_COMMAND           = 'MY_USER_COMMAND'
     I_CALLBACK_TOP_OF_PAGE            = 'ALV_CATALOG_HEADER'
*   I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*   I_CALLBACK_HTML_END_OF_LIST       = ' '
*   I_STRUCTURE_NAME                  =
*   I_BACKGROUND_ID                   = ' '
*   I_GRID_TITLE                      =
*   I_GRID_SETTINGS                   =
     IS_LAYOUT                          = LAYOUT
        IT_FIELDCAT                       = IT_FIELDCAT
*   IT_EXCLUDING                      =
*   IT_SPECIAL_GROUPS                 =
      IT_SORT                           = IT_SORT
*   IT_FILTER                         =
*   IS_SEL_HIDE                       =
     I_DEFAULT                         = 'X'
     I_SAVE                            = 'A'
*   IS_VARIANT                        =
*   IT_EVENTS                         =
*   IT_EVENT_EXIT                     =
*   IS_PRINT                          =
*   IS_REPREP_ID                      =
*   I_SCREEN_START_COLUMN             = 0
*   I_SCREEN_START_LINE               = 0
*   I_SCREEN_END_COLUMN               = 0
*   I_SCREEN_END_LINE                 = 0
*   I_HTML_HEIGHT_TOP                 = 0
*   I_HTML_HEIGHT_END                 = 0
*   IT_ALV_GRAPHICS                   =
*   IT_HYPERLINK                      =
*   IT_ADD_FIELDCAT                   =
*   IT_EXCEPT_QINFO                   =
*   IR_SALV_FULLSCREEN_ADAPTER        =
* IMPORTING
*   E_EXIT_CAUSED_BY_CALLER           =
*   ES_EXIT_CAUSED_BY_USER            =
      TABLES
*      T_OUTTAB                          = IT_FINOVR[]
          T_OUTTAB                         = GT_FINAL[]
* EXCEPTIONS
*   PROGRAM_ERROR                     = 1
*   OTHERS                            = 2
              .
    IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.


  ENDIF.


ENDFORM.                    "BUILD_ALV_OVERVIEW

*---------------------------------------------------
*&      Form  ALV_CATALOG_HEADER
*&-------------------------------------------------------------------
*       text
*--------------------------------------------------------------------
*  -->  p1        text
*  <--  p2        text
*--------------------------------------------------------------------
FORM ALV_CATALOG_HEADER.

  DATA : LIT_HEADER TYPE  SLIS_T_LISTHEADER,
         LS_LINE TYPE SLIS_LISTHEADER.

    DATA :  LV_BUKRS(100) TYPE C.

     CLEAR : LV_BUKRS.

 IF PRD_SPRD = 'X'.





  IF SO_BUKRS-HIGH IS NOT INITIAL.
    CONCATENATE 'Company Code :' SO_BUKRS-LOW 'To' SO_BUKRS-HIGH INTO LV_BUKRS SEPARATED BY SPACE.
  ELSE.
    CONCATENATE 'Company Code :' SO_BUKRS-LOW INTO LV_BUKRS SEPARATED BY SPACE.
  ENDIF.

  CLEAR LS_LINE.
  LS_LINE-TYP  = 'S'.
  LS_LINE-KEY = ' '.
  LS_LINE-INFO = LV_BUKRS.
  APPEND LS_LINE TO LIT_HEADER.

  CLEAR LS_LINE.
  LS_LINE-TYP  = 'H'.
  LS_LINE-KEY = ' '.
  LS_LINE-INFO = 'Product Spread Report' .
  APPEND LS_LINE TO LIT_HEADER.


  CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
    EXPORTING
      IT_LIST_COMMENTARY = LIT_HEADER.

*  CALL FUNCTION 'CONVERSION_EXIT_SDATE_OUTPUT'
*    EXPORTING
*      INPUT  = LV_BEDAT
*    IMPORTING
*      OUTPUT = LV_BEDAT.

**  CALL FUNCTION 'CONVERSION_EXIT_SDATE_OUTPUT'
**
**  EXPORTING
**    INPUT         = LV_BEDAT.

*      I_LOGO             = ' '.

ENDIF.

 IF PRD_TOT = 'X'.


  IF SO_BUKRS-HIGH IS NOT INITIAL.
    CONCATENATE 'Company Code :' SO_BUKRS-LOW 'To' SO_BUKRS-HIGH INTO LV_BUKRS SEPARATED BY SPACE.
  ELSE.
    CONCATENATE 'Company Code :' SO_BUKRS-LOW INTO LV_BUKRS SEPARATED BY SPACE.
  ENDIF.

  CLEAR LS_LINE.
  LS_LINE-TYP  = 'S'.
  LS_LINE-KEY = ' '.
  LS_LINE-INFO = LV_BUKRS.
  APPEND LS_LINE TO LIT_HEADER.

  CLEAR LS_LINE.
  LS_LINE-TYP  = 'H'.
  LS_LINE-KEY = ' '.
  LS_LINE-INFO = 'Product Spread Total Ltr' .
  APPEND LS_LINE TO LIT_HEADER.


  CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
    EXPORTING
      IT_LIST_COMMENTARY = LIT_HEADER.

*  CALL FUNCTION 'CONVERSION_EXIT_SDATE_OUTPUT'
*    EXPORTING
*      INPUT  = LV_BEDAT
*    IMPORTING
*      OUTPUT = LV_BEDAT.

**  CALL FUNCTION 'CONVERSION_EXIT_SDATE_OUTPUT'
**
**  EXPORTING
**    INPUT         = LV_BEDAT.

*      I_LOGO             = ' '.

ENDIF.

  IF PRD_AVG = 'X'.

  IF SO_BUKRS-HIGH IS NOT INITIAL.
    CONCATENATE 'Company Code :' SO_BUKRS-LOW 'To' SO_BUKRS-HIGH INTO LV_BUKRS SEPARATED BY SPACE.
  ELSE.
    CONCATENATE 'Company Code :' SO_BUKRS-LOW INTO LV_BUKRS SEPARATED BY SPACE.
  ENDIF.

  CLEAR LS_LINE.
  LS_LINE-TYP  = 'S'.
  LS_LINE-KEY = ' '.
  LS_LINE-INFO = LV_BUKRS.
  APPEND LS_LINE TO LIT_HEADER.

  CLEAR LS_LINE.
  LS_LINE-TYP  = 'H'.
  LS_LINE-KEY = ' '.
  LS_LINE-INFO = 'Product Spread Average Ltr' .
  APPEND LS_LINE TO LIT_HEADER.


  CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
    EXPORTING
      IT_LIST_COMMENTARY = LIT_HEADER.

*  CALL FUNCTION 'CONVERSION_EXIT_SDATE_OUTPUT'
*    EXPORTING
*      INPUT  = LV_BEDAT
*    IMPORTING
*      OUTPUT = LV_BEDAT.

**  CALL FUNCTION 'CONVERSION_EXIT_SDATE_OUTPUT'
**
**  EXPORTING
**    INPUT         = LV_BEDAT.

*      I_LOGO             = ' '.

ENDIF.


ENDFORM.                    "ALV_CATALOG_HEADER
