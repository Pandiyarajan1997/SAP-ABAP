
*&---------------------------------------------------------------------*
*& Report  ZCUST_CRE_CON_MONTH
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT ZCUST_CRE_CON_MONTH.

DATA: IT_RETURN	TYPE BAPIRETURN,
      IT_OPEN  TYPE STANDARD TABLE OF BAPI3007_2,
      WA_OPEN  LIKE LINE OF IT_OPEN.
DATA :IT1_RETURN TYPE BAPIRETURN,
      IT_CLOSE  TYPE STANDARD TABLE OF BAPI3007_2,
      WA_CLOSE  LIKE LINE OF IT_CLOSE.



 TYPES : BEGIN OF GS_KNB1,
             KUNNR TYPE KNB1-KUNNR,
             BUKRS TYPE KNB1-BUKRS,
             ERDAT TYPE KNB1-ERDAT,
             ERNAM TYPE KNB1-ERNAM,
             SPERR TYPE KNB1-SPERR,
            LOEVM TYPE KNB1-LOEVM,
         END OF GS_KNB1.

TYPES : BEGIN OF GS_VBRK,
        VBELN TYPE VBRK-VBELN,
        FKART TYPE VBRK-FKART,
        FKDAT TYPE VBRK-FKDAT,
        ZTERM TYPE VBRK-ZTERM,
        BUKRS TYPE VBRK-BUKRS,
        NETWR TYPE VBRK-NETWR,
        KUNRG TYPE VBRK-KUNRG,
        KUNAG TYPE VBRK-KUNAG,
        MWSBK TYPE VBRK-MWSBK,
        INV_TOT  TYPE VBRK-NETWR,
        CUST_TOT TYPE VBRK-NETWR,
        CUST_PER TYPE VBRK-NETWR,
      END OF GS_VBRK.

 DATA : IT_KNB1 TYPE TABLE OF GS_KNB1,
               WA_KNB1 TYPE GS_KNB1.

DATA : GT_VBRK TYPE TABLE OF GS_VBRK,
       WA_VBRK TYPE GS_VBRK.

DATA : GT1_VBRK TYPE TABLE OF GS_VBRK,
       WA1_VBRK TYPE GS_VBRK.

TYPES : BEGIN OF GS_ZCUST_CRE_CON,
        BUKRS TYPE ZCUST_CRE_CON-BUKRS,
        KUNNR TYPE ZCUST_CRE_CON-KUNNR,
        NAME1 TYPE ZCUST_CRE_CON-NAME1,
        KLIMK TYPE ZCUST_CRE_CON-KLIMK,
        KLIMK_CUR TYPE ZCUST_CRE_CON-KLIMK_CUR,
        FBL5N_BAL TYPE ZCUST_CRE_CON-FBL5N_BAL,
      END OF GS_ZCUST_CRE_CON.

DATA : GT_ZCUST_CRE_CON TYPE TABLE OF GS_ZCUST_CRE_CON,
       WA_ZCUST_CRE_CON TYPE GS_ZCUST_CRE_CON.

TYPES : BEGIN OF GS1_FINAL,
           COMP TYPE VBRK-BUKRS,
           CUST TYPE VBRK-KUNRG,
           CLEAR TYPE VBRK-FKDAT,
           DUE TYPE VBRK-FKDAT,
           KLIMK TYPE VBRK-NETWR,
           TOT_AMT TYPE VBRK-NETWR,
         END OF GS1_FINAL.

DATA : IT1_FINAL TYPE TABLE OF GS1_FINAL,
       WA1_FINAL TYPE GS1_FINAL.


DATA:   MONTH  TYPE T009B-BUMON ,
        YEAR  TYPE T009B-BDATJ .
DATA:   MONTH1  TYPE T009B-BUMON ,
        YEAR1	TYPE T009B-BDATJ .
DATA :  TO_DAY TYPE SY-DATUM.
DATA :  FROM_DATE TYPE SY-DATUM.
DATA :  TO_DATE TYPE SY-DATUM .
DATA : LV_DUE TYPE VBRK-FKDAT.

DATA : DIS_DAY1 LIKE T5A4A-DLYDY.

*CALL FUNCTION 'OIL_LAST_DAY_OF_PREVIOUS_MONTH'
*  EXPORTING
*    I_DATE_OLD       = sy-DATUM
* IMPORTING
*   E_DATE_NEW       = to_date
*          .

TO_DAY = SY-DATUM .

"TO_DAY = '20140701' .
MONTH1 =  TO_DAY+4(2) .
YEAR1 = TO_DAY(4) .

IF MONTH1  = 01 .
  MONTH = 12.
  YEAR = YEAR1 - 1 .
ELSE.
  MONTH = MONTH1 - 1 .
  YEAR = YEAR1.
ENDIF.

CALL FUNCTION 'OIL_MONTH_GET_FIRST_LAST'
 EXPORTING
   I_MONTH           = MONTH
   I_YEAR            = YEAR
*   I_DATE            =
 IMPORTING
   E_FIRST_DAY       = FROM_DATE
   E_LAST_DAY        = TO_DATE
* EXCEPTIONS
*   WRONG_DATE        = 1
*   OTHERS            = 2
          .
IF SY-SUBRC <> 0.
* Implement suitable error handling here
ENDIF.

  SELECT         KUNNR
                 BUKRS
                 ERDAT
                 ERNAM
                 SPERR
                 LOEVM
  FROM KNB1 INTO TABLE IT_KNB1 WHERE  ( BUKRS = '1000' OR BUKRS = '2000' OR BUKRS = '4000' ) AND  CREDIT_TYPE = 'DEFAULT' .

SELECT "#EC CI_DB_OPERATION_OK[2768887] " Added by <IT-CAR Tool> during Code Remediation
        VBELN
        FKART
        FKDAT
        ZTERM
        BUKRS
        NETWR
        KUNRG
        KUNAG
        MWSBK
          FROM VBRK INTO TABLE GT_VBRK FOR ALL ENTRIES IN IT_KNB1 WHERE BUKRS = IT_KNB1-BUKRS AND KUNRG = IT_KNB1-KUNNR AND FKDAT > FROM_DATE AND FKDAT < TO_DATE.

IF GT_VBRK IS NOT INITIAL.

  LOOP AT GT_VBRK INTO WA_VBRK .
    WA_VBRK-INV_TOT = WA_VBRK-NETWR + WA_VBRK-MWSBK .
    MODIFY GT_VBRK FROM WA_VBRK TRANSPORTING INV_TOT .
    CLEAR : WA_VBRK.
  ENDLOOP.

  APPEND LINES OF GT_VBRK TO GT1_VBRK .

SORT GT_VBRK BY BUKRS KUNRG. " Added by <IT-CAR Tool> during Code Remediation
  DELETE ADJACENT DUPLICATES FROM GT_VBRK COMPARING BUKRS KUNRG.

  SELECT BUKRS
        KUNNR
        NAME1
        KLIMK
        KLIMK_CUR
        FBL5N_BAL FROM ZCUST_CRE_CON INTO TABLE GT_ZCUST_CRE_CON FOR ALL ENTRIES IN GT_VBRK WHERE BUKRS = GT_VBRK-BUKRS AND KUNNR = GT_VBRK-KUNRG .

  LOOP AT GT_VBRK INTO WA_VBRK .
    LOOP AT GT1_VBRK INTO WA1_VBRK WHERE BUKRS = WA_VBRK-BUKRS AND KUNRG = WA_VBRK-KUNRG.
      WA_VBRK-CUST_TOT = WA_VBRK-CUST_TOT + WA1_VBRK-INV_TOT  .
    ENDLOOP.
    MODIFY GT_VBRK FROM WA_VBRK TRANSPORTING CUST_TOT.
    CLEAR WA_VBRK.
  ENDLOOP.

  LOOP AT GT_VBRK INTO WA_VBRK .
    WA_VBRK-CUST_PER = ( WA_VBRK-CUST_TOT / 100 ) * 20 .
    MODIFY GT_VBRK FROM WA_VBRK TRANSPORTING CUST_PER.
    CLEAR WA_VBRK.
  ENDLOOP.


  LOOP AT GT_VBRK INTO WA_VBRK.
    CALL FUNCTION 'BAPI_AR_ACC_GETOPENITEMS'"#EC CI_USAGE_OK[2628704]"Added by SPLABAP during code remediation
      EXPORTING
        COMPANYCODE = WA_VBRK-BUKRS
        CUSTOMER    = WA_VBRK-KUNRG
        KEYDATE     = SY-DATUM
*       NOTEDITEMS  = ' '
*       SECINDEX    = ' '
      IMPORTING
        RETURN      = IT_RETURN
      TABLES
        LINEITEMS   = IT_OPEN.
    CLEAR WA_VBRK.
  ENDLOOP.

  LOOP AT GT_VBRK INTO WA_VBRK.

    CALL FUNCTION 'BAPI_AR_ACC_GETBALANCEDITEMS'"#EC CI_USAGE_OK[2628704]"Added by SPLABAP during code remediation
      EXPORTING
        COMPANYCODE = WA_VBRK-BUKRS
        CUSTOMER    = WA_VBRK-KUNRG
        DATE_FROM   = FROM_DATE
        DATE_TO     = TO_DATE
      IMPORTING
        RETURN      = IT1_RETURN
      TABLES
        LINEITEMS   = IT_CLOSE.
    CLEAR WA_VBRK.
  ENDLOOP.

  APPEND LINES OF IT_CLOSE TO IT_OPEN.

  DELETE IT_OPEN WHERE DOC_TYPE <> 'RV' .

  LOOP AT IT_OPEN INTO WA_OPEN.

    WA1_FINAL-COMP = WA_OPEN-COMP_CODE.
    WA1_FINAL-CUST = WA_OPEN-CUSTOMER.
    WA1_FINAL-CLEAR = WA_OPEN-CLEAR_DATE.

    IF WA1_FINAL-CLEAR IS INITIAL .
      WA1_FINAL-CLEAR = SY-DATUM .
    ENDIF.

    DIS_DAY1 = WA_OPEN-DSCT_DAYS1.

    CALL FUNCTION 'RP_CALC_DATE_IN_INTERVAL'
      EXPORTING
        DATE      = WA_OPEN-BLINE_DATE
        DAYS      = DIS_DAY1
        MONTHS    = 00
*       SIGNUM    = '+'
        YEARS     = 00
      IMPORTING
        CALC_DATE = LV_DUE.
    IF LV_DUE > WA1_FINAL-CLEAR .
      APPEND WA1_FINAL TO IT1_FINAL.
    ENDIF.
    CLEAR WA1_FINAL.

  ENDLOOP.

  LOOP AT IT1_FINAL INTO WA1_FINAL .
    LOOP AT GT_VBRK INTO WA_VBRK WHERE  BUKRS = WA1_FINAL-COMP AND KUNRG = WA1_FINAL-CUST.
      READ TABLE GT_ZCUST_CRE_CON INTO WA_ZCUST_CRE_CON WITH KEY BUKRS = WA1_FINAL-COMP KUNNR = WA1_FINAL-CUST.
      IF SY-SUBRC = 0 .
        WA1_FINAL-KLIMK = WA_ZCUST_CRE_CON-KLIMK . "#EC CI_FLDEXT_OK[2610650]"Added by SPLABAP during code remediation
        WA1_FINAL-TOT_AMT = WA_VBRK-CUST_PER + WA_ZCUST_CRE_CON-KLIMK_CUR .
      ENDIF.
* ENDIF.
    ENDLOOP.
    CLEAR WA1_FINAL.
    MODIFY IT1_FINAL FROM WA1_FINAL TRANSPORTING TOT_AMT .
  ENDLOOP.

  LOOP AT IT1_FINAL INTO WA1_FINAL.

    IF WA1_FINAL-TOT_AMT > WA1_FINAL-KLIMK .

      UPDATE ZCUST_CRE_CON SET KLIMK = WA1_FINAL-TOT_AMT"#EC CI_FLDEXT_OK[2610650] "Added by SPLABAP during code remediation
      WHERE KUNNR = WA1_FINAL-CUST AND BUKRS = WA1_FINAL-COMP .
      UPDATE KNKK SET KLIMK = WA1_FINAL-TOT_AMT "#EC CI_FLDEXT_OK[2610650] "Added by SPLABAP during code remediation
      WHERE KKBER = WA1_FINAL-COMP AND KUNNR = WA1_FINAL-CUST . "#EC CI_USAGE_OK[2227014] " Added by <IT-CAR Tool> during Code Remediation

      COMMIT WORK.
    ENDIF.

  ENDLOOP.

ENDIF.

MESSAGE 'Process completed' TYPE 'I'.
