*&---------------------------------------------------------------------*
*& Report  ZCUST_CRE_CON_DAILY
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT ZCUST_CRE_CON_DAILY.

INCLUDE ZCUST_CRE_CON_DAILY_TOP.

DATA : YES_DATE TYPE SY-DATUM .

DATA : LV_ROW TYPE I.

DATA : LV_COUNT TYPE I.

DATA : IT2_FINAL TYPE TABLE OF ZCUST_CRE_CON,
       WA2_FINAL TYPE ZCUST_CRE_CON.

START-OF-SELECTION.

  SELECT         KUNNR
                 BUKRS
                 ERDAT
                 ERNAM
                 SPERR
                 LOEVM
  FROM KNB1 INTO TABLE IT_KNB1 WHERE  ( BUKRS = '1000' OR BUKRS = '2000' OR BUKRS = '4000' ) AND  CREDIT_TYPE = 'DEFAULT' .

  CALL FUNCTION 'RP_CALC_DATE_IN_INTERVAL'
    EXPORTING
      DATE      = SY-DATUM
      DAYS      = 01
      MONTHS    = 00
      SIGNUM    = '-'
      YEARS     = 00
    IMPORTING
      CALC_DATE = YES_DATE.


  SELECT         KUNNR
                 BUKRS
                 ERDAT
                 ERNAM
                 SPERR
                 LOEVM
  FROM KNB1 INTO TABLE IT1_KNB1 WHERE ERDAT = YES_DATE  .

  SELECT
            BUKRS
            TYP_ID
            TYP_NAM
            ACC_TYPE
            NO_OF_TIME
            AMOUNT
        FROM ZCUST_ACC_TYPE INTO TABLE GT_ZCUST_ACC_TYPE .

  SELECT
                 COMPANY_CODE
                 CONDITION_ID
                 CONDITION_DES
                 TO_DAY
                 PERCENTAGE
  FROM ZCUST_CONDITION INTO TABLE IT1_ZCUST_CON WHERE CONDITION_ID = '1' .

  SELECT
                 BUKRS
                 KUNNR
                 NAME1
                 KLIMK
                 KLIMK_CUR
                 FBL5N_BAL
    FROM ZCUST_CRE_CON INTO TABLE GT_ZCUST_CRE_CON FOR ALL ENTRIES IN IT_KNB1 WHERE BUKRS = IT_KNB1-BUKRS AND KUNNR = IT_KNB1-KUNNR .

  LOOP AT IT_KNB1 INTO WA_KNB1.
    MOVE-CORRESPONDING WA_KNB1 TO WA_FINAL.
    CALL FUNCTION 'CUSTOMER_OLDEST_OPEN_ITEM' "#EC CI_USAGE_OK[2628706] " Added by <IT-CAR Tool> during Code Remediation
      EXPORTING
        I_KKBER            = WA_KNB1-BUKRS
        I_KUNNR            = WA_KNB1-KUNNR
*     I_REGUL            = 'X'
*     I_ERLTA            = '01'
*     I_ERLST            = '00'
*     I_XCRCV            = ' '
     IMPORTING
*     E_BELNR            =
*     E_BUKRS            =
*     E_FAEDT            =
*     E_GJAHR            =
*     E_INFAE            =
*     E_KUNNR            =
        E_VERZN            =  NO_DAYS
*     E_WAERS            =
*     E_WRBTR            =
*     E_XODAT            =
*     E_XNDAT            =
*     E_VERTA            =
*     E_VERST            =
*     E_XDATAAKT         =
*   EXCEPTIONS
*     INVALID_CALL       = 1
*     NO_BUKRS           = 2
*     NO_ITEMS           = 3
*     OTHERS             = 4
              .
    IF SY-SUBRC <> 0.
* Implement suitable error handling here
    ENDIF.
    WA_FINAL-DAYS = NO_DAYS.
    APPEND WA_FINAL TO IT_FINAL.
    CLEAR : WA_FINAL.
    CLEAR : NO_DAYS.
  ENDLOOP.

  DATA : LV_DAY TYPE ZCUST_CONDITION-TO_DAY .
  CLEAR : LV_DAY .

*LOOP AT IT1_ZCUST_CON INTO WA1_ZCUST_CON.  "FOR FROM DATE ADDED
*  ON CHANGE OF WA1_ZCUST_CON-COMPANY_CODE.
*    LV_DAY = 0 .
*  ENDON.
*  IF LV_DAY = 0 .
*    LV_DAY = 0 .
*  ELSE.
*    WA_ZCUST_CON-FROM_DAY = LV_DAY + 1 .
*ENDIF.
*MOVE-CORRESPONDING WA1_ZCUST_CON TO WA_ZCUST_CON .
*    LV_DAY = WA_ZCUST_CON-TO_DAY .
*APPEND WA_ZCUST_CON TO IT_ZCUST_CON .
*CLEAR : WA_ZCUST_CON.
*ENDLOOP.
  SORT IT1_ZCUST_CON."Added by SPLABAP during code remediation
  LOOP AT IT1_ZCUST_CON INTO WA1_ZCUST_CON.  "FOR FROM DATE ADDED
    ON CHANGE OF WA1_ZCUST_CON-COMPANY_CODE.
      LV_ROW = 0.
      WA1_ZCUST_CON-ROW_COUNT = 1 .
    ENDON.

    WA1_ZCUST_CON-ROW_COUNT = LV_ROW + 1 .

    LV_ROW = WA1_ZCUST_CON-ROW_COUNT.

    MODIFY IT1_ZCUST_CON FROM WA1_ZCUST_CON TRANSPORTING ROW_COUNT.
    "APPEND WA_ZCUST_CON TO IT_ZCUST_CON.

    CLEAR WA_ZCUST_CON .

  ENDLOOP.

  APPEND LINES OF IT1_ZCUST_CON TO IT2_ZCUST_CON .

  LOOP AT IT1_ZCUST_CON INTO WA1_ZCUST_CON .

    WA_ZCUST_CON-COMPANY_CODE = WA1_ZCUST_CON-COMPANY_CODE .
    WA_ZCUST_CON-CONDITION_ID = WA1_ZCUST_CON-CONDITION_ID.
    WA_ZCUST_CON-CONDITION_DES = WA1_ZCUST_CON-CONDITION_DES.
    WA_ZCUST_CON-FROM_DAY = WA1_ZCUST_CON-TO_DAY .
    LV_COUNT = WA1_ZCUST_CON-ROW_COUNT + 1 .
    WA_ZCUST_CON-PERCENTAGE = WA1_ZCUST_CON-PERCENTAGE.

    READ TABLE IT2_ZCUST_CON INTO WA2_ZCUST_CON WITH KEY COMPANY_CODE = WA1_ZCUST_CON-COMPANY_CODE ROW_COUNT = LV_COUNT .
    IF SY-SUBRC = 0 .
      WA_ZCUST_CON-TO_DAY = WA2_ZCUST_CON-TO_DAY - 1 .
    ELSE.
      WA_ZCUST_CON-TO_DAY = 9999 .
    ENDIF.

    APPEND WA_ZCUST_CON TO IT_ZCUST_CON .
    CLEAR WA_ZCUST_CON.

  ENDLOOP.

  DELETE IT_FINAL WHERE DAYS = 0 .

  LOOP AT IT_FINAL INTO WA_FINAL . "PERCENTAGE ADDED
    LOOP AT IT_ZCUST_CON INTO WA_ZCUST_CON WHERE COMPANY_CODE = WA_FINAL-BUKRS AND FROM_DAY =< WA_FINAL-DAYS AND TO_DAY >= WA_FINAL-DAYS .
      WA_FINAL-PER = WA_ZCUST_CON-PERCENTAGE.
      MODIFY IT_FINAL FROM WA_FINAL TRANSPORTING PER .
      CLEAR : WA_FINAL.
    ENDLOOP.
  ENDLOOP.

  LOOP AT IT_FINAL INTO WA_FINAL.
    READ TABLE GT_ZCUST_CRE_CON INTO WA_ZCUST_CRE_CON WITH KEY BUKRS = WA_FINAL-BUKRS KUNNR = WA_FINAL-KUNNR.
    IF SY-SUBRC = 0.
      LV_PER = ( WA_ZCUST_CRE_CON-KLIMK / 100 ) * WA_FINAL-PER .
      WA_FINAL-AFT_MINUS = WA_ZCUST_CRE_CON-KLIMK - LV_PER .
    ENDIF.
    MODIFY IT_FINAL FROM WA_FINAL TRANSPORTING AFT_MINUS.
  ENDLOOP.

  LOOP AT IT1_KNB1 INTO WA1_KNB1.

    WA1_FINAL-BUKRS = WA1_KNB1-BUKRS.
    WA1_FINAL-KUNNR = WA1_KNB1-KUNNR.
    WA1_FINAL-ERDAT = WA1_KNB1-ERDAT.
    WA1_FINAL-ERNAM = WA1_KNB1-ERNAM.
    READ TABLE GT_ZCUST_ACC_TYPE INTO WA_ZCUST_ACC_TYPE WITH KEY BUKRS = WA1_FINAL-BUKRS.
    IF  SY-SUBRC = 0 .
      WA1_FINAL-AFT_MINUS = WA_ZCUST_ACC_TYPE-NO_OF_TIME * WA_ZCUST_ACC_TYPE-AMOUNT .
    ENDIF.
    APPEND WA1_FINAL TO IT1_FINAL.
    CLEAR WA1_FINAL.

  ENDLOOP.

  APPEND LINES OF IT1_FINAL TO IT_FINAL.

  "delete it_final where kunnr <> '0000100002' .

  LOOP AT IT_FINAL INTO WA_FINAL .

*  CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
*    EXPORTING
*      INPUT         = wa_final-kunnr
*   IMPORTING
*     OUTPUT        = LV_KUNNR
*            .

   IF WA_FINAL-DAYS IS NOT INITIAL.
    UPDATE KNKK SET KLIMK = WA_FINAL-AFT_MINUS WHERE KKBER = WA_FINAL-BUKRS AND KUNNR = WA_FINAL-KUNNR . "#EC CI_USAGE_OK[2227014] " Added by <IT-CAR Tool> during Code Remediation
    UPDATE ZCUST_CRE_CON SET KLIMK_CUR = WA_FINAL-AFT_MINUS WHERE BUKRS = WA_FINAL-BUKRS AND KUNNR = WA_FINAL-KUNNR .
    ENDIF.
    IF WA_FINAL-DAYS IS INITIAL.
      WA2_FINAL-BUKRS = WA_FINAL-BUKRS.
      WA2_FINAL-KUNNR = WA_FINAL-KUNNR.
      WA2_FINAL-NAME1 = '  ' .
      WA2_FINAL-KLIMK = WA_FINAL-AFT_MINUS.
      WA2_FINAL-KLIMK_CUR = ' '.
      WA2_FINAL-FBL5N_BAL = ' ' .
    INSERT ZCUST_CRE_CON FROM WA2_FINAL  .

    ENDIF.

    COMMIT WORK.


  ENDLOOP.

  MESSAGE 'Process completed' TYPE 'I'.
