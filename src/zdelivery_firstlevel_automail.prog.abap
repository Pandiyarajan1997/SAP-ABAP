*&---------------------------------------------------------------------*
*& Report  ZDELIVERY_FIRSTLEVEL_AUTOMAIL
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT ZDELIVERY_FIRSTLEVEL_AUTOMAIL.

TABLES  : VBAK,
          VBAP,
          VBRP,
          VBAKUK, "#EC CI_USAGE_OK[2198647] " Added by <IT-CAR Tool> during Code Remediation
          T001W,
          T023T,
          ZSAL_ZONE_REG,
          ZEMAIL_SALESOFF.

DATA  : S_REPID LIKE SY-REPID.

TYPES : BEGIN OF TY_T023T,
    MATKL TYPE T023T-MATKL,
    WGBEZ TYPE T023T-WGBEZ,
    END OF TY_T023T.

DATA  : IT_T023T TYPE TABLE OF TY_T023T,
      WA_T023T TYPE TY_T023T.


TYPES : BEGIN OF TY_ZEMAIL_SALESOFF,
        EM_VKBUR TYPE ZEMAIL_SALESOFF-VKBUR,
        EM_DEPARTMENT TYPE ZEMAIL_SALESOFF-ZDEPARTMENT,
        EM_EMAILID TYPE ZEMAIL_SALESOFF-EMAILID,
        EM_STATUS TYPE ZEMAIL_SALESOFF-STATUS,
  END OF TY_ZEMAIL_SALESOFF.

DATA :  IT_ZEMAIL_SALESOFF TYPE TABLE OF TY_ZEMAIL_SALESOFF,
        WA_ZEMAIL_SALESOFF TYPE TY_ZEMAIL_SALESOFF,
        IT_SENDMAIL TYPE TABLE OF TY_ZEMAIL_SALESOFF,
        WA_SENDMAIL TYPE TY_ZEMAIL_SALESOFF,
        TEMP_SENDMAIL TYPE TABLE OF TY_ZEMAIL_SALESOFF,
        TEWA_SENDMAIL TYPE TY_ZEMAIL_SALESOFF,
        ITFINAL_SENDMAIL TYPE TABLE OF TY_ZEMAIL_SALESOFF,
        WAFINAL_SENDMAIL TYPE TY_ZEMAIL_SALESOFF.

TYPES :BEGIN OF TY_ZSAL_ZONE_REG,
       SA_VKBUR TYPE ZSAL_ZONE_REG-VKBUR,
       SA_NAME1 TYPE ZSAL_ZONE_REG-NAME1,
       SA_ZONE TYPE ZSAL_ZONE_REG-ZONE1,
       SA_REGIO TYPE ZSAL_ZONE_REG-REGIO,
  END OF TY_ZSAL_ZONE_REG.

DATA : IT_ZSAL_ZONE_REG TYPE TABLE OF TY_ZSAL_ZONE_REG,
      WA_ZSAL_ZONE_REG TYPE TY_ZSAL_ZONE_REG.


TYPES : BEGIN OF TY_VBAP,
  VBELN TYPE VBAP-VBELN,
  POSNR TYPE VBAP-POSNR,
  MATNR TYPE VBRP-MATNR,
  MATKL TYPE VBAP-MATKL,
  ARKTX TYPE VBRP-ARKTX,
  VOLUM TYPE VBRP-VOLUM,
  NETWR TYPE VBRP-NETWR,
  KWMENG TYPE VBAP-KWMENG,
  WERKS TYPE VBAP-WERKS,
  END OF TY_VBAP.

DATA  : IT_VBAP TYPE TABLE OF TY_VBAP,
        WA_VBAP TYPE TY_VBAP,
        TEMP_VBAP TYPE TABLE OF TY_VBAP,
        TEWA_VBAP TYPE TY_VBAP,
        TEMP1_VBAP TYPE TABLE OF TY_VBAP,
        TEWA1_VBAP TYPE TY_VBAP.



TYPES : BEGIN OF TY_VBAK,
  VBELN TYPE VBAKUK-VBELN,    "#EC CI_USAGE_OK[2198647] " Sale Order NoAdded by <IT-CAR Tool> during Code Remediation
  AUDAT TYPE VBAKUK-AUDAT,    "#EC CI_USAGE_OK[2198647] " DateAdded by <IT-CAR Tool> during Code Remediation
  AUART TYPE VBAKUK-AUART,    "#EC CI_USAGE_OK[2198647] " Sales Order TypeAdded by <IT-CAR Tool> during Code Remediation
  NETWR TYPE VBAKUK-NETWR,    "#EC CI_USAGE_OK[2198647] " NetValueAdded by <IT-CAR Tool> during Code Remediation
  VKBUR TYPE VBAKUK-VKBUR,    "#EC CI_USAGE_OK[2198647] " Sales OfficeAdded by <IT-CAR Tool> during Code Remediation
  BSTNK TYPE VBAKUK-BSTNK,    "#EC CI_USAGE_OK[2198647] " PO numberAdded by <IT-CAR Tool> during Code Remediation
  KUNNR TYPE VBAKUK-KUNNR,    "#EC CI_USAGE_OK[2198647] " Customer NumberAdded by <IT-CAR Tool> during Code Remediation
  END OF TY_VBAK.

DATA  : IT_VBAK TYPE TABLE OF TY_VBAK,
      WA_VBAK TYPE TY_VBAK.

DATA  : IT_VBAK1 TYPE TABLE OF TY_VBAK,
      WA_VBAK1 TYPE TY_VBAK.

TYPES : BEGIN OF TY_LIPS,
    VBELN TYPE LIPS-VBELN,
    POSNR TYPE LIPS-POSNR,
    ERDAT TYPE LIPS-ERDAT,
    VGBEL TYPE LIPS-VGBEL,
    VGPOS TYPE LIPS-VGPOS,
    END OF TY_LIPS.

DATA  : IT_LIPS TYPE TABLE OF TY_LIPS,
      WA_LIPS TYPE TY_LIPS.

TYPES : BEGIN OF TY_VBRP,
    VBELN TYPE VBRP-VBELN,
    POSNR TYPE VBRP-POSNR,
    FKIMG TYPE VBRP-FKIMG,
    NETWR TYPE VBRP-NETWR,
    AUBEL TYPE VBRP-AUBEL,
    AUPOS TYPE VBRP-AUPOS,
    MATKL TYPE VBRP-MATKL,
    END OF TY_VBRP.

DATA  : IT_VBRP TYPE TABLE OF TY_VBRP,
      WA_VBRP TYPE TY_VBRP,
      TEMP_VBRP TYPE TABLE OF TY_VBRP,
      TEWA_VBRP TYPE TY_VBRP,
      TEMP1_VBRP TYPE TABLE OF TY_VBRP,
      TEWA1_VBRP TYPE TY_VBRP.

TYPES : BEGIN OF TY_VBFA,
    VBELV TYPE VBFA-VBELV,
    POSNV TYPE VBFA-POSNV,
    VBELN TYPE VBFA-VBELN,
    POSNN TYPE VBFA-POSNN,
    VBTYP_N TYPE VBFA-VBTYP_N,
    END OF TY_VBFA.

DATA  : IT_VBFA TYPE TABLE OF TY_VBFA,
      WA_VBFA TYPE TY_VBFA.

TYPES : BEGIN OF TY_VBRK,
    VBELN TYPE VBRK-VBELN,
    FKART TYPE VBRK-FKART,
    FKDAT TYPE VBRK-FKDAT,
    FKSTO TYPE VBRK-FKSTO,
    DATE_OF_DELIVERY TYPE VBRK-DATE_OF_DELIVERY,
    REMARKS TYPE VBRK-REMARKS,
    END OF TY_VBRK.

DATA  : IT_VBRK TYPE TABLE OF TY_VBRK,
        WA_VBRK TYPE TY_VBRK.

TYPES : BEGIN OF TY_KNA1,
    KUNNR TYPE KNA1-KUNNR,
    LAND1 TYPE KNA1-LAND1,
    NAME1 TYPE KNA1-NAME1,
    REGIO TYPE KNA1-REGIO,
    END OF TY_KNA1.

DATA  : IT_KNA1 TYPE TABLE OF TY_KNA1,
      WA_KNA1 TYPE TY_KNA1.

TYPES : BEGIN OF TY_T005U,
    SPRAS TYPE T005U-SPRAS,
    LAND1 TYPE T005U-LAND1,
    BLAND TYPE T005U-BLAND,
    BEZEI TYPE T005U-BEZEI,
    END OF TY_T005U.

DATA  : IT_T005U TYPE TABLE OF TY_T005U,
      WA_T005U TYPE TY_T005U.

TYPES : BEGIN OF TY_T001W,
    WERKS TYPE T001W-WERKS,
    NAME1 TYPE T001W-NAME1,
    END OF TY_T001W.

DATA  : IT_T001W TYPE TABLE OF TY_T001W,
      WA_T001W TYPE TY_T001W.

TYPES : BEGIN OF TY_FINAL,

    ZONE1 TYPE ZSAL_ZONE_REG-ZONE1,
    WERKS TYPE VBAP-WERKS, " SALES OFFICE
    SA_NAME1 TYPE ZSAL_ZONE_REG-NAME1, "SALES OFFICE NAME
    VBELN TYPE VBAKUK-VBELN,  "#EC CI_USAGE_OK[2198647] " SALES ORDER NUMBERAdded by <IT-CAR Tool> during Code Remediation
    KUNNR TYPE VBAKUK-KUNNR,  "#EC CI_USAGE_OK[2198647] " CUSTOMER CODEAdded by <IT-CAR Tool> during Code Remediation
    NAME1 TYPE KNA1-NAME1, " CUSTOMER NAME
    SAL_A TYPE STRING,   " SALE ORDER AMOUNT
    AUDAT TYPE VBAKUK-AUDAT,  "#EC CI_USAGE_OK[2198647] " ORDER DATEAdded by <IT-CAR Tool> during Code Remediation
    MATKL TYPE VBAP-MATKL,  "Materail Group
    WGBEZ TYPE T023T-WGBEZ, "Group Name
    SAL_Q TYPE STRING,   " SALE ORDER QUANTITY
    TOT_VOLUM TYPE STRING,
    TOT_LTAMT TYPE STRING,
    TOT_QTY TYPE STRING,
    OTDD TYPE CHAR5, " Order To Delivery Date

    ITEM  TYPE VBAP-POSNR, " SALE ORDER ITEM NO
    NETWR TYPE VBAKUK-NETWR,  "#EC CI_USAGE_OK[2198647] " NetValueAdded by <IT-CAR Tool> during Code Remediation
    BSTNK TYPE VBAKUK-BSTNK,  "#EC CI_USAGE_OK[2198647] " PO numberAdded by <IT-CAR Tool> during Code Remediation
    VBELN1 TYPE VBRK-VBELN," INVOICE NUMBER
    FKDAT TYPE VBRK-FKDAT, " INVOICE DATE
    BEZEI TYPE T005U-BEZEI," REGION
    MATNR TYPE VBAP-MATNR, " MATERIAL CODE
    ARKTX TYPE VBAP-ARKTX, " MATERIAL DESCRIPTION
    KWMENG TYPE VBAP-KWMENG, " SALE ORDER QUANTITY
    FKIMG TYPE VBRP-FKIMG,   " BILLED QUANTITY
    BAL_Q TYPE STRING,   " BALANCE QUANTITY
    BAL_A TYPE STRING,   " BALANCE AMOUNT
    INV_Q TYPE STRING,   " INVOICE QUANTITY
    INV_A TYPE STRING,   " INVOICE AMOUNT
    D_O_D TYPE VBRK-DATE_OF_DELIVERY, " DATE OF DELIVERY
    REMARKS TYPE VBRK-REMARKS, " REMARKS
    DAYS TYPE CHAR5, " NO OF DAYS
    BTDD TYPE CHAR5, " Billed TO Delivery Date.
    AUBEL TYPE VBRP-AUBEL, "Sales Document ref
    AUPOS TYPE VBRP-AUPOS, "Sales Document item no ref
    END OF TY_FINAL.

DATA  : IT_FINAL TYPE TABLE OF TY_FINAL,
        WA_FINAL TYPE TY_FINAL.

DATA  : IT_FINAL1 TYPE TABLE OF TY_FINAL,
        WA_FINAL1 TYPE TY_FINAL.


DATA : OTDD TYPE I .
*DATA : IT_ATTACH TYPE STRING. "declare string

**********************************
DATA:   IT_MESSAGE TYPE STANDARD TABLE OF SOLISTI1 INITIAL SIZE 0
                   WITH HEADER LINE.
DATA:   IT_ATTACH TYPE STANDARD TABLE OF SOLISTI1 INITIAL SIZE 0
                  WITH HEADER LINE.
DATA:   IT_STATUS TYPE STANDARD TABLE OF SOLISTI1 INITIAL SIZE 0
                  WITH HEADER LINE.

DATA:   T_PACKING_LIST LIKE SOPCKLSTI1 OCCURS 0 WITH HEADER LINE,
        T_CONTENTS LIKE SOLISTI1 OCCURS 0 WITH HEADER LINE,
        T_RECEIVERS LIKE SOMLRECI1 OCCURS 0 WITH HEADER LINE,
        T_ATTACHMENT LIKE SOLISTI1 OCCURS 0 WITH HEADER LINE,
        T_OBJECT_HEADER LIKE SOLISTI1 OCCURS 0 WITH HEADER LINE,

        I_OBJPACK   LIKE SOPCKLSTI1 OCCURS 0 WITH HEADER LINE,
      I_OBJTXT    LIKE SOLISTI1   OCCURS 0 WITH HEADER LINE,
      I_OBJBIN    LIKE SOLIX      OCCURS 0 WITH HEADER LINE,
      I_OBJBIN1    LIKE SOLIX      OCCURS 0 WITH HEADER LINE,
      I_OBJBIN_F    LIKE SOLIX      OCCURS 0 WITH HEADER LINE,
      I_XSTRING   TYPE XSTRING,
      I_XSTRING1   TYPE XSTRING,


        W_CNT TYPE I,
        W_SENT_ALL(1) TYPE C,
        W_DOC_DATA LIKE SODOCCHGI1,
        GD_ERROR    TYPE SY-SUBRC,
        GD_RECIEVER TYPE SY-SUBRC.

DATA: P_EMAIL   TYPE SOMLRECI1-RECEIVER
                                VALUE 'santhoshkumar@sphinaxinfosystems.com'.
DATA: TOT TYPE INT2.
DATA: DOC_DAT(10) TYPE C.

TYPES:BEGIN OF TY_DOC,
  BELNR TYPE BSAK-BELNR,
  END OF TY_DOC.

DATA: IT_DOC TYPE TABLE OF TY_DOC,
      WA_DOC TYPE TY_DOC.

DATA: IT_VBSEGK TYPE TABLE OF VBSEGK,
      WA_VBSEGK TYPE VBSEGK.

************************************************ eXCEL

CLASS: CL_ABAP_CHAR_UTILITIES DEFINITION LOAD.
DATA: DOCDATA LIKE SODOCCHGI1,
      OBJPACK LIKE SOPCKLSTI1 OCCURS 1 WITH HEADER LINE,      " internal tables declared for sending attachments to the mail
      OBJTXT LIKE SOLISTI1 OCCURS 10 WITH HEADER LINE,
      OBJBIN_FINAL LIKE SOLISTI1 OCCURS 10 WITH HEADER LINE,
      RECLIST LIKE SOMLRECI1 OCCURS 1 WITH HEADER LINE,
      TAB_LINES TYPE SY-TABIX.
DATA: GD_SENDER_TYPE LIKE SOEXTRECI1-ADR_TYP.
DATA: C_TAB TYPE C VALUE CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB,
      C_RET TYPE C VALUE CL_ABAP_CHAR_UTILITIES=>CR_LF.
DATA: N TYPE I.
DATA: BYTES TYPE I.
DATA: COUNT TYPE I VALUE 1 .

DATA: S_EMAIL TYPE  ADR6-SMTP_ADDR VALUE 'vairamani@sheenlac.in'.
********************************************
START-OF-SELECTION.
  PERFORM GET_DAT.

END-OF-SELECTION.

*&---------------------------------------------------------------------*
*&      Form  GET_DAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GET_DAT .

  DATA: TEMP_EMAILID TYPE ZEMAIL_SALESOFF-EMAILID.

  SELECT VKBUR
         NAME1
         ZONE1
         REGIO FROM ZSAL_ZONE_REG INTO TABLE IT_ZSAL_ZONE_REG.

  SELECT VKBUR
         ZDEPARTMENT
         EMAILID
         STATUS FROM ZEMAIL_SALESOFF INTO TABLE IT_ZEMAIL_SALESOFF WHERE ZDEPARTMENT = 'MD'.

  SELECT MATKL
         WGBEZ FROM T023T INTO TABLE IT_T023T.

  CLEAR : IT_SENDMAIL ,TEMP_EMAILID,TEWA_SENDMAIL,TEMP_SENDMAIL.


  LOOP AT IT_ZEMAIL_SALESOFF INTO WA_ZEMAIL_SALESOFF.
    APPEND WA_ZEMAIL_SALESOFF TO  IT_SENDMAIL.
  ENDLOOP.

  SORT IT_SENDMAIL ASCENDING BY EM_EMAILID.

  LOOP AT IT_SENDMAIL INTO WA_SENDMAIL.
    IF TEMP_EMAILID = WA_SENDMAIL-EM_EMAILID.
      TEWA_SENDMAIL-EM_EMAILID = WA_SENDMAIL-EM_EMAILID.
      TEWA_SENDMAIL-EM_VKBUR = WA_SENDMAIL-EM_VKBUR.
    ELSE.
      IF TEWA_SENDMAIL IS NOT INITIAL.
        APPEND TEWA_SENDMAIL TO TEMP_SENDMAIL.
        CLEAR TEWA_SENDMAIL.
      ENDIF.
      TEWA_SENDMAIL = WA_SENDMAIL.
      TEMP_EMAILID = WA_SENDMAIL-EM_EMAILID.
    ENDIF.
  ENDLOOP.
  APPEND TEWA_SENDMAIL TO TEMP_SENDMAIL.
  CLEAR :TEWA_SENDMAIL ,TEMP_EMAILID.


  SORT TEMP_SENDMAIL ASCENDING BY EM_EMAILID.

  LOOP AT TEMP_SENDMAIL INTO TEWA_SENDMAIL.

    CLEAR:ITFINAL_SENDMAIL,IT_VBAK,IT_VBAP,IT_FINAL,WA_VBAK,WA_VBAP.

    SELECT VKBUR
         ZDEPARTMENT
         EMAILID
         STATUS FROM ZEMAIL_SALESOFF INTO TABLE ITFINAL_SENDMAIL WHERE ZDEPARTMENT = 'MD' AND EMAILID = TEWA_SENDMAIL-EM_EMAILID.


    SELECT   VBELN
             AUDAT
             AUART
             NETWR
             VKBUR
             BSTNK
             KUNNR FROM VBAKUK INTO TABLE IT_VBAK FOR ALL ENTRIES IN ITFINAL_SENDMAIL WHERE VKBUR = ITFINAL_SENDMAIL-EM_VKBUR "#EC CI_USAGE_OK[2198647] " Added by <IT-CAR Tool> during Code Remediation
             AND VKORG = '1000'
             AND ( AUART = 'YBBR' OR AUART = 'YBDP' ) AND BESTK <> ' ' AND GBSTK <> 'C' AND ERDAT >= '20200501'.

    IF IT_VBAK IS NOT INITIAL.
      SELECT VBELN
                POSNR
                MATNR
                MATKL
                ARKTX
                VOLUM
                NETWR
                KWMENG
                WERKS FROM VBAP INTO TABLE IT_VBAP FOR ALL ENTRIES IN IT_VBAK WHERE VBELN = IT_VBAK-VBELN.


      SELECT  VBELV
              POSNV
              VBELN
              POSNN
              VBTYP_N  FROM VBFA INTO TABLE IT_VBFA FOR ALL ENTRIES IN IT_VBAP WHERE VBELV = IT_VBAP-VBELN AND POSNV = IT_VBAP-POSNR AND VBTYP_N = 'M' ." AND POSNN = 1 .
*          IF IT_VBFA IS NOT INITIAL.
      SELECT VBELN
           FKART
           FKDAT
           FKSTO
           DATE_OF_DELIVERY
           REMARKS FROM VBRK INTO TABLE IT_VBRK FOR ALL ENTRIES IN IT_VBFA WHERE VBELN = IT_VBFA-VBELN  AND FKSTO <> 'X'.

      SELECT  VBELN
              POSNR
              FKIMG
              NETWR
              AUBEL
              AUPOS
              MATKL FROM VBRP INTO TABLE IT_VBRP FOR ALL ENTRIES IN IT_VBRK WHERE VBELN = IT_VBRK-VBELN.



      SELECT KUNNR
             LAND1
             NAME1
             REGIO FROM KNA1 INTO TABLE IT_KNA1 FOR ALL ENTRIES IN IT_VBAK WHERE KUNNR = IT_VBAK-KUNNR.

      SELECT SPRAS
             LAND1
             BLAND
             BEZEI FROM T005U INTO TABLE IT_T005U FOR ALL ENTRIES IN IT_KNA1 WHERE SPRAS = 'EN' AND LAND1 = IT_KNA1-LAND1 AND BLAND = IT_KNA1-REGIO.
    ELSE.
      MESSAGE 'No Data Found' TYPE 'I' DISPLAY LIKE 'E'.
*      SUBMIT ZDELIVERY_DETAILS VIA SELECTION-SCREEN .
    ENDIF.


***************************************************
    DATA: TEMP_MATKL TYPE VBAP-MATKL.
    DATA: TEVP_MATKL TYPE VBRP-MATKL.

    SORT IT_VBAP STABLE BY VBELN MATKL.
    SORT IT_VBRP STABLE BY VBELN MATKL.


    LOOP AT IT_VBAK INTO WA_VBAK.
      READ TABLE IT_ZSAL_ZONE_REG INTO WA_ZSAL_ZONE_REG WITH KEY SA_VKBUR = WA_VBAK-VKBUR.
      READ TABLE IT_KNA1 INTO WA_KNA1 WITH KEY KUNNR = WA_VBAK-KUNNR.
      READ TABLE IT_T005U INTO WA_T005U WITH KEY LAND1 = WA_KNA1-LAND1 BLAND = WA_KNA1-REGIO .

      CLEAR: TEMP_VBAP,TEMP_VBRP.

      LOOP AT IT_VBAP INTO WA_VBAP WHERE VBELN = WA_VBAK-VBELN.
        APPEND WA_VBAP TO TEMP_VBAP.
      ENDLOOP.
      SORT TEMP_VBAP ASCENDING BY MATKL.

      LOOP AT IT_VBRP INTO WA_VBRP WHERE AUBEL = WA_VBAK-VBELN.
        APPEND WA_VBRP TO TEMP_VBRP.
      ENDLOOP.

      SORT TEMP_VBRP ASCENDING BY MATKL.

      LOOP AT TEMP_VBAP INTO TEWA_VBAP .

        IF TEMP_MATKL = TEWA_VBAP-MATKL.
          TEWA1_VBAP-VOLUM =   TEWA1_VBAP-VOLUM  + TEWA_VBAP-VOLUM.
          TEWA1_VBAP-KWMENG =  TEWA1_VBAP-KWMENG  + TEWA_VBAP-KWMENG.
          TEWA1_VBAP-NETWR = TEWA1_VBAP-NETWR + TEWA_VBAP-NETWR.
        ELSE.
          IF TEWA1_VBAP IS NOT INITIAL.
            APPEND TEWA1_VBAP TO TEMP1_VBAP .
            CLEAR TEWA1_VBAP.
          ENDIF.
          TEWA1_VBAP = TEWA_VBAP.
          TEMP_MATKL = TEWA_VBAP-MATKL.
        ENDIF.
      ENDLOOP.
      APPEND TEWA1_VBAP TO TEMP1_VBAP .

      LOOP AT TEMP_VBRP INTO TEWA_VBRP .

        IF TEVP_MATKL = TEWA_VBRP-MATKL.
*        TEWA1_VBAP-VOLUM =   TEWA1_VBAP-VOLUM  + TEWA_VBAP-VOLUM.
          TEWA1_VBRP-FKIMG =  TEWA1_VBRP-FKIMG  + TEWA_VBRP-FKIMG.
          TEWA1_VBRP-NETWR = TEWA1_VBRP-NETWR + TEWA_VBRP-NETWR.
        ELSE.
          IF TEWA1_VBRP IS NOT INITIAL.
            APPEND TEWA1_VBRP TO TEMP1_VBRP .
            CLEAR TEWA1_VBRP.
          ENDIF.
          TEWA1_VBRP = TEWA_VBRP.
          TEVP_MATKL = TEWA_VBRP-MATKL.
        ENDIF.
      ENDLOOP.

      APPEND TEWA1_VBRP TO TEMP1_VBRP .

      CLEAR: TEWA1_VBAP,TEMP_MATKL,TEWA1_VBRP,TEVP_MATKL.

    ENDLOOP.

    CLEAR : IT_VBAP,IT_FINAL,WA_FINAL,IT_VBRP.
    APPEND LINES OF TEMP1_VBAP TO IT_VBAP.
    APPEND LINES OF TEMP1_VBRP TO IT_VBRP.
    LOOP AT IT_VBAK INTO WA_VBAK.

      LOOP AT IT_VBAP  INTO WA_VBAP WHERE VBELN = WA_VBAK-VBELN.

        READ TABLE IT_VBAK INTO WA_VBAK WITH KEY VBELN = WA_VBAP-VBELN.
        READ TABLE IT_KNA1 INTO WA_KNA1 WITH KEY KUNNR = WA_VBAK-KUNNR.
        READ TABLE IT_T005U INTO WA_T005U WITH KEY LAND1 = WA_KNA1-LAND1 BLAND = WA_KNA1-REGIO .
        READ TABLE IT_ZSAL_ZONE_REG INTO WA_ZSAL_ZONE_REG WITH KEY SA_VKBUR = WA_VBAK-VKBUR.
        READ TABLE IT_T023T INTO WA_T023T WITH KEY MATKL = WA_VBAP-MATKL.


        IF WA_ZSAL_ZONE_REG-SA_VKBUR = WA_VBAK-VKBUR.
          WA_FINAL-ZONE1 = WA_ZSAL_ZONE_REG-SA_ZONE.
          WA_FINAL-SA_NAME1 = WA_ZSAL_ZONE_REG-SA_NAME1.
        ELSE.
          WA_FINAL-ZONE1 = ' '.
          WA_FINAL-SA_NAME1 = ' '.
        ENDIF.

        WA_FINAL-VBELN = WA_VBAK-VBELN.
        WA_FINAL-AUDAT = WA_VBAK-AUDAT.
        WA_FINAL-BSTNK = WA_VBAK-BSTNK.
        WA_FINAL-NETWR = WA_VBAP-NETWR .
        WA_FINAL-KWMENG = WA_VBAP-KWMENG. "Sale Order Quantity.
        WA_FINAL-SAL_Q = WA_VBAP-KWMENG .
        WA_FINAL-SAL_A = WA_VBAP-NETWR .
        WA_FINAL-WGBEZ = WA_T023T-WGBEZ.
        WA_FINAL-TOT_LTAMT = WA_VBAP-NETWR.
        WA_FINAL-ITEM = WA_VBAP-POSNR .
        WA_FINAL-KUNNR = WA_VBAK-KUNNR.
        WA_FINAL-NAME1 = WA_KNA1-NAME1.
        WA_FINAL-BEZEI = WA_T005U-BEZEI.
        WA_FINAL-WERKS = WA_VBAK-VKBUR.
        WA_FINAL-MATNR = WA_VBAP-MATNR.
        WA_FINAL-ARKTX = WA_VBAP-ARKTX.
        WA_FINAL-KWMENG = WA_VBAP-KWMENG.
        WA_FINAL-TOT_VOLUM = WA_VBAP-VOLUM.
        WA_FINAL-TOT_QTY = WA_VBAP-KWMENG.
        WA_FINAL-MATKL  = WA_VBAP-MATKL.
        WA_FINAL-BAL_Q = WA_VBAP-KWMENG.
        WA_FINAL-BAL_A = WA_VBAP-NETWR.

   LOOP AT IT_VBRP INTO WA_VBRP WHERE AUBEL EQ WA_VBAP-VBELN AND MATKL EQ WA_VBAP-MATKL.
          WA_FINAL-BAL_Q = WA_VBAP-KWMENG - WA_VBRP-FKIMG.
          IF WA_FINAL-BAL_Q <= 0.
            WA_FINAL-BAL_A = 0.
          ELSE.
            WA_FINAL-BAL_A = WA_VBAP-NETWR - WA_VBRP-NETWR.
          ENDIF.
        ENDLOOP.



        CALL FUNCTION 'FIMA_DAYS_AND_MONTHS_AND_YEARS'
          EXPORTING
            I_DATE_FROM    = WA_VBAK-AUDAT
*           I_KEY_DAY_FROM =
            I_DATE_TO      = SY-DATUM
*           I_KEY_DAY_TO   =
*           I_FLG_SEPARATE = ' '
          IMPORTING
            E_DAYS         = OTDD.
*       E_MONTHS       =
*       E_YEARS        =
        WA_FINAL-OTDD  = OTDD.

        SHIFT WA_FINAL-KUNNR LEFT DELETING LEADING '0' .
        SHIFT WA_FINAL-MATNR LEFT DELETING LEADING '0' .
        SHIFT WA_FINAL-VBELN LEFT DELETING LEADING '0' .

        APPEND: WA_FINAL TO IT_FINAL .

*      DELETE ADJACENT DUPLICATES FROM IT_SENDMAIL COMPARING EM_VKBUR.
        CLEAR: WA_FINAL ,WA_ZSAL_ZONE_REG,WA_ZEMAIL_SALESOFF,WA_VBFA  , WA_VBAK , WA_KNA1 , WA_T005U , WA_VBRP , WA_VBRK .

      ENDLOOP.
    ENDLOOP.
    SORT IT_FINAL BY VBELN .
*  SORT IT_SENDMAIL BY EM_EMAILID.

    DATA: ASCII_DATA     TYPE SOLISTI1,   "your data returned by SO_DOCUMENT_READ_API1
              STRING_DATA    TYPE STRING,
              XSTRING_DATA   TYPE XSTRING.

    DATA : IT_HEADER TYPE STRING. "declare string

    CLASS CL_ABAP_CHAR_UTILITIES DEFINITION LOAD.
    CLEAR: IT_ATTACH,STRING_DATA,XSTRING_DATA,I_XSTRING,I_OBJBIN,I_OBJBIN1,I_OBJBIN_F.
    CONSTANTS: CON_TAB  TYPE C VALUE CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
    CONSTANTS: CON_CRET TYPE C VALUE CL_ABAP_CHAR_UTILITIES=>CR_LF.

    CONCATENATE 'Zone' 'Sale Office' 'sales office Name' 'Document Number' 'Party Number' 'Party Name'
    'Value of the order' 'Order to Delivery Days' 'Order Date' 'Product Group' 'Product Group Name' 'Tot Qty' 'Qty Ltr' 'Ltr Value' 'Remaining Qty'
                'Remaining Value'
     INTO IT_ATTACH SEPARATED BY CON_TAB .

    CONCATENATE CON_CRET IT_ATTACH  INTO IT_ATTACH.
    APPEND IT_ATTACH.

    LOOP AT IT_FINAL INTO WA_FINAL.

      CLEAR: DOC_DAT.
      CONCATENATE WA_FINAL-AUDAT+6(2) '-' WA_FINAL-AUDAT+4(2) '-' WA_FINAL-AUDAT(4) INTO DOC_DAT.
      CONCATENATE
       WA_FINAL-ZONE1 CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB
       WA_FINAL-WERKS CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB
       WA_FINAL-SA_NAME1 CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB
       WA_FINAL-VBELN CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB
       WA_FINAL-KUNNR CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB
       WA_FINAL-NAME1 CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB
       WA_FINAL-SAL_A CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB
       WA_FINAL-OTDD CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB
       DOC_DAT CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB
       WA_FINAL-MATKL CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB
       WA_FINAL-WGBEZ CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB
       WA_FINAL-SAL_Q CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB
       WA_FINAL-TOT_VOLUM CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB
       WA_FINAL-TOT_LTAMT CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB
       WA_FINAL-BAL_Q CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB
       WA_FINAL-BAL_A CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB
       INTO IT_ATTACH .

      CONCATENATE CON_CRET IT_ATTACH  INTO IT_ATTACH.
      APPEND IT_ATTACH.


    ENDLOOP.
    CLEAR : IT_FINAL,WA_FINAL,STRING_DATA,XSTRING_DATA,I_OBJBIN,I_OBJBIN1,I_OBJBIN_F.
    LOOP AT IT_ATTACH.
      STRING_DATA = IT_ATTACH.
      CALL FUNCTION 'SCMS_STRING_TO_XSTRING'
        EXPORTING
          TEXT     = STRING_DATA
*         MIMETYPE = ' '
*         ENCODING =
        IMPORTING
          BUFFER   = XSTRING_DATA
        EXCEPTIONS
          FAILED   = 1
          OTHERS   = 2.
      IF SY-SUBRC <> 0.
* Implement suitable error handling here
      ENDIF.

      CALL FUNCTION 'SCMS_XSTRING_TO_BINARY'
        EXPORTING
          BUFFER          = XSTRING_DATA
*         APPEND_TO_TABLE = ' '
        IMPORTING
          OUTPUT_LENGTH   = BYTES
        TABLES
          BINARY_TAB      = I_OBJBIN1.
      APPEND: I_OBJBIN1 TO I_OBJBIN_F[].

    ENDLOOP.

    CALL FUNCTION 'SCMS_XSTRING_TO_BINARY'
      EXPORTING
        BUFFER                = I_XSTRING
*         APPEND_TO_TABLE       = ' '
*       IMPORTING
*         OUTPUT_LENGTH         =
      TABLES
        BINARY_TAB            = I_OBJBIN[].

    DATA: IN_MAILID TYPE AD_SMTPADR.

    IN_MAILID = S_EMAIL .
*  CLEAR WA_SENDMAIL.
    CLEAR: IN_MAILID, S_EMAIL.
    S_EMAIL = TEWA_SENDMAIL-EM_EMAILID.
    IN_MAILID = S_EMAIL.
    IF IN_MAILID <> ' ' .

      DATA: DSTR1 TYPE CHAR8,
          DSTR2 TYPE CHAR2,
          DSTR3 TYPE CHAR2,
          DSTR4 TYPE CHAR4,
          DSTR5 TYPE CHAR1,
          DATESTR6 TYPE CHAR10.

      DSTR1 = SY-DATUM.
      DSTR4 = DSTR1+0(4).
      DSTR3 = DSTR1+4(2).
      DSTR2 = DSTR1+6(2).
      DSTR5 = '/'.



      CONCATENATE DSTR2 DSTR5 DSTR3 DSTR5 DSTR4  INTO DATESTR6.



      DATA: SALUTATION TYPE STRING.
      DATA: BODY TYPE STRING.
      DATA: BODY1 TYPE STRING.
      DATA: FOOTER TYPE STRING.
      DATA: SUBJECT(50) TYPE C .
      DATA: TEM_BDY TYPE STRING.

      DATA: LO_SEND_REQUEST TYPE REF TO CL_BCS,
            LO_DOCUMENT     TYPE REF TO CL_DOCUMENT_BCS,
            LO_SENDER       TYPE REF TO IF_SENDER_BCS,
            LO_RECIPIENT    TYPE REF TO IF_RECIPIENT_BCS VALUE IS INITIAL,
            LT_MESSAGE_BODY TYPE BCSY_TEXT,
            LX_DOCUMENT_BCS TYPE REF TO CX_DOCUMENT_BCS,
            LV_SENT_TO_ALL  TYPE OS_BOOLEAN.

      DATA:SM_NAM TYPE SO_OBJ_DES.
      DATA:HEADER TYPE CHAR100.
      DATA:CONTENT TYPE CHAR100.
      CLEAR: SALUTATION , BODY ,FOOTER ,LO_SEND_REQUEST ,LO_DOCUMENT ,LO_SENDER ,LO_RECIPIENT ,LV_SENT_TO_ALL.

      LO_SEND_REQUEST = CL_BCS=>CREATE_PERSISTENT( ).

      CLEAR: LT_MESSAGE_BODY.

      FOOTER = 'Dear Sir/Madam,'.
      APPEND FOOTER TO LT_MESSAGE_BODY.
      CLEAR: FOOTER.

      FOOTER = ' '.
      APPEND FOOTER TO LT_MESSAGE_BODY.
      CLEAR: FOOTER.

      CONCATENATE '    Please find the attachment of Open Sales order Materail Group wise details at excel.'  '' INTO TEM_BDY SEPARATED BY SPACE.

      FOOTER = TEM_BDY .
      APPEND FOOTER TO LT_MESSAGE_BODY.
      CLEAR: FOOTER.

      FOOTER = ' '.
      APPEND FOOTER TO LT_MESSAGE_BODY.
      CLEAR: FOOTER.

      FOOTER = 'Regards&Thank'.
      APPEND FOOTER TO LT_MESSAGE_BODY.
      CLEAR: FOOTER.

      FOOTER = 'Sheenlac Paints Ltd,'.
      APPEND FOOTER TO LT_MESSAGE_BODY.
      CLEAR: FOOTER.

      FOOTER = ' '.
      APPEND FOOTER TO LT_MESSAGE_BODY.
      CLEAR: FOOTER.

      CONCATENATE 'Pending Order For Dispatch ' '-' DATESTR6  INTO SUBJECT SEPARATED BY SPACE.

      LO_DOCUMENT = CL_DOCUMENT_BCS=>CREATE_DOCUMENT(
      I_TYPE = 'RAW'
      I_TEXT = LT_MESSAGE_BODY
      I_SUBJECT = SUBJECT ). "'Statement Of The Account'

      CONCATENATE 'Pending Order For Dispatch ' '- ' DATESTR6 INTO SM_NAM.
      TRY.
          LO_DOCUMENT->ADD_ATTACHMENT(
          EXPORTING
          I_ATTACHMENT_TYPE = 'XLS'
          I_ATTACHMENT_SUBJECT = SM_NAM
          I_ATT_CONTENT_HEX = I_OBJBIN_F[] ).
        CATCH CX_DOCUMENT_BCS INTO LX_DOCUMENT_BCS.
      ENDTRY.


      LO_SEND_REQUEST->SET_DOCUMENT( LO_DOCUMENT ).
      LO_SENDER = CL_SAPUSER_BCS=>CREATE( SY-UNAME ).
      LO_SEND_REQUEST->SET_SENDER( LO_SENDER ).
      LO_RECIPIENT = CL_CAM_ADDRESS_BCS=>CREATE_INTERNET_ADDRESS( IN_MAILID ).
      LO_SEND_REQUEST->ADD_RECIPIENT( EXPORTING I_RECIPIENT = LO_RECIPIENT I_EXPRESS = ABAP_TRUE ).
      LO_SEND_REQUEST->ADD_RECIPIENT( LO_RECIPIENT ).
      LO_SEND_REQUEST->SEND( EXPORTING I_WITH_ERROR_SCREEN = ABAP_TRUE RECEIVING RESULT = LV_SENT_TO_ALL ).

      COMMIT WORK.
*    COUNT = COUNT + 1 .

    ENDIF.
*CLEANUP.

*  ENDLOOP.


    CLEAR:WA_FINAL,WA_FINAL1,IT_FINAL1,IT_FINAL,IT_ATTACH[],IT_ATTACH,I_OBJBIN,I_OBJBIN1,I_OBJBIN_F,I_OBJBIN_F[],I_OBJBIN[],IN_MAILID,WA_KNA1,WA_LIPS,WA_SENDMAIL,WA_T001W,WA_T005U,WA_VBAK,WA_VBAK1,WA_VBAP,WA_VBFA,WA_VBRK,WA_VBRP,WA_ZEMAIL_SALESOFF,
  WAFINAL_SENDMAIL,TEMP1_VBAP,TEMP_MATKL,TEWA_VBAP,I_OBJBIN_F.

  ENDLOOP.
******************************************************
ENDFORM.                    "GET_DAT
