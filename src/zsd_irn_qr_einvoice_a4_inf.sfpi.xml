<?xml version="1.0" encoding="utf-8"?>
<abapGit version="v1.0.0" serializer="LCL_OBJECT_SFPI" serializer_version="v1.0.0">
 <asx:abap version="1.0" xmlns:asx="http://www.sap.com/abapxml">
  <asx:values>
   <VERSION>1</VERSION>
   <TYPE>S</TYPE>
   <INTERFACE href="#o1"/>
   <INTERFACET>
    <FPINTERFACET>
     <NAME/>
     <STATE/>
     <LANGUAGE>E</LANGUAGE>
     <ID/>
     <TEXT>GST Export Invoice Form</TEXT>
    </FPINTERFACET>
   </INTERFACET>
  </asx:values>
  <asx:heap xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:abap="http://www.sap.com/abapxml/types/built-in" xmlns:cls="http://www.sap.com/abapxml/classes/global" xmlns:dic="http://www.sap.com/abapxml/types/dictionary">
   <cls:CL_FP_INTERFACE_DATA id="o1">
    <CL_FP_INTERFACE_DATA classVersion="1">
     <CODING href="#o5"/>
     <PARAMETERS href="#o4"/>
     <GLOBAL_DEFINITIONS href="#o3"/>
     <REFERENCE_FIELDS href="#o2"/>
     <XSD_DEFINITIONS/>
    </CL_FP_INTERFACE_DATA>
   </cls:CL_FP_INTERFACE_DATA>
   <cls:CL_FP_REFERENCE_FIELDS id="o2">
    <CL_FP_INTERFACE_DATA_CHANGED classVersion="1">
     <INTERFACE_DATA href="#o1"/>
    </CL_FP_INTERFACE_DATA_CHANGED>
    <CL_FP_REFERENCE_FIELDS classVersion="1">
     <REFERENCE_FIELDS/>
    </CL_FP_REFERENCE_FIELDS>
   </cls:CL_FP_REFERENCE_FIELDS>
   <cls:CL_FP_GLOBAL_DEFINITIONS id="o3">
    <CL_FP_INTERFACE_DATA_CHANGED classVersion="1">
     <INTERFACE_DATA href="#o1"/>
    </CL_FP_INTERFACE_DATA_CHANGED>
    <CL_FP_GLOBAL_DEFINITIONS classVersion="1">
     <GLOBAL_DATA>
      <SFPGDATA>
       <NAME>IT_INV</NAME>
       <TYPING>TYPE TABLE OF</TYPING>
       <TYPENAME>VBRK</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LS_INV</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>VBRK</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GS_VBRK</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>VBRK</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GT_VBRP</NAME>
       <TYPING>TYPE TABLE OF</TYPING>
       <TYPENAME>VBRP</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GT_KONV</NAME>
       <TYPING>TYPE TABLE OF</TYPING>
       <TYPENAME>PRCD_ELEMENTS</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GT_KONP</NAME>
       <TYPING>TYPE TABLE OF</TYPING>
       <TYPENAME>KONP</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GS_VBRP</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>VBRP</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LT_MARA</NAME>
       <TYPING>TYPE TABLE OF</TYPING>
       <TYPENAME>MARA</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LS_MARA</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>MARA</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GS_SP</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>TY_SOLD_TO_PARTY</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GS_BILL_TO</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>TY_BILL_TO</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GS_SH_TO</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>TY_BILL_TO</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GT_MARA</NAME>
       <TYPING>TYPE TABLE OF</TYPING>
       <TYPENAME>TY_MARA</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GT_ITEM</NAME>
       <TYPING>TYPE TABLE OF</TYPING>
       <TYPENAME>TY_ITEM</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LS_ITEM</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>TY_ITEM</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GV_FREIGHT</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>KWERT</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GV_INSURANCE</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>KWERT</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GV_PACKING</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>KWERT</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GV_TOT_STR</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>CHAR1024</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GS_TOTAL</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>TY_TOTAL</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LV_TOT_INV</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>MAXBT</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LV_PLANT</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>VBRP-VSTEL</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>WA_VBRK</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>VBRK</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>WA_ADRC_HEAD</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>ADRC</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>IT_VBRK</NAME>
       <TYPING>TYPE TABLE OF</TYPING>
       <TYPENAME>VBRK</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>WA_T001W</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>T001W</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LV_WERKS</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>VBRP-WERKS</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>WA_ADRC</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>ADRC</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>WA_BIL_INVOICE</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>LBBIL_INVOICE</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>WA_HD_ADR</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>LBBIL_HD_ADR</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>WA_J_1IMOCOMP</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>J_1IMOCOMP</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>WA_J_1IMOCUST</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>KNA1</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>WA_LIKP</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>LIKP</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>WA_VBRP</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>VBRP</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LV_PLANT_GSTIN</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>J_1BBRANCH-GSTIN</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GIN_TYP</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>FKART</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LV_CUST_GSTIN</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>KNA1-STCD3</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>WA_IT_REFDLV</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>LBBIL_IT_REFDLV</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>COUNT</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>I</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>WA_KNA1</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>KNA1</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>STATE</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>BEZEI20</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GINVOICE</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>KWERT</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GROUNDOFF</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>KWERT</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GRSAMT</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>KWERT</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>IT_LIPS1</NAME>
       <TYPING>TYPE TABLE OF</TYPING>
       <TYPENAME>LIPS</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>WA_LIPS1</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>LIPS</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>WA_IT_KOND</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>LBBIL_IT_KOND</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>TOT_DISC</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>P</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>TOT_TAX</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>P</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GV_TEXT</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>CHAR100</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LV_SGSTP</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>KBETR</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LV_CGSTP</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>KBETR</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LV_IGSTP</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>KBETR</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LV_DISC</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>KBETR</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LV_R1</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>KBETR</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LV_R2</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>KBETR</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LV_R4</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>KBETR</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LV_VBELV</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>VBFA-VBELV</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LV_CHARG</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>LIPS-CHARG</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LV_EBELN</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>EKBE-EBELN</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LV_BSART</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>EKKO-BSART</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LV_HEADING</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>CHAR50</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GV_TOT_INV</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>MAXBT</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>IT_CHARG</NAME>
       <TYPING>TYPE TABLE OF</TYPING>
       <TYPENAME>TY_CHARG</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>WA_CHARG</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>TY_CHARG</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>WA_IT_GEN</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>LBBIL_IT_GEN</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>WA_TEL_NO</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>AD_TLNMBR1</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LV_LTR_FLAG</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>C</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GT_MARM</NAME>
       <TYPING>TYPE TABLE OF</TYPING>
       <TYPENAME>TY_MARM</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GS_MARM</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>TY_MARM</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LV_MARM_FLAG</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>C</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LV_DESC</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>STRING</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LV_RATE_DESC1</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>STRING</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LV_RATE_DESC2</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>STRING</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LV_TTOT_QTY</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>FKIMG</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LV_NO_LINES</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>I</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GT_VBPA</NAME>
       <TYPING>TYPE TABLE OF</TYPING>
       <TYPENAME>TY_VBPA</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GS_VBPA</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>TY_VBPA</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GT_ADRC</NAME>
       <TYPING>TYPE TABLE OF</TYPING>
       <TYPENAME>TY_ADRC</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GS_ADRC</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>TY_ADRC</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LV_TABIX</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>SY-TABIX</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LV_LINES</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>I</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GS_BADRC</NAME>
       <TYPING>LIKE</TYPING>
       <TYPENAME>GS_ADRC</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GS_KNA1</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>TY_KNA1</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GT_LIKP</NAME>
       <TYPING>TYPE TABLE OF</TYPING>
       <TYPENAME>TY_LIKP</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GS_LIKP</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>TY_LIKP</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GV_BATCH</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>STRING</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GV_JUMP</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>SY-TABIX</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GS_SADRC</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>TY_SADRC</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GT_HSN</NAME>
       <TYPING>TYPE TABLE OF</TYPING>
       <TYPENAME>TY_HSN</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GS_HSN</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>TY_HSN</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LV_NHSN</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>I</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>FLAG</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>C</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LV_UMREN</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>UMREN</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>ROW_NO1</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>I</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>FLAG1</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>C</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>ROW_NO</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>I</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LV_INDEX1</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>I</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>SH_REG</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>BEZEI20</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>COLOR</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>AUSP-ATWRT</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>COLOR_I</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>I</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LV_DIS</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>KBETR</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>LV_TCSPRC</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>STRING</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GV_ROUND_OFF</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>KWERT</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GV_QRCODE</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>STRING</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GV_IRN</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>J_1IG_IRN</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GV_EWBNO</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>STRING</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GV_EWBDAT</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>J_1IG_EGENDAT</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GV_EWB_EXPDATE</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>CHAR10</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GS_TRANSDTLS</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>ZSD_EWAY_TRDTLS</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GV_HEADERTXT</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>STRING</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GV_FOR_TEXT</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>STRING</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GV_REG_ADD1</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>STRING</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GV_REG_ADD2</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>STRING</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GV_REG_ADD3</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>STRING</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
      <SFPGDATA>
       <NAME>GV_DEL_DATE</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>DATS</TYPENAME>
       <DEFAULTVAL/>
       <CONSTANT/>
      </SFPGDATA>
     </GLOBAL_DATA>
     <TYPES>
      <FPCLINE/>
      <FPCLINE>TYPES : BEGIN OF TY_SOLD_TO_PARTY,</FPCLINE>
      <FPCLINE>          GSTIN(20)      TYPE C,</FPCLINE>
      <FPCLINE>          NAME(80)       TYPE C,</FPCLINE>
      <FPCLINE>          STREET(60)     TYPE C,</FPCLINE>
      <FPCLINE>          CITY1(40)      TYPE C,</FPCLINE>
      <FPCLINE>          POST_CODE1(10) TYPE C,</FPCLINE>
      <FPCLINE>          STATE_DESC(20)  TYPE C,</FPCLINE>
      <FPCLINE>          CNTRY_DESC(20) TYPE C,</FPCLINE>
      <FPCLINE>          SERIAL_NUM     TYPE VBRK-XBLNR,</FPCLINE>
      <FPCLINE>          DATE           TYPE DATUM,</FPCLINE>
      <FPCLINE>        END OF TY_SOLD_TO_PARTY.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>TYPES : BEGIN OF TY_BILL_TO,</FPCLINE>
      <FPCLINE>          NAME1(40)      TYPE C,</FPCLINE>
      <FPCLINE>          NAME2(40)      TYPE C,</FPCLINE>
      <FPCLINE>          STREET(60)     TYPE C,</FPCLINE>
      <FPCLINE>          CITY1(40)      TYPE C,</FPCLINE>
      <FPCLINE>          POST_CODE1(10) TYPE C,</FPCLINE>
      <FPCLINE>          REGION(3)      TYPE C,</FPCLINE>
      <FPCLINE>          COUNTRY(20)    TYPE C,</FPCLINE>
      <FPCLINE>          STATE          TYPE BEZEI,</FPCLINE>
      <FPCLINE>          STATE_CODE(20) TYPE C,</FPCLINE>
      <FPCLINE>          STATE_DESC(20) TYPE C,</FPCLINE>
      <FPCLINE>          GSTIN          TYPE KNA1-STCD3,</FPCLINE>
      <FPCLINE>        END OF TY_BILL_TO.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>TYPES: BEGIN OF TY_MARA,</FPCLINE>
      <FPCLINE>         MATNR TYPE MARA-MATNR,</FPCLINE>
      <FPCLINE>         MTART TYPE MARA-MTART,</FPCLINE>
      <FPCLINE>         MATKL TYPE MARA-MATKL,</FPCLINE>
      <FPCLINE>         MEINS TYPE MARA-MEINS,</FPCLINE>
      <FPCLINE>       END OF TY_MARA.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>TYPES : BEGIN OF TY_ITEM,</FPCLINE>
      <FPCLINE>           POSNR  TYPE  POSNR,</FPCLINE>
      <FPCLINE>           MATNR  TYPE MATNR,</FPCLINE>
      <FPCLINE>          DESC     TYPE MAKTX,</FPCLINE>
      <FPCLINE>          HSN       TYPE  J_1IG_HSN_SAC,</FPCLINE>
      <FPCLINE>          FKIMG  TYPE  FKIMG,</FPCLINE>
      <FPCLINE>          UNIT      TYPE VRKME,&quot;kmein,</FPCLINE>
      <FPCLINE>          VBELN  TYPE VBELN_VL,</FPCLINE>
      <FPCLINE>          CHARG  TYPE CHAR50,</FPCLINE>
      <FPCLINE>          COUNT  TYPE I,</FPCLINE>
      <FPCLINE>          VRKME(3)  TYPE C,</FPCLINE>
      <FPCLINE>          TOT_QUAN TYPE FKIMG,</FPCLINE>
      <FPCLINE>          VOLUM1 TYPE VBRP-VOLUM,</FPCLINE>
      <FPCLINE>          AMOUNT TYPE KBETR,</FPCLINE>
      <FPCLINE>          RATE      TYPE KWERT,</FPCLINE>
      <FPCLINE>          TOTAL     TYPE KWERT,</FPCLINE>
      <FPCLINE>          DISCOUNT  TYPE KWERT,</FPCLINE>
      <FPCLINE>          TAX_VAL   TYPE KWERT,</FPCLINE>
      <FPCLINE>          CGST_RATE TYPE P,</FPCLINE>
      <FPCLINE>          CGST_VAL  TYPE KWERT,</FPCLINE>
      <FPCLINE>          SGST_RATE TYPE P,</FPCLINE>
      <FPCLINE>          SGST_VAL  TYPE KWERT,</FPCLINE>
      <FPCLINE>          IGST_RATE TYPE P,</FPCLINE>
      <FPCLINE>          IGST_VAL  TYPE KWERT,</FPCLINE>
      <FPCLINE>          TCS_RATE TYPE P DECIMALS 3,        &quot;Added by //DEVK921432 on 12/10/2020</FPCLINE>
      <FPCLINE>          TCS_VAL  TYPE KWERT,    &quot;Added by //DEVK921432 on 12/10/2020</FPCLINE>
      <FPCLINE>          R1 TYPE KWERT,</FPCLINE>
      <FPCLINE>          R2 TYPE KWERT,</FPCLINE>
      <FPCLINE>          R3 TYPE KWERT,</FPCLINE>
      <FPCLINE>          R4 TYPE KWERT, &quot;Coded By Prabhu</FPCLINE>
      <FPCLINE>          F TYPE C,</FPCLINE>
      <FPCLINE>        END OF TY_ITEM.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>TYPES : BEGIN OF TY_TOTAL,</FPCLINE>
      <FPCLINE>          TAX_VAL TYPE KWERT,</FPCLINE>
      <FPCLINE>          TOTAL TYPE KWERT,</FPCLINE>
      <FPCLINE>          CGST  TYPE KWERT,</FPCLINE>
      <FPCLINE>          SGST  TYPE KWERT,</FPCLINE>
      <FPCLINE>          IGST  TYPE KWERT,</FPCLINE>
      <FPCLINE>          TCSV  TYPE KWERT,         &quot;Added by //DEVK921432 on 12/10/2020</FPCLINE>
      <FPCLINE>          FKIMG  TYPE  FKIMG,</FPCLINE>
      <FPCLINE>           DISCOUNT  TYPE KWERT,</FPCLINE>
      <FPCLINE>           R1 TYPE KWERT,</FPCLINE>
      <FPCLINE>          R2 TYPE KWERT,</FPCLINE>
      <FPCLINE>         R4 TYPE KWERT, &quot;&quot;Coded By Prabhu</FPCLINE>
      <FPCLINE>           VOLUM1 TYPE VBRP-VOLUM,</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*          tax_val   TYPE p,</FPCLINE>
      <FPCLINE>        END OF TY_TOTAL.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>TYPES : BEGIN OF TY_KSCHL,</FPCLINE>
      <FPCLINE>          KSCHL TYPE KSCHL,</FPCLINE>
      <FPCLINE>        END OF TY_KSCHL.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>TYPES : BEGIN OF TY_CHARG,</FPCLINE>
      <FPCLINE>          BIL_NUMBER TYPE VBELN,</FPCLINE>
      <FPCLINE>          ITM_NUMBER TYPE POSNR,</FPCLINE>
      <FPCLINE>          POSPA TYPE POSPA,</FPCLINE>
      <FPCLINE>          BATCH TYPE CHARG_D,</FPCLINE>
      <FPCLINE>          MATERIAL TYPE MATNR,</FPCLINE>
      <FPCLINE>        END OF TY_CHARG.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*types:begin of str_vol,</FPCLINE>
      <FPCLINE>*      vbeln type vbrp-vbeln,</FPCLINE>
      <FPCLINE>*      POSNR type vbrp-POSNR,</FPCLINE>
      <FPCLINE>*      volum type vbrp-volum,</FPCLINE>
      <FPCLINE>*  end of str_vol.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>* Added on 11 Aug 2017</FPCLINE>
      <FPCLINE>TYPES: BEGIN OF TY_MARM,</FPCLINE>
      <FPCLINE>        MATNR TYPE MARM-MATNR,</FPCLINE>
      <FPCLINE>        MEINH TYPE MARM-MEINH,</FPCLINE>
      <FPCLINE>        UMREZ TYPE MARM-UMREZ,</FPCLINE>
      <FPCLINE>        UMREN TYPE MARM-UMREN,</FPCLINE>
      <FPCLINE>      END OF TY_MARM.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>TYPES: BEGIN OF TY_VBPA,</FPCLINE>
      <FPCLINE>        VBELN TYPE VBPA-VBELN,</FPCLINE>
      <FPCLINE>        PARVW TYPE VBPA-PARVW,</FPCLINE>
      <FPCLINE>        KUNNR TYPE VBPA-KUNNR,</FPCLINE>
      <FPCLINE>        ADRNR TYPE VBPA-ADRNR,</FPCLINE>
      <FPCLINE>      END OF TY_VBPA.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>TYPES: BEGIN OF TY_ADRC,</FPCLINE>
      <FPCLINE>        ADDRNUMBER TYPE ADRC-ADDRNUMBER,</FPCLINE>
      <FPCLINE>        NAME1 TYPE ADRC-NAME1,</FPCLINE>
      <FPCLINE>        CITY1 TYPE ADRC-CITY1,</FPCLINE>
      <FPCLINE>        CITY2 TYPE ADRC-CITY2,</FPCLINE>
      <FPCLINE>        POST_CODE1 TYPE ADRC-POST_CODE1,</FPCLINE>
      <FPCLINE>        STREET TYPE ADRC-STREET,</FPCLINE>
      <FPCLINE>        HOUSE_NUM1 TYPE ADRC-HOUSE_NUM1,</FPCLINE>
      <FPCLINE>        STR_SUPPL1 TYPE ADRC-STR_SUPPL1,</FPCLINE>
      <FPCLINE>        COUNTRY TYPE ADRC-COUNTRY,</FPCLINE>
      <FPCLINE>        REGION TYPE ADRC-REGION,</FPCLINE>
      <FPCLINE>        TEL_NUMBER TYPE ADRC-TEL_NUMBER,</FPCLINE>
      <FPCLINE>      END OF TY_ADRC.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>TYPES: BEGIN OF TY_LIKP,</FPCLINE>
      <FPCLINE>        VBELN TYPE LIKP-VBELN,</FPCLINE>
      <FPCLINE>        KUNNR TYPE LIKP-KUNNR,</FPCLINE>
      <FPCLINE>      END OF TY_LIKP.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>TYPES: BEGIN OF TY_KNA1,</FPCLINE>
      <FPCLINE>        KUNNR TYPE KNA1-KUNNR,</FPCLINE>
      <FPCLINE>        NAME1 TYPE KNA1-NAME1,</FPCLINE>
      <FPCLINE>        ORT01 TYPE KNA1-ORT01,</FPCLINE>
      <FPCLINE>        PSTLZ TYPE KNA1-PSTLZ,</FPCLINE>
      <FPCLINE>        REGIO TYPE KNA1-REGIO,</FPCLINE>
      <FPCLINE>        STRAS TYPE KNA1-STRAS,</FPCLINE>
      <FPCLINE>        TELF1 TYPE KNA1-TELF1,</FPCLINE>
      <FPCLINE>        ORT02 TYPE KNA1-ORT02,</FPCLINE>
      <FPCLINE>        STCD3 TYPE KNA1-STCD3,</FPCLINE>
      <FPCLINE>      END OF TY_KNA1.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>TYPES: BEGIN OF TY_SADRC,</FPCLINE>
      <FPCLINE>        ADDRNUMBER TYPE ADRC-ADDRNUMBER,</FPCLINE>
      <FPCLINE>        NAME1 TYPE ADRC-NAME1,</FPCLINE>
      <FPCLINE>        POST_CODE1 TYPE ADRC-POST_CODE1,</FPCLINE>
      <FPCLINE>        STREET TYPE ADRC-STREET,</FPCLINE>
      <FPCLINE>        HOUSE_NUM1 TYPE ADRC-HOUSE_NUM1,</FPCLINE>
      <FPCLINE>        STR_SUPPL1 TYPE ADRC-STR_SUPPL1,&quot;created on 09.09.2020 by prabhu</FPCLINE>
      <FPCLINE>        REGION TYPE ADRC-REGION,</FPCLINE>
      <FPCLINE>        TEL_NUMBER TYPE ADRC-TEL_NUMBER,</FPCLINE>
      <FPCLINE>        MC_CITY1 TYPE ADRC-MC_CITY1,</FPCLINE>
      <FPCLINE>      END OF TY_SADRC,</FPCLINE>
      <FPCLINE/>
      <FPCLINE>      BEGIN OF TY_HSN,</FPCLINE>
      <FPCLINE>      RNO TYPE I,</FPCLINE>
      <FPCLINE>      HSN(4),</FPCLINE>
      <FPCLINE>      QTY  TYPE  FKIMG,</FPCLINE>
      <FPCLINE>      UNIT TYPE VRKME,&quot;kmein,</FPCLINE>
      <FPCLINE>      TAX_VAL TYPE KWERT,</FPCLINE>
      <FPCLINE>      PER TYPE P,</FPCLINE>
      <FPCLINE>      RATE TYPE KWERT,</FPCLINE>
      <FPCLINE>      MATNR TYPE MATNR,</FPCLINE>
      <FPCLINE>      TCS_RATE TYPE P DECIMALS 3,        &quot;Added by //DEVK921432 on 12/10/2020</FPCLINE>
      <FPCLINE>      TCS_VAL  TYPE KWERT,    &quot;Added by //DEVK921432 on 12/10/2020</FPCLINE>
      <FPCLINE>     END OF TY_HSN.</FPCLINE>
     </TYPES>
     <FIELDSYMBOLS/>
    </CL_FP_GLOBAL_DEFINITIONS>
   </cls:CL_FP_GLOBAL_DEFINITIONS>
   <cls:CL_FP_PARAMETERS id="o4">
    <CL_FP_INTERFACE_DATA_CHANGED classVersion="1">
     <INTERFACE_DATA href="#o1"/>
    </CL_FP_INTERFACE_DATA_CHANGED>
    <CL_FP_PARAMETERS classVersion="1">
     <IMPORT_PARAMETERS>
      <SFPIOPAR>
       <NAME>/1BCDWB/DOCPARAMS</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>SFPDOCPARAMS</TYPENAME>
       <OPTIONAL>X</OPTIONAL>
       <BYVALUE>X</BYVALUE>
       <DEFAULTVAL/>
       <STANDARD/>
       <CONSTANT/>
      </SFPIOPAR>
      <SFPIOPAR>
       <NAME>IS_BIL_INVOICE</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>LBBIL_INVOICE</TYPENAME>
       <OPTIONAL>X</OPTIONAL>
       <BYVALUE>X</BYVALUE>
       <DEFAULTVAL/>
       <STANDARD/>
       <CONSTANT/>
      </SFPIOPAR>
     </IMPORT_PARAMETERS>
     <EXPORT_PARAMETERS>
      <SFPIOPAR>
       <NAME>/1BCDWB/FORMOUTPUT</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>FPFORMOUTPUT</TYPENAME>
       <OPTIONAL/>
       <BYVALUE>X</BYVALUE>
       <DEFAULTVAL/>
       <STANDARD/>
       <CONSTANT/>
      </SFPIOPAR>
     </EXPORT_PARAMETERS>
     <TABLE_PARAMETERS/>
     <EXCEPTIONS/>
    </CL_FP_PARAMETERS>
   </cls:CL_FP_PARAMETERS>
   <cls:CL_FP_CODING id="o5">
    <CL_FP_INTERFACE_DATA_CHANGED classVersion="1">
     <INTERFACE_DATA href="#o1"/>
    </CL_FP_INTERFACE_DATA_CHANGED>
    <CL_FP_CODING classVersion="1">
     <INPUT_PARAMETERS/>
     <OUTPUT_PARAMETERS/>
     <INITIALIZATION>
      <FPCLINE>*************************</FPCLINE>
      <FPCLINE>*--Data declarations</FPCLINE>
      <FPCLINE>**************************</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*--Condition type Ranges</FPCLINE>
      <FPCLINE>DATA : lt_conditions TYPE TABLE OF ty_kschl,</FPCLINE>
      <FPCLINE>       lt_lips       TYPE TABLE OF lips,      &quot;Freight</FPCLINE>
      <FPCLINE>       lt_freight    TYPE TABLE OF ty_kschl,      &quot;Freight</FPCLINE>
      <FPCLINE>       lt_disc       TYPE TABLE OF ty_kschl,      &quot;Discount</FPCLINE>
      <FPCLINE>       lt_makt       TYPE TABLE OF makt,          &quot;Material descriptions</FPCLINE>
      <FPCLINE>       ls_conditions TYPE ty_kschl,               &quot;All Conditions</FPCLINE>
      <FPCLINE>       ls_disc       TYPE ty_kschl,               &quot;Discount structure</FPCLINE>
      <FPCLINE>       ls_lips       TYPE lips,               &quot;Discount structure</FPCLINE>
      <FPCLINE>       ls_freight    TYPE  ty_kschl,</FPCLINE>
      <FPCLINE>       lv_amt        TYPE i.              &quot;Freight structure</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*--Local structures</FPCLINE>
      <FPCLINE>DATA :ls_excdefn TYPE j_1iexcdefn,               &quot;Conditions</FPCLINE>
      <FPCLINE>      ls_vbrp    TYPE vbrp,                      &quot;Billing items</FPCLINE>
      <FPCLINE>      ls_item    TYPE ty_item,</FPCLINE>
      <FPCLINE>      ls_makt    TYPE  makt,                     &quot;Material</FPCLINE>
      <FPCLINE>*      LS_KONV    TYPE KONV, &quot;Commented by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>      ls_konv    TYPE prcd_elements,  &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>      ls_adrc    TYPE adrc,</FPCLINE>
      <FPCLINE>      ls_branch  TYPE j_1bbranch,</FPCLINE>
      <FPCLINE>      ls_vbpa    TYPE vbpa.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>*--Local Variables</FPCLINE>
      <FPCLINE>DATA : lv_cgst       TYPE kschl,                 &quot;Central GST</FPCLINE>
      <FPCLINE>       lv_sgst       TYPE kschl,                 &quot;State GST</FPCLINE>
      <FPCLINE>       lv_igst       TYPE kschl,                 &quot;Integrated GST</FPCLINE>
      <FPCLINE>       lv_tcsc       TYPE kschl,                 &quot;TCS &quot;Added by //DEVK921432 on 12/10/2020</FPCLINE>
      <FPCLINE>       lv_basic      TYPE kschl,                 &quot;Basic Price</FPCLINE>
      <FPCLINE>       lv_pack       TYPE kschl,                 &quot;Packing &amp; forwarding</FPCLINE>
      <FPCLINE>       lv_insur      TYPE kschl,                 &quot;Insurance</FPCLINE>
      <FPCLINE>       lv_index      TYPE i      VALUE 0,        &quot;Index</FPCLINE>
      <FPCLINE>       lv_adrnr      TYPE adrnr,                 &quot;Address Number</FPCLINE>
      <FPCLINE>       lv_gstin      TYPE stcd3,                 &quot;GST Number</FPCLINE>
      <FPCLINE>       lv_branch     TYPE j_1bbranc_,            &quot;Bus Partner</FPCLINE>
      <FPCLINE>       lv_cntry_desc TYPE landx,                 &quot;country description</FPCLINE>
      <FPCLINE>       lv_state_desc TYPE bezei20,               &quot;State description</FPCLINE>
      <FPCLINE>       lv_kalsm      TYPE kalsm,                 &quot;Pricing Procedure</FPCLINE>
      <FPCLINE>       lv_hsn_sac    TYPE j_1ig_hsn_sac,         &quot;HSN/SAC Code\</FPCLINE>
      <FPCLINE>       lv_dr1r2      TYPE kwert,</FPCLINE>
      <FPCLINE>       lv_tot_tax    TYPE kwert,</FPCLINE>
      <FPCLINE>       lv_vgbel      TYPE vgbel,</FPCLINE>
      <FPCLINE>       lv_hno(4),</FPCLINE>
      <FPCLINE>       lv_ind        TYPE i,</FPCLINE>
      <FPCLINE>       lv_hsn        TYPE i,</FPCLINE>
      <FPCLINE>       lv_tcsp       TYPE p DECIMALS 3,       &quot;Added by //DEVK921432 on 12/10/2020</FPCLINE>
      <FPCLINE>       lv_round      TYPE kschl,             &quot;Added by //DEVK921432 on 12/10/2020</FPCLINE>
      <FPCLINE>       lv_round_v    TYPE kwert..         &quot;Added by //DEVK921432 on 12/10/2020</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>DATA : lv_index1      TYPE i      VALUE 0.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>CLEAR gs_total.</FPCLINE>
      <FPCLINE>IF is_bil_invoice-hd_gen-bil_number IS INITIAL.</FPCLINE>
      <FPCLINE>  is_bil_invoice-hd_gen-bil_number = &apos;0102051501&apos;.</FPCLINE>
      <FPCLINE>ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*******************************</FPCLINE>
      <FPCLINE>**--Billing Header/Item details</FPCLINE>
      <FPCLINE>********************************</FPCLINE>
      <FPCLINE>***BREAK HTC_ABAP.</FPCLINE>
      <FPCLINE>SELECT SINGLE * FROM vbrk</FPCLINE>
      <FPCLINE>                INTO gs_vbrk</FPCLINE>
      <FPCLINE>                WHERE vbeln EQ is_bil_invoice-hd_gen-bil_number.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*SELECT SINGLE * FROM VBRK</FPCLINE>
      <FPCLINE>*                INTO GS_VBRK</FPCLINE>
      <FPCLINE>*                WHERE VBELN EQ &apos;0101000002&apos;.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>IF gs_vbrk-fkart EQ &apos;YBDP&apos;.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>  lv_marm_flag = &apos;X&apos;.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>IF sy-subrc IS INITIAL.</FPCLINE>
      <FPCLINE>  SELECT * FROM vbrp</FPCLINE>
      <FPCLINE>           INTO TABLE gt_vbrp</FPCLINE>
      <FPCLINE>           WHERE vbeln EQ is_bil_invoice-hd_gen-bil_number.</FPCLINE>
      <FPCLINE>**</FPCLINE>
      <FPCLINE>*  SELECT * FROM VBRP</FPCLINE>
      <FPCLINE>*           INTO TABLE GT_VBRP</FPCLINE>
      <FPCLINE>*           WHERE VBELN EQ &apos;0101000002&apos;.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>ELSE.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*  Message that the Invalid Invoice number</FPCLINE>
      <FPCLINE>  RETURN.</FPCLINE>
      <FPCLINE>ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>********** ADDRESS -- SHIP TO AND BILL TO PARTY **********</FPCLINE>
      <FPCLINE/>
      <FPCLINE>****Billing***</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*SELECT SINGLE VBELN &quot;Commented by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>SELECT vbeln &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>       parvw</FPCLINE>
      <FPCLINE>       kunnr</FPCLINE>
      <FPCLINE>       adrnr</FPCLINE>
      <FPCLINE>  FROM vbpa</FPCLINE>
      <FPCLINE>  INTO gs_vbpa</FPCLINE>
      <FPCLINE>  UP TO 1 ROWS  &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>  WHERE vbeln EQ is_bil_invoice-hd_gen-bil_number</FPCLINE>
      <FPCLINE>  AND parvw EQ &apos;RE&apos;</FPCLINE>
      <FPCLINE>  ORDER BY PRIMARY KEY.	&quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>ENDSELECT.  &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE/>
      <FPCLINE>IF sy-subrc EQ 0.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>  SELECT SINGLE addrnumber</FPCLINE>
      <FPCLINE>                name1</FPCLINE>
      <FPCLINE>                city1</FPCLINE>
      <FPCLINE>                city2</FPCLINE>
      <FPCLINE>                post_code1</FPCLINE>
      <FPCLINE>                street</FPCLINE>
      <FPCLINE>                house_num1</FPCLINE>
      <FPCLINE>                str_suppl1</FPCLINE>
      <FPCLINE>                country</FPCLINE>
      <FPCLINE>                region</FPCLINE>
      <FPCLINE>                tel_number</FPCLINE>
      <FPCLINE>                FROM adrc</FPCLINE>
      <FPCLINE>                INTO gs_badrc</FPCLINE>
      <FPCLINE>                WHERE addrnumber EQ gs_vbpa-adrnr.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>****Billing***</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*****Shipping*****</FPCLINE>
      <FPCLINE/>
      <FPCLINE>********* Selected for full street adress of ship to party****</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*SELECT SINGLE VBELN &quot;Commented by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>SELECT vbeln &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>       parvw</FPCLINE>
      <FPCLINE>       kunnr</FPCLINE>
      <FPCLINE>       adrnr</FPCLINE>
      <FPCLINE>  FROM vbpa</FPCLINE>
      <FPCLINE>  INTO gs_vbpa</FPCLINE>
      <FPCLINE>  UP TO 1 ROWS  &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>  WHERE vbeln EQ is_bil_invoice-hd_gen-bil_number</FPCLINE>
      <FPCLINE>  AND parvw EQ &apos;WE&apos;</FPCLINE>
      <FPCLINE>  ORDER BY PRIMARY KEY.	&quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>ENDSELECT.  &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE/>
      <FPCLINE>IF sy-subrc EQ 0.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>  SELECT SINGLE addrnumber</FPCLINE>
      <FPCLINE>                name1</FPCLINE>
      <FPCLINE>                post_code1</FPCLINE>
      <FPCLINE>                street</FPCLINE>
      <FPCLINE>                house_num1</FPCLINE>
      <FPCLINE>                str_suppl1  &quot;created on 09.09.2020 by prabhu</FPCLINE>
      <FPCLINE>                region</FPCLINE>
      <FPCLINE>                tel_number</FPCLINE>
      <FPCLINE>                mc_city1</FPCLINE>
      <FPCLINE>                FROM adrc</FPCLINE>
      <FPCLINE>                INTO gs_sadrc</FPCLINE>
      <FPCLINE>                WHERE addrnumber EQ gs_vbpa-adrnr.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>ENDIF.</FPCLINE>
      <FPCLINE>********* Selected for full street adress of ship to party*************</FPCLINE>
      <FPCLINE>*SELECT SINGLE VGBEL &quot;Commented by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>SELECT vgbel &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>  FROM vbrp</FPCLINE>
      <FPCLINE>  INTO lv_vgbel</FPCLINE>
      <FPCLINE>  UP TO 1 ROWS  &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>  WHERE vbeln EQ is_bil_invoice-hd_gen-bil_number</FPCLINE>
      <FPCLINE>  ORDER BY PRIMARY KEY.	&quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>ENDSELECT.  &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>IF sy-subrc EQ 0.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>  SELECT SINGLE vbeln</FPCLINE>
      <FPCLINE>                kunnr</FPCLINE>
      <FPCLINE>                FROM likp</FPCLINE>
      <FPCLINE>                INTO gs_likp</FPCLINE>
      <FPCLINE>                WHERE vbeln EQ lv_vgbel.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>IF sy-subrc EQ 0.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>  SELECT SINGLE kunnr</FPCLINE>
      <FPCLINE>                name1</FPCLINE>
      <FPCLINE>                ort01</FPCLINE>
      <FPCLINE>                pstlz</FPCLINE>
      <FPCLINE>                regio</FPCLINE>
      <FPCLINE>                stras</FPCLINE>
      <FPCLINE>                telf1</FPCLINE>
      <FPCLINE>                ort02</FPCLINE>
      <FPCLINE>                stcd3</FPCLINE>
      <FPCLINE>                FROM kna1</FPCLINE>
      <FPCLINE>                INTO gs_kna1</FPCLINE>
      <FPCLINE>                WHERE kunnr EQ gs_likp-kunnr.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*****Shipping*****</FPCLINE>
      <FPCLINE/>
      <FPCLINE>********** ADDRESS -- SHIP TO AND BILL TO PARTY **********</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>* Added on 11 Aug 2017</FPCLINE>
      <FPCLINE>IF lv_marm_flag = &apos;X&apos; AND gt_vbrp IS NOT INITIAL.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>  SELECT matnr</FPCLINE>
      <FPCLINE>         meinh</FPCLINE>
      <FPCLINE>         umrez</FPCLINE>
      <FPCLINE>         umren</FPCLINE>
      <FPCLINE>         FROM marm</FPCLINE>
      <FPCLINE>         INTO TABLE gt_marm</FPCLINE>
      <FPCLINE>         FOR ALL ENTRIES IN gt_vbrp</FPCLINE>
      <FPCLINE>         WHERE matnr EQ gt_vbrp-matnr.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>****************************************</FPCLINE>
      <FPCLINE>*--Condition records header/item details</FPCLINE>
      <FPCLINE>****************************************</FPCLINE>
      <FPCLINE/>
      <FPCLINE>SELECT  *</FPCLINE>
      <FPCLINE>*  FROM KONV  &quot;Commented by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>  FROM prcd_elements  &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>                INTO TABLE gt_konv</FPCLINE>
      <FPCLINE>                WHERE knumv EQ gs_vbrk-knumv.</FPCLINE>
      <FPCLINE>IF sy-subrc IS INITIAL.</FPCLINE>
      <FPCLINE>  SELECT * FROM konp</FPCLINE>
      <FPCLINE>           INTO TABLE gt_konp</FPCLINE>
      <FPCLINE>           FOR ALL ENTRIES IN gt_konv</FPCLINE>
      <FPCLINE>           WHERE knumh EQ gt_konv-knumh.</FPCLINE>
      <FPCLINE>ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>************************</FPCLINE>
      <FPCLINE>*--Material descriptions</FPCLINE>
      <FPCLINE>*************************</FPCLINE>
      <FPCLINE>SELECT * FROM makt</FPCLINE>
      <FPCLINE>         INTO TABLE lt_makt</FPCLINE>
      <FPCLINE>         FOR ALL ENTRIES IN gt_vbrp</FPCLINE>
      <FPCLINE>         WHERE matnr EQ gt_vbrp-matnr AND</FPCLINE>
      <FPCLINE>               spras EQ sy-langu.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>IF NOT gt_vbrp[] IS INITIAL .</FPCLINE>
      <FPCLINE>  SELECT * FROM lips INTO TABLE lt_lips FOR ALL ENTRIES IN gt_vbrp WHERE vbeln EQ gt_vbrp-vgbel</FPCLINE>
      <FPCLINE>               AND matnr EQ gt_vbrp-matnr AND charg NE &apos; &apos;.</FPCLINE>
      <FPCLINE>ENDIF.</FPCLINE>
      <FPCLINE>******************</FPCLINE>
      <FPCLINE>*--Condition types</FPCLINE>
      <FPCLINE>******************</FPCLINE>
      <FPCLINE/>
      <FPCLINE>CLEAR:ls_excdefn, ls_konv,ls_disc,ls_freight,lv_kalsm,lv_basic.</FPCLINE>
      <FPCLINE>lv_kalsm = gs_vbrk-kalsm.</FPCLINE>
      <FPCLINE>LOOP AT gt_konv INTO ls_konv.&quot; WHERE KPOSN EQ &apos;000001&apos; .</FPCLINE>
      <FPCLINE>  ls_conditions-kschl = ls_konv-kschl.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*--Tax Conditions</FPCLINE>
      <FPCLINE>  IF ls_konv-koaid EQ &apos;D&apos;.   &quot; Tax</FPCLINE>
      <FPCLINE>    CLEAR ls_excdefn.</FPCLINE>
      <FPCLINE>    SELECT SINGLE *                                       &quot;condition name</FPCLINE>
      <FPCLINE>                  FROM j_1iexcdefn</FPCLINE>
      <FPCLINE>                  INTO ls_excdefn</FPCLINE>
      <FPCLINE>                  WHERE kalsm = lv_kalsm      AND</FPCLINE>
      <FPCLINE>                        kschl = ls_konv-kschl.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>    IF ls_excdefn-cond_name EQ &apos;CGSTAR&apos;.                  &quot;CGST</FPCLINE>
      <FPCLINE>      lv_cgst = ls_konv-kschl.</FPCLINE>
      <FPCLINE>    ELSEIF ls_excdefn-cond_name EQ &apos;SGSTAR&apos;.              &quot;SGST</FPCLINE>
      <FPCLINE>      lv_sgst = ls_konv-kschl.</FPCLINE>
      <FPCLINE>    ELSEIF ls_excdefn-cond_name EQ &apos;IGSTAR&apos;.              &quot;IGST</FPCLINE>
      <FPCLINE>      lv_igst = ls_konv-kschl.</FPCLINE>
      <FPCLINE>    ENDIF.</FPCLINE>
      <FPCLINE>  ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>  IF ls_konv-koaid EQ &apos;A&apos; .&quot;AND LS_KONV-KNTYP NE &apos;E&apos;.       &quot;Discount</FPCLINE>
      <FPCLINE>    ls_disc-kschl = ls_konv-kschl.</FPCLINE>
      <FPCLINE>    APPEND ls_disc TO lt_disc.</FPCLINE>
      <FPCLINE>    CLEAR ls_disc.</FPCLINE>
      <FPCLINE>  ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>  IF ls_konv-kntyp EQ &apos;F&apos;.                                &quot;Freight</FPCLINE>
      <FPCLINE>    ls_freight-kschl = ls_konv-kschl.</FPCLINE>
      <FPCLINE>    APPEND ls_freight TO lt_freight.</FPCLINE>
      <FPCLINE>    CLEAR ls_freight.</FPCLINE>
      <FPCLINE>  ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>  IF ls_konv-kntyp EQ &apos;A&apos;.                                &quot;Packing</FPCLINE>
      <FPCLINE>    lv_pack = ls_konv-kschl.</FPCLINE>
      <FPCLINE>  ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>  IF ls_konv-kntyp EQ &apos;C&apos;.                                &quot;Insurance</FPCLINE>
      <FPCLINE>    lv_insur = ls_konv-kschl.</FPCLINE>
      <FPCLINE>  ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>  IF ls_konv-koaid EQ &apos;B&apos;.                                &quot;Basic</FPCLINE>
      <FPCLINE>    lv_basic = ls_konv-kschl.</FPCLINE>
      <FPCLINE>  ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>  APPEND ls_conditions TO lt_conditions.</FPCLINE>
      <FPCLINE>  CLEAR: ls_conditions,ls_konv.</FPCLINE>
      <FPCLINE>ENDLOOP.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*******************************</FPCLINE>
      <FPCLINE>*******Final Table*************</FPCLINE>
      <FPCLINE>*******************************</FPCLINE>
      <FPCLINE>*BREAK-POINT.</FPCLINE>
      <FPCLINE>CLEAR: lv_index,</FPCLINE>
      <FPCLINE>        lv_hsn.</FPCLINE>
      <FPCLINE>CLEAR : row_no.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>&quot;ROW NO = 0 .</FPCLINE>
      <FPCLINE/>
      <FPCLINE>LOOP AT gt_vbrp INTO ls_vbrp WHERE fkimg NE 0.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>  row_no = row_no + 1 .</FPCLINE>
      <FPCLINE/>
      <FPCLINE>ENDLOOP.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>LOOP AT gt_vbrp INTO ls_vbrp WHERE fkimg NE 0.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>*-_Serial number</FPCLINE>
      <FPCLINE>  lv_index  = lv_index + 1.</FPCLINE>
      <FPCLINE>*  CALL FUNCTION &apos;CONVERSION_EXIT_ALPHA_OUTPUT&apos;</FPCLINE>
      <FPCLINE>*  EXPORTING</FPCLINE>
      <FPCLINE>*    INPUT         = LV_INDEX</FPCLINE>
      <FPCLINE>* IMPORTING</FPCLINE>
      <FPCLINE>*   OUTPUT        = LV_INDEX</FPCLINE>
      <FPCLINE>  .</FPCLINE>
      <FPCLINE/>
      <FPCLINE>  ls_item-posnr       = lv_index .</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*  READ TABLE LT_LIPS</FPCLINE>
      <FPCLINE>*  INTO LS_LIPS INDEX LV_INDEX. &quot;#EC CI_NOORDER &quot;&quot;WITH KEY vbeln = ls_vbrp-vgbel matnr = ls_vbrp-matnr indeposnr = ls_vbrp-vgpo</FPCLINE>
      <FPCLINE>  &quot;Added by CSPLABAP during code remediation</FPCLINE>
      <FPCLINE>  READ TABLE lt_lips</FPCLINE>
      <FPCLINE>  INTO ls_lips WITH KEY vbeln = ls_vbrp-vgbel matnr = ls_vbrp-matnr.</FPCLINE>
      <FPCLINE>  IF sy-subrc = 0.</FPCLINE>
      <FPCLINE>    ls_item-charg  = ls_lips-charg.</FPCLINE>
      <FPCLINE>  ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>  ls_item-matnr = ls_vbrp-matnr.</FPCLINE>
      <FPCLINE>*-----Added by Abidulla for Batch number</FPCLINE>
      <FPCLINE>*SELECT SINGLE VBELV FROM VBFA INTO LV_VBELV WHERE VBELN EQ bil_number.</FPCLINE>
      <FPCLINE>*</FPCLINE>
      <FPCLINE>*  SELECT SINGLE  CHARG FROM LIPS INTO LV_CHARG WHERE VBELN EQ LV_VBELV</FPCLINE>
      <FPCLINE>*           AND MATNR EQ LS_VBRP-MATNR</FPCLINE>
      <FPCLINE>*           AND CHARG NE &apos; &apos;.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>*----------------Added by Ram for STO</FPCLINE>
      <FPCLINE>*SELECT SINGLE VBELV FROM VBFA INTO LV_VBELV WHERE VBELN EQ bil_number.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*SELECT EBELN FROM EKBE INTO LV_EBELN WHERE VBELN_ST EQ LV_VBELV.</FPCLINE>
      <FPCLINE>*</FPCLINE>
      <FPCLINE>*  SELECT BSART FROM EKKO INTO LV_BSART WHERE EBELN EQ  LV_EBELN.</FPCLINE>
      <FPCLINE>*------------------------</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*--Material description</FPCLINE>
      <FPCLINE>  CLEAR ls_makt.</FPCLINE>
      <FPCLINE>  READ TABLE lt_makt INTO ls_makt</FPCLINE>
      <FPCLINE>                     WITH KEY matnr = ls_vbrp-matnr.</FPCLINE>
      <FPCLINE>  IF sy-subrc IS INITIAL.</FPCLINE>
      <FPCLINE>*Added by Samsudeen on 02.06.2023</FPCLINE>
      <FPCLINE>    SELECT SINGLE kdmat FROM vbap</FPCLINE>
      <FPCLINE>      INTO @DATA(l_partno)</FPCLINE>
      <FPCLINE>      WHERE vbeln = @ls_vbrp-aubel</FPCLINE>
      <FPCLINE>      AND posnr = @ls_vbrp-aupos.</FPCLINE>
      <FPCLINE>    IF sy-subrc EQ 0.</FPCLINE>
      <FPCLINE>      IF l_partno IS NOT INITIAL.</FPCLINE>
      <FPCLINE>        ls_item-desc  = |{ ls_makt-maktx }( { l_partno } )|.</FPCLINE>
      <FPCLINE>      ELSE.</FPCLINE>
      <FPCLINE>        ls_item-desc  = |{ ls_makt-maktx }|.</FPCLINE>
      <FPCLINE>      ENDIF.</FPCLINE>
      <FPCLINE>    ELSE.</FPCLINE>
      <FPCLINE>      ls_item-desc  = |{ ls_makt-maktx }|.</FPCLINE>
      <FPCLINE>    ENDIF.</FPCLINE>
      <FPCLINE>  ENDIF.</FPCLINE>
      <FPCLINE>*----Total Volume</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>*</FPCLINE>
      <FPCLINE>* IF sy-subrc IS INITIAL.</FPCLINE>
      <FPCLINE>**    ls_item-tax_val = ls_konv-kwert.</FPCLINE>
      <FPCLINE>*</FPCLINE>
      <FPCLINE>*    ls_item-VOLUM1  = ls_vbrp-volum .</FPCLINE>
      <FPCLINE>*</FPCLINE>
      <FPCLINE>*  ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*--HSN number</FPCLINE>
      <FPCLINE>  CLEAR lv_hsn_sac.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>  CALL FUNCTION &apos;J_1IG_GET_HSN_SAC&apos;</FPCLINE>
      <FPCLINE>    EXPORTING</FPCLINE>
      <FPCLINE>      im_matnr   = ls_vbrp-matnr</FPCLINE>
      <FPCLINE>      im_werks   = ls_vbrp-werks</FPCLINE>
      <FPCLINE>    IMPORTING</FPCLINE>
      <FPCLINE>      ex_hsn_sac = lv_hsn_sac.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>  lv_hno = lv_hsn_sac.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>  DATA:knumv TYPE vbrk-knumv.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>  SELECT SINGLE knumv FROM vbrk INTO knumv WHERE vbeln = is_bil_invoice-hd_gen-bil_number.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*  SELECT SINGLE KNUMV FROM VBRK INTO KNUMV WHERE VBELN = &apos;0101000002&apos;.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*READ TABLE gt_konv INTO ls_konv INDEX 1.</FPCLINE>
      <FPCLINE>  IF gs_vbrk-fkart = &apos;YSTO&apos;.</FPCLINE>
      <FPCLINE>    READ TABLE gt_konv INTO ls_konv</FPCLINE>
      <FPCLINE>   WITH KEY kposn = ls_vbrp-posnr knumv = knumv kschl = &apos;ZTRP&apos;.</FPCLINE>
      <FPCLINE>    IF sy-subrc IS INITIAL.</FPCLINE>
      <FPCLINE>      ls_item-total    = ls_konv-kwert .</FPCLINE>
      <FPCLINE>    ENDIF.</FPCLINE>
      <FPCLINE>  ELSE.</FPCLINE>
      <FPCLINE>    &quot;COMMENETD START BY KANNE ON 07.03.2022</FPCLINE>
      <FPCLINE>*  READ TABLE GT_KONV INTO LS_KONV</FPCLINE>
      <FPCLINE>*   WITH KEY KPOSN = LS_VBRP-POSNR KNUMV = KNUMV.&quot;*   KSCHL = &apos;PR00&apos;.</FPCLINE>
      <FPCLINE>*   IF SY-SUBRC IS INITIAL.</FPCLINE>
      <FPCLINE>*     IF GS_VBRK-FKART NE &apos;YRF2&apos;.</FPCLINE>
      <FPCLINE>*    LS_ITEM-TOTAL    = LS_KONV-KWERT .</FPCLINE>
      <FPCLINE>*    &quot; LS_ITEM-RATE = LS_ITEM-TOTAL / LS_VBRP-FKIMG.</FPCLINE>
      <FPCLINE>*    ENDIF.</FPCLINE>
      <FPCLINE>* if LS_KONV-KWERT  is  INITIAL.</FPCLINE>
      <FPCLINE>*  READ TABLE GT_KONV INTO LS_KONV</FPCLINE>
      <FPCLINE>*   WITH KEY KPOSN = LS_VBRP-POSNR KNUMV = KNUMV  KSCHL = &apos;PR00&apos;.</FPCLINE>
      <FPCLINE>*   IF SY-SUBRC IS INITIAL.</FPCLINE>
      <FPCLINE>*     IF GS_VBRK-FKART NE &apos;YRF2&apos;.</FPCLINE>
      <FPCLINE>*    LS_ITEM-TOTAL    = LS_KONV-KWERT .</FPCLINE>
      <FPCLINE>    &quot; LS_ITEM-RATE = LS_ITEM-TOTAL / LS_VBRP-FKIMG.</FPCLINE>
      <FPCLINE>*    ENDIF.</FPCLINE>
      <FPCLINE>*  ENDIF.</FPCLINE>
      <FPCLINE>*  ENDIF.</FPCLINE>
      <FPCLINE>    &quot;COMMENETD END BY KANNE ON 07.03.2022</FPCLINE>
      <FPCLINE>    &quot;ADD START BY KANNE ON 07.03.2022</FPCLINE>
      <FPCLINE>    READ TABLE gt_konv INTO ls_konv</FPCLINE>
      <FPCLINE>               WITH KEY kposn = ls_vbrp-posnr knumv = knumv  kschl = &apos;PR00&apos;.</FPCLINE>
      <FPCLINE>    IF sy-subrc IS INITIAL.</FPCLINE>
      <FPCLINE>      IF gs_vbrk-fkart NE &apos;YRF2&apos;.</FPCLINE>
      <FPCLINE>        ls_item-total    = ls_konv-kwert .</FPCLINE>
      <FPCLINE>      ENDIF.</FPCLINE>
      <FPCLINE>      &quot;ADD START BY KANNE ON 08.03.2022</FPCLINE>
      <FPCLINE>    ELSEIF sy-subrc &lt;&gt; 0.</FPCLINE>
      <FPCLINE>      READ TABLE gt_konv INTO ls_konv</FPCLINE>
      <FPCLINE>                 WITH KEY kposn = ls_vbrp-posnr knumv = knumv  kschl = &apos;PB01&apos;.</FPCLINE>
      <FPCLINE>      IF sy-subrc IS INITIAL.</FPCLINE>
      <FPCLINE>        IF gs_vbrk-fkart NE &apos;YRF2&apos;.</FPCLINE>
      <FPCLINE>          ls_item-total    = ls_konv-kwert .</FPCLINE>
      <FPCLINE>        ENDIF.</FPCLINE>
      <FPCLINE>      ELSEIF sy-subrc &lt;&gt; 0.</FPCLINE>
      <FPCLINE>        READ TABLE gt_konv INTO ls_konv</FPCLINE>
      <FPCLINE>                   WITH KEY kposn = ls_vbrp-posnr knumv = knumv.&quot;*   KSCHL = &apos;PR00&apos;.</FPCLINE>
      <FPCLINE>        IF sy-subrc IS INITIAL.</FPCLINE>
      <FPCLINE>          IF gs_vbrk-fkart NE &apos;YRF2&apos;.</FPCLINE>
      <FPCLINE>            ls_item-total    = ls_konv-kwert .</FPCLINE>
      <FPCLINE>          ENDIF.</FPCLINE>
      <FPCLINE>        ENDIF.</FPCLINE>
      <FPCLINE>      ENDIF.</FPCLINE>
      <FPCLINE>      &quot;ADD END BY KANNE ON 08.03.2022</FPCLINE>
      <FPCLINE>    ENDIF.</FPCLINE>
      <FPCLINE>    &quot;ADD END BY KANNE ON 07.03.2022</FPCLINE>
      <FPCLINE/>
      <FPCLINE>  ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>  ls_item-hsn         = lv_hsn_sac.                       &quot;HSN/SAC</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*  IF .</FPCLINE>
      <FPCLINE>*</FPCLINE>
      <FPCLINE>*  ELSE.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>* Added on 11 - AUG - 2017</FPCLINE>
      <FPCLINE/>
      <FPCLINE>  IF lv_marm_flag = &apos;X&apos;.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*    LOOP AT GT_MARM INTO GS_MARM WHERE MATNR = LS_VBRP-MATNR.</FPCLINE>
      <FPCLINE>*    ENDLOOP.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>    READ TABLE gt_marm INTO gs_marm WITH KEY matnr = ls_vbrp-matnr meinh = &apos;L&apos;.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>    IF sy-subrc EQ 0.</FPCLINE>
      <FPCLINE>      ls_item-fkimg = ls_vbrp-fkimg * ( gs_marm-umren / gs_marm-umrez ).</FPCLINE>
      <FPCLINE>      ls_item-rate = ls_item-total / ls_item-fkimg .</FPCLINE>
      <FPCLINE>      gs_total-fkimg = gs_total-fkimg + ls_vbrp-fkimg.&quot;Total Quantity of all line items</FPCLINE>
      <FPCLINE>      lv_ttot_qty = lv_ttot_qty + ls_item-fkimg.</FPCLINE>
      <FPCLINE>      ls_item-vrkme = gs_marm-meinh.</FPCLINE>
      <FPCLINE>    ELSE.</FPCLINE>
      <FPCLINE>      ls_item-fkimg = ls_vbrp-fkimg.</FPCLINE>
      <FPCLINE>      ls_item-rate = ls_item-total / ls_vbrp-fkimg.</FPCLINE>
      <FPCLINE>      gs_total-fkimg = gs_total-fkimg + ls_item-fkimg.&quot;Total Quantity of all line items</FPCLINE>
      <FPCLINE>      lv_ttot_qty = lv_ttot_qty + ls_item-fkimg.</FPCLINE>
      <FPCLINE>      ls_item-vrkme = ls_vbrp-vrkme.</FPCLINE>
      <FPCLINE>    ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>  ELSE.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>    ls_item-fkimg = ls_vbrp-fkimg.</FPCLINE>
      <FPCLINE>    ls_item-rate = ls_item-total / ls_vbrp-fkimg.</FPCLINE>
      <FPCLINE>    gs_total-fkimg = gs_total-fkimg + ls_item-fkimg.&quot;Total Quantity of all line items</FPCLINE>
      <FPCLINE>    lv_ttot_qty = lv_ttot_qty + ls_item-fkimg.</FPCLINE>
      <FPCLINE>    ls_item-vrkme = ls_vbrp-vrkme.</FPCLINE>
      <FPCLINE>  ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>*  ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>  &quot;Quantity</FPCLINE>
      <FPCLINE/>
      <FPCLINE>  &quot; Unit of Measurments corrected</FPCLINE>
      <FPCLINE>*  CALL FUNCTION &apos;CONVERSION_EXIT_CUNIT_OUTPUT&apos;</FPCLINE>
      <FPCLINE>*    EXPORTING</FPCLINE>
      <FPCLINE>*      INPUT          = ls_vbrp-vrkme</FPCLINE>
      <FPCLINE>*      LANGUAGE       = SY-LANGU</FPCLINE>
      <FPCLINE>*    IMPORTING</FPCLINE>
      <FPCLINE>**     LONG_TEXT      =</FPCLINE>
      <FPCLINE>*      OUTPUT         = ls_item-unit</FPCLINE>
      <FPCLINE>**     SHORT_TEXT     =</FPCLINE>
      <FPCLINE>*    EXCEPTIONS</FPCLINE>
      <FPCLINE>*      UNIT_NOT_FOUND = 1</FPCLINE>
      <FPCLINE>*      OTHERS         = 2.</FPCLINE>
      <FPCLINE>*  IF SY-SUBRC &lt;&gt; 0.</FPCLINE>
      <FPCLINE>** Implement suitable error handling here</FPCLINE>
      <FPCLINE>*  ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*  ls_item-vrkme        = ls_item-unit.                    &quot;UOM</FPCLINE>
      <FPCLINE>*  LS_ITEM-VRKME = LS_VBRP-VRKME.</FPCLINE>
      <FPCLINE>  ls_item-unit = ls_vbrp-vrkme.</FPCLINE>
      <FPCLINE>  &quot;LS_ITEM-TAX_VAL = LS_VBRP-NETWR.</FPCLINE>
      <FPCLINE>  IF gs_vbrk-fkart EQ &apos;YSTO&apos;</FPCLINE>
      <FPCLINE>    OR gs_vbrk-fkart EQ &apos;YBFS&apos; .</FPCLINE>
      <FPCLINE>    ls_item-tax_val = ls_vbrp-netwr. &quot;added on 13/3</FPCLINE>
      <FPCLINE>  ENDIF.</FPCLINE>
      <FPCLINE>*  ls_item-total       = ls_vbrp-KZWI1.                    &quot;Total</FPCLINE>
      <FPCLINE>  gs_total-total = gs_total-total + ls_item-total.   &quot;added on 13/9     &quot;Total(all line items)(before discount)</FPCLINE>
      <FPCLINE>  &quot;GS_TOTAL-TAX_VAL = GS_TOTAL-TAX_VAL + LS_ITEM-TAX_VAL. &quot;17/08 Commeted for correction  &quot;&quot; total taxable value(after discount)</FPCLINE>
      <FPCLINE>  ls_item-volum1  = ls_vbrp-volum .</FPCLINE>
      <FPCLINE>*****Added by Abidulla</FPCLINE>
      <FPCLINE>*    LS_ITEM-RATE = ls_item-total / ls_item-FKIMG.</FPCLINE>
      <FPCLINE>*  GS_TOTAL-FKIMG = GS_TOTAL-FKIMG + LS_ITEM-FKIMG.&quot;Total Quantity of all line items</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*  GS_TOTAL-TAX_VAL = GS_TOTAL-TAX_VAL + ls_item-TAX_VAL.</FPCLINE>
      <FPCLINE>*-Discount</FPCLINE>
      <FPCLINE>  CLEAR ls_disc.</FPCLINE>
      <FPCLINE>  CLEAR  tot_disc.</FPCLINE>
      <FPCLINE>  SORT lt_disc BY kschl .</FPCLINE>
      <FPCLINE>  DELETE ADJACENT DUPLICATES FROM lt_disc COMPARING kschl .</FPCLINE>
      <FPCLINE/>
      <FPCLINE>  LOOP AT lt_disc INTO ls_disc.</FPCLINE>
      <FPCLINE>    IF ls_disc-kschl = &apos;Y004&apos; OR  ls_disc-kschl = &apos;ZCAD&apos; OR</FPCLINE>
      <FPCLINE>      ls_disc-kschl = &apos;YB04&apos;.</FPCLINE>
      <FPCLINE>      READ TABLE gt_konv INTO ls_konv</FPCLINE>
      <FPCLINE>                           WITH KEY kschl = ls_disc-kschl</FPCLINE>
      <FPCLINE>                                    kposn = ls_vbrp-posnr.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>      IF sy-subrc IS INITIAL AND ls_konv-kwert LT &apos;0&apos;.</FPCLINE>
      <FPCLINE>***********alteration @ PR@$@TH ON 31.12.2018</FPCLINE>
      <FPCLINE>        ls_item-discount = ls_item-discount + ls_konv-kwert. &quot;LS_ITEM-DISCOUNT +</FPCLINE>
      <FPCLINE>*        LV_DISC  = LS_KONV-KBETR / 10.&quot;Commented by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>        lv_disc  = ls_konv-kbetr. &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>        gs_total-discount = gs_total-discount + ls_konv-kwert .&quot;LS_ITEM-DISCOUNT.</FPCLINE>
      <FPCLINE>*      ls_item-discount =  ls_konv-kwert.</FPCLINE>
      <FPCLINE>********Added by Abidulla</FPCLINE>
      <FPCLINE>*      BREAK-POINT.</FPCLINE>
      <FPCLINE>*      TOT_DISC = TOT_DISC + ls_item-discount.&quot;Total discount of all items</FPCLINE>
      <FPCLINE>      ENDIF.</FPCLINE>
      <FPCLINE>    ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>**************</FPCLINE>
      <FPCLINE>*--Rebate1</FPCLINE>
      <FPCLINE>    IF ls_disc-kschl = &apos;Y005&apos; OR ls_disc-kschl = &apos;Y006&apos;</FPCLINE>
      <FPCLINE>      OR ls_disc-kschl = &apos;YBSD&apos;  OR ls_disc-kschl = &apos;Z011&apos;</FPCLINE>
      <FPCLINE>      OR ls_disc-kschl = &apos;Z012&apos;.</FPCLINE>
      <FPCLINE>      &quot;   BREAK-POINT.</FPCLINE>
      <FPCLINE>*      READ TABLE GT_KONV INTO LS_KONV</FPCLINE>
      <FPCLINE>*                           WITH KEY KSCHL = LS_DISC-KSCHL</FPCLINE>
      <FPCLINE>*                                    KPOSN = LS_VBRP-POSNR.</FPCLINE>
      <FPCLINE>      LOOP AT gt_konv INTO ls_konv WHERE kschl = ls_disc-kschl AND</FPCLINE>
      <FPCLINE>                                         kposn = ls_vbrp-posnr .&quot;and</FPCLINE>
      <FPCLINE>        &quot; IF SY-SUBRC IS INITIAL AND LS_KONV-KWERT LT &apos;0&apos;.</FPCLINE>
      <FPCLINE>        ls_item-r1 =  ls_item-r1  + ls_konv-kwert . &quot;LS_ITEM-R1</FPCLINE>
      <FPCLINE>        &quot;  endif.</FPCLINE>
      <FPCLINE>        &quot;   lv_dis = lv_dis + LS_KONV-KWERT .</FPCLINE>
      <FPCLINE>        &quot; GS_TOTAL-R1 =  GS_TOTAL-R1 + LS_ITEM-R1.</FPCLINE>
      <FPCLINE>      ENDLOOP.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>      &quot; GS_TOTAL-R1 = GS_TOTAL-R1 + LS_ITEM-R1.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>*      LV_R1  = ls_konv-kbetr / 10.</FPCLINE>
      <FPCLINE>*      ls_item-discount =  ls_konv-kwert.</FPCLINE>
      <FPCLINE>********Added by Abidulla</FPCLINE>
      <FPCLINE>*      BREAK-POINT.</FPCLINE>
      <FPCLINE>*      TOT_DISC = TOT_DISC + ls_item-discount.&quot;Total discount of all items</FPCLINE>
      <FPCLINE/>
      <FPCLINE>      &quot; ENDIF.</FPCLINE>
      <FPCLINE>    ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*--Rebate2</FPCLINE>
      <FPCLINE>    IF ls_disc-kschl = &apos;Y007&apos; OR ls_disc-kschl = &apos;ZPRB&apos;</FPCLINE>
      <FPCLINE>      OR ls_disc-kschl = &apos;Z008&apos; .</FPCLINE>
      <FPCLINE>      READ TABLE gt_konv INTO ls_konv</FPCLINE>
      <FPCLINE>                           WITH KEY kschl = ls_disc-kschl</FPCLINE>
      <FPCLINE>                                    kposn = ls_vbrp-posnr.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>      IF sy-subrc IS INITIAL AND ls_konv-kwert LT &apos;0&apos;.</FPCLINE>
      <FPCLINE>        ls_item-r2 =  ls_konv-kwert  . &quot;Commented by ram LS_ITEM-R2 +</FPCLINE>
      <FPCLINE>        ls_item-r3 = ls_item-r3 + ls_konv-kwert .</FPCLINE>
      <FPCLINE>*       LV_R2  = ls_konv-kbetr / 10.</FPCLINE>
      <FPCLINE>*      ls_item-discount =  ls_konv-kwert.</FPCLINE>
      <FPCLINE>********Added by Abidulla</FPCLINE>
      <FPCLINE>*      BREAK-POINT.</FPCLINE>
      <FPCLINE>*      TOT_DISC = TOT_DISC + ls_item-discount.&quot;Total discount of all items</FPCLINE>
      <FPCLINE>        gs_total-r2 = gs_total-r2 + ls_item-r2.</FPCLINE>
      <FPCLINE>      ENDIF.</FPCLINE>
      <FPCLINE>    ENDIF.</FPCLINE>
      <FPCLINE>************Coded By Prabhu starts**********************</FPCLINE>
      <FPCLINE>    IF ls_disc-kschl = &apos;Y008&apos; OR ls_disc-kschl = &apos;Z009&apos;.</FPCLINE>
      <FPCLINE>      READ TABLE gt_konv INTO ls_konv</FPCLINE>
      <FPCLINE>                           WITH KEY kschl = ls_disc-kschl</FPCLINE>
      <FPCLINE>                                    kposn = ls_vbrp-posnr.</FPCLINE>
      <FPCLINE>      IF sy-subrc IS INITIAL AND ls_konv-kwert LT &apos;0&apos;.</FPCLINE>
      <FPCLINE>*        LS_ITEM-R4 = LS_KONV-KWERT.</FPCLINE>
      <FPCLINE>        ls_item-r4 = ls_item-r4 + ls_konv-kwert.</FPCLINE>
      <FPCLINE>        gs_total-r4 = gs_total-r4 + ls_item-r4.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>      ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>    ENDIF.</FPCLINE>
      <FPCLINE>************Coded By Prabhu end**********************</FPCLINE>
      <FPCLINE>    lv_dr1r2 = ls_item-discount + ls_item-r1 + ls_item-r3 + ls_item-r4.</FPCLINE>
      <FPCLINE>    &quot; LV_TOT_TAX = GS_TOTAL-DISCOUNT + GS_TOTAL-R1 + GS_TOTAL-R2 + GS_TOTAL-R4.</FPCLINE>
      <FPCLINE>    lv_tot_tax = gs_total-discount + gs_total-r2 + gs_total-r4.</FPCLINE>
      <FPCLINE>    ls_item-tax_val =  ls_item-total + lv_dr1r2.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>    CLEAR: ls_disc,</FPCLINE>
      <FPCLINE>           lv_dr1r2.</FPCLINE>
      <FPCLINE>  ENDLOOP.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>  gs_total-r1 = gs_total-r1 + ls_item-r1 .</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>  IF lt_disc IS INITIAL.</FPCLINE>
      <FPCLINE>    ls_item-tax_val = ls_item-total .</FPCLINE>
      <FPCLINE>  ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>  gs_total-tax_val = gs_total-total + lv_tot_tax + gs_total-r1.</FPCLINE>
      <FPCLINE>  CLEAR lv_tot_tax.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>*--Taxable value</FPCLINE>
      <FPCLINE>*clear lv_basic.</FPCLINE>
      <FPCLINE>*lv_basic = &apos;PR00&apos;.</FPCLINE>
      <FPCLINE>*  READ TABLE gt_konv INTO ls_konv</FPCLINE>
      <FPCLINE>*                       WITH KEY kschl = lv_basic</FPCLINE>
      <FPCLINE>*                                kposn = ls_vbrp-posnr.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*  IF sy-subrc IS INITIAL.</FPCLINE>
      <FPCLINE>*    ls_item-tax_val = ls_konv-kwert.</FPCLINE>
      <FPCLINE>*--Rate per item</FPCLINE>
      <FPCLINE>*    ls_item-rate    = ls_konv-kbetr .</FPCLINE>
      <FPCLINE>*----Total Volume</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*    ls_item-VOLUM1  = ls_vbrp-volum .</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>*  ENDIF.</FPCLINE>
      <FPCLINE>*  IF LS_ITEM-FKIMG IS NOT INITIAL.</FPCLINE>
      <FPCLINE>*  LS_ITEM-RATE = ls_item-total / ls_item-FKIMG.</FPCLINE>
      <FPCLINE>*  ENDIF.</FPCLINE>
      <FPCLINE>  gs_total-volum1 = gs_total-volum1 +  ls_vbrp-volum.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>*--Freight</FPCLINE>
      <FPCLINE>  CLEAR ls_freight.</FPCLINE>
      <FPCLINE>  LOOP AT lt_freight INTO ls_freight .</FPCLINE>
      <FPCLINE>    READ TABLE gt_konv INTO ls_konv</FPCLINE>
      <FPCLINE>                         WITH KEY kschl = ls_freight-kschl</FPCLINE>
      <FPCLINE>                                  kposn = ls_vbrp-posnr.</FPCLINE>
      <FPCLINE>    IF sy-subrc IS INITIAL.</FPCLINE>
      <FPCLINE>      gv_freight = gv_freight + ls_konv-kwert.</FPCLINE>
      <FPCLINE>    ENDIF.</FPCLINE>
      <FPCLINE>    CLEAR ls_freight.</FPCLINE>
      <FPCLINE>  ENDLOOP.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>*--Insurance</FPCLINE>
      <FPCLINE>  READ TABLE gt_konv INTO ls_konv</FPCLINE>
      <FPCLINE>                     WITH KEY kschl = lv_insur</FPCLINE>
      <FPCLINE>                              kposn = ls_vbrp-posnr.</FPCLINE>
      <FPCLINE>  IF sy-subrc IS INITIAL.</FPCLINE>
      <FPCLINE>    gv_insurance = gv_insurance + ls_konv-kwert.</FPCLINE>
      <FPCLINE>  ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*--Packing &amp; Forwarding charges</FPCLINE>
      <FPCLINE>  READ TABLE gt_konv INTO ls_konv</FPCLINE>
      <FPCLINE>                     WITH KEY kschl = lv_pack</FPCLINE>
      <FPCLINE>                              kposn = ls_vbrp-posnr.</FPCLINE>
      <FPCLINE>  IF sy-subrc IS INITIAL.</FPCLINE>
      <FPCLINE>    gv_packing = gv_packing + ls_konv-kwert.</FPCLINE>
      <FPCLINE>  ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>*---Calculation for CGST</FPCLINE>
      <FPCLINE>  CLEAR ls_konv.</FPCLINE>
      <FPCLINE>  lv_cgst = &apos;JOCG&apos;. &quot;Added by Abidulla</FPCLINE>
      <FPCLINE>  READ TABLE gt_konv INTO ls_konv</FPCLINE>
      <FPCLINE>                     WITH KEY kschl = lv_cgst</FPCLINE>
      <FPCLINE>                              kposn = ls_vbrp-posnr.</FPCLINE>
      <FPCLINE>  IF sy-subrc IS INITIAL.</FPCLINE>
      <FPCLINE>*    LS_ITEM-CGST_RATE   = LS_KONV-KBETR / 10.  &quot;Commented by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>    ls_item-cgst_rate   = ls_konv-kbetr.  &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>    ls_item-cgst_val    = ls_konv-kwert.</FPCLINE>
      <FPCLINE>    gs_total-cgst = gs_total-cgst + ls_konv-kwert.</FPCLINE>
      <FPCLINE>    lv_cgstp =  ls_item-cgst_rate . &quot;&quot;&quot; ADDED BY BHARATH</FPCLINE>
      <FPCLINE>  ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*--Calculation for SGST</FPCLINE>
      <FPCLINE>  CLEAR ls_konv.</FPCLINE>
      <FPCLINE>  lv_sgst = &apos;JOSG&apos;.</FPCLINE>
      <FPCLINE>  READ TABLE gt_konv INTO ls_konv</FPCLINE>
      <FPCLINE>                     WITH KEY kschl = lv_sgst</FPCLINE>
      <FPCLINE>                              kposn = ls_vbrp-posnr.</FPCLINE>
      <FPCLINE>  IF sy-subrc IS INITIAL.</FPCLINE>
      <FPCLINE>*    LS_ITEM-SGST_RATE    = LS_KONV-KBETR / 10. &quot;Commented by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>    ls_item-sgst_rate    = ls_konv-kbetr. &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>    ls_item-sgst_val     = ls_konv-kwert.</FPCLINE>
      <FPCLINE>    gs_total-sgst = gs_total-sgst + ls_konv-kwert.</FPCLINE>
      <FPCLINE>    lv_sgstp =  ls_item-sgst_rate .</FPCLINE>
      <FPCLINE>  ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*--calculation for IGST</FPCLINE>
      <FPCLINE>  CLEAR ls_konv.</FPCLINE>
      <FPCLINE>  lv_igst = &apos;JOIG&apos;.</FPCLINE>
      <FPCLINE>  READ TABLE gt_konv INTO ls_konv</FPCLINE>
      <FPCLINE>                     WITH KEY kschl = lv_igst</FPCLINE>
      <FPCLINE>                              kposn = ls_vbrp-posnr.</FPCLINE>
      <FPCLINE>  IF sy-subrc IS INITIAL.</FPCLINE>
      <FPCLINE>*    LS_ITEM-IGST_RATE   = LS_KONV-KBETR / 10.  &quot;Commented by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>    ls_item-igst_rate   = ls_konv-kbetr.  &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>    ls_item-igst_val    = ls_konv-kwert.</FPCLINE>
      <FPCLINE>    gs_total-igst = gs_total-igst + ls_konv-kwert.</FPCLINE>
      <FPCLINE>    lv_igstp =  ls_item-igst_rate .</FPCLINE>
      <FPCLINE>  ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*Added by //DEVK921432 on 12/10/2020---&gt;&gt;&gt;</FPCLINE>
      <FPCLINE>*---Calculation for TCS</FPCLINE>
      <FPCLINE>  CLEAR ls_konv.</FPCLINE>
      <FPCLINE>  lv_tcsc = &apos;JTC1&apos;.</FPCLINE>
      <FPCLINE>  READ TABLE gt_konv INTO ls_konv</FPCLINE>
      <FPCLINE>                     WITH KEY kschl = lv_tcsc</FPCLINE>
      <FPCLINE>                              kposn = ls_vbrp-posnr.</FPCLINE>
      <FPCLINE>  IF sy-subrc IS INITIAL.</FPCLINE>
      <FPCLINE>*    LS_ITEM-TCS_RATE   = LS_KONV-KBETR / 10. &quot;Commented by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>    ls_item-tcs_rate   = ls_konv-kbetr. &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>    ls_item-tcs_val    = ls_konv-kwert.</FPCLINE>
      <FPCLINE>    gs_total-tcsv = gs_total-tcsv + ls_konv-kwert.</FPCLINE>
      <FPCLINE>*    LV_TCSP =  LS_KONV-KBETR / 10 .  &quot;Commented by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>    lv_tcsp =  ls_konv-kbetr. &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>    lv_tcsprc = lv_tcsp.</FPCLINE>
      <FPCLINE>  ENDIF.</FPCLINE>
      <FPCLINE>* Added by Samsudeen M on 17.03.2023</FPCLINE>
      <FPCLINE>  CLEAR ls_konv.</FPCLINE>
      <FPCLINE>  DATA(lv_tcs) = &apos;Y001&apos;.</FPCLINE>
      <FPCLINE>  READ TABLE gt_konv INTO ls_konv</FPCLINE>
      <FPCLINE>                     WITH KEY kschl = lv_tcs</FPCLINE>
      <FPCLINE>                              kposn = ls_vbrp-posnr.</FPCLINE>
      <FPCLINE>  IF sy-subrc IS INITIAL.</FPCLINE>
      <FPCLINE>*    LS_ITEM-TCS_RATE   = LS_KONV-KBETR / 10. &quot;Commented by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>    ls_item-tcs_rate   = ls_konv-kbetr. &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>    ls_item-tcs_val    = ls_konv-kwert.</FPCLINE>
      <FPCLINE>    gs_total-tcsv = gs_total-tcsv + ls_konv-kwert.</FPCLINE>
      <FPCLINE>*    LV_TCSP =  LS_KONV-KBETR / 10 .  &quot;Commented by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>    lv_tcsp =  ls_konv-kbetr. &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>    lv_tcsprc = lv_tcsp.</FPCLINE>
      <FPCLINE>  ENDIF.</FPCLINE>
      <FPCLINE>*---Calculation for Rounding off</FPCLINE>
      <FPCLINE>  CLEAR ls_konv.</FPCLINE>
      <FPCLINE>  lv_round = &apos;YDIF&apos;.</FPCLINE>
      <FPCLINE>  READ TABLE gt_konv INTO ls_konv</FPCLINE>
      <FPCLINE>                     WITH KEY kschl = lv_round</FPCLINE>
      <FPCLINE>                              kposn = ls_vbrp-posnr.</FPCLINE>
      <FPCLINE>  IF sy-subrc IS INITIAL.</FPCLINE>
      <FPCLINE>    lv_round_v = lv_round_v + ls_konv-kwert.</FPCLINE>
      <FPCLINE>    gv_round_off = lv_round_v.</FPCLINE>
      <FPCLINE>  ENDIF.</FPCLINE>
      <FPCLINE>*Ended by //DEVK921432 on 12/10/2020---&gt;&gt;&gt;</FPCLINE>
      <FPCLINE/>
      <FPCLINE>  DATA: lv_per  TYPE p,</FPCLINE>
      <FPCLINE>        lv_rate TYPE kwert.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>  DESCRIBE TABLE gt_hsn LINES lv_hsn.</FPCLINE>
      <FPCLINE>  IF lv_hsn GT 0.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*    LV_IND = LV_INDEX - 1.</FPCLINE>
      <FPCLINE>    READ TABLE gt_hsn INTO gs_hsn WITH KEY hsn = lv_hno .</FPCLINE>
      <FPCLINE>*                                           PER = LS_ITEM-IGST_RATE .&quot;INDEX LV_IND.</FPCLINE>
      <FPCLINE>    lv_ind = sy-tabix.</FPCLINE>
      <FPCLINE>    IF sy-subrc EQ 0.&quot; AND GS_HSN-HSN EQ LV_HNO.</FPCLINE>
      <FPCLINE>      gs_hsn-rno = lv_ind.</FPCLINE>
      <FPCLINE>      gs_hsn-hsn = lv_hno.</FPCLINE>
      <FPCLINE>      gs_hsn-qty = gs_hsn-qty + ls_item-fkimg.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>      IF ls_item-vrkme EQ &apos;BT&apos;.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*        SELECT SINGLE UMREN &quot;Commented by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>        SELECT umren &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>          INTO lv_umren</FPCLINE>
      <FPCLINE>          FROM marm</FPCLINE>
      <FPCLINE>          UP TO 1 ROWS  &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>          WHERE matnr = gs_hsn-matnr</FPCLINE>
      <FPCLINE>          ORDER BY PRIMARY KEY.	&quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>        ENDSELECT.  &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE/>
      <FPCLINE>        IF sy-subrc EQ 0.</FPCLINE>
      <FPCLINE>          gs_hsn-qty = gs_hsn-qty / lv_umren .</FPCLINE>
      <FPCLINE>        ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>      ELSE.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>        gs_hsn-unit = ls_item-vrkme.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>      ENDIF.</FPCLINE>
      <FPCLINE>      gs_hsn-per = gs_hsn-per.</FPCLINE>
      <FPCLINE>      &quot;GS_HSN-PER = LV_PER.&quot;GS_HSN-PER + LS_ITEM-CGST_RATE + LS_ITEM-SGST_RATE + LS_ITEM-IGST_RATE.</FPCLINE>
      <FPCLINE>      &quot;commented by ram on 21/2</FPCLINE>
      <FPCLINE>      &quot; GS_HSN-RATE = LV_RATE. &quot;GS_HSN-RATE + LS_ITEM-CGST_VAL + LS_ITEM-SGST_VAL + LS_ITEM-IGST_VAL.</FPCLINE>
      <FPCLINE>      &quot;ended by ram on 21/2</FPCLINE>
      <FPCLINE>      gs_hsn-rate = gs_hsn-rate + ls_item-cgst_val + ls_item-sgst_val + ls_item-igst_val.</FPCLINE>
      <FPCLINE>      gs_hsn-tax_val = gs_hsn-tax_val + ls_item-tax_val.</FPCLINE>
      <FPCLINE>      IF gs_hsn-tax_val EQ &apos;0&apos; .</FPCLINE>
      <FPCLINE>        gs_hsn-tax_val = gs_hsn-tax_val + ls_item-total.</FPCLINE>
      <FPCLINE>      ENDIF.</FPCLINE>
      <FPCLINE>      gs_hsn-matnr = ls_item-matnr.</FPCLINE>
      <FPCLINE>      gs_hsn-tcs_rate = ls_item-tcs_rate.   &quot;Added by //DEVK921432 on 15/10/2020</FPCLINE>
      <FPCLINE>      gs_hsn-tcs_val = gs_hsn-tcs_val + ls_item-tcs_val.   &quot;Added by //DEVK921432 //DEVK921471 on 15/10/2020</FPCLINE>
      <FPCLINE/>
      <FPCLINE>      MODIFY gt_hsn FROM gs_hsn INDEX lv_ind.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>    ELSE.</FPCLINE>
      <FPCLINE>      gs_hsn-rno = lv_index.</FPCLINE>
      <FPCLINE>      gs_hsn-hsn = lv_hno.</FPCLINE>
      <FPCLINE>      gs_hsn-qty = ls_item-fkimg.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>      IF ls_item-vrkme EQ &apos;BT&apos;.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*        SELECT SINGLE UMREN &quot;Commented by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>        SELECT umren &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>          INTO lv_umren</FPCLINE>
      <FPCLINE>          FROM marm</FPCLINE>
      <FPCLINE>          UP TO 1 ROWS  &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>          WHERE matnr = gs_hsn-matnr</FPCLINE>
      <FPCLINE>          ORDER BY PRIMARY KEY.	&quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>        ENDSELECT.  &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>        IF sy-subrc EQ 0.</FPCLINE>
      <FPCLINE>          gs_hsn-qty = gs_hsn-qty / lv_umren .</FPCLINE>
      <FPCLINE>        ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>      ELSE.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>        gs_hsn-unit = ls_item-vrkme.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>      ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>      gs_hsn-per = ls_item-cgst_rate + ls_item-sgst_rate + ls_item-igst_rate.</FPCLINE>
      <FPCLINE>      lv_per = gs_hsn-per.</FPCLINE>
      <FPCLINE>      gs_hsn-rate = ls_item-cgst_val + ls_item-sgst_val + ls_item-igst_val.</FPCLINE>
      <FPCLINE>      &quot;commented by ram on 21/2</FPCLINE>
      <FPCLINE>      &quot;LV_RATE = GS_HSN-RATE.</FPCLINE>
      <FPCLINE>      &quot;ended by ram on 21/2</FPCLINE>
      <FPCLINE/>
      <FPCLINE>      gs_hsn-tax_val = ls_item-tax_val.</FPCLINE>
      <FPCLINE>      gs_hsn-matnr = ls_item-matnr.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>      gs_hsn-tcs_rate = ls_item-tcs_rate.   &quot;Added by //DEVK921432 on 12/10/2020</FPCLINE>
      <FPCLINE>      gs_hsn-tcs_val = ls_item-tcs_val.   &quot;Added by //DEVK921432 on 12/10/2020</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>      APPEND gs_hsn TO gt_hsn.</FPCLINE>
      <FPCLINE>      &quot; CLEAR : LV_PER .</FPCLINE>
      <FPCLINE>    ENDIF.</FPCLINE>
      <FPCLINE>  ELSE.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>    gs_hsn-rno = lv_index.</FPCLINE>
      <FPCLINE>    gs_hsn-hsn = lv_hno.</FPCLINE>
      <FPCLINE>    gs_hsn-qty = ls_item-fkimg.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>    IF ls_item-vrkme EQ &apos;BT&apos;.</FPCLINE>
      <FPCLINE>*      SELECT SINGLE UMREN &quot;Commented by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>      SELECT umren &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>        INTO lv_umren</FPCLINE>
      <FPCLINE>        FROM marm</FPCLINE>
      <FPCLINE>        UP TO 1 ROWS  &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>        WHERE matnr = gs_hsn-matnr</FPCLINE>
      <FPCLINE>        ORDER BY PRIMARY KEY.	&quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>      ENDSELECT.  &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>      IF sy-subrc EQ 0.</FPCLINE>
      <FPCLINE>        gs_hsn-qty = gs_hsn-qty / lv_umren .</FPCLINE>
      <FPCLINE>      ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>    ELSE.</FPCLINE>
      <FPCLINE>      gs_hsn-unit = ls_item-vrkme.</FPCLINE>
      <FPCLINE>    ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>    gs_hsn-per = ls_item-cgst_rate + ls_item-sgst_rate + ls_item-igst_rate.</FPCLINE>
      <FPCLINE>    lv_per = gs_hsn-per.</FPCLINE>
      <FPCLINE>    gs_hsn-rate = ls_item-cgst_val + ls_item-sgst_val + ls_item-igst_val.</FPCLINE>
      <FPCLINE>    lv_rate = gs_hsn-rate.</FPCLINE>
      <FPCLINE>    gs_hsn-tax_val = ls_item-tax_val.</FPCLINE>
      <FPCLINE>    gs_hsn-matnr = ls_item-matnr.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>    gs_hsn-tcs_rate = ls_item-tcs_rate.   &quot;Added by //DEVK921432 on 12/10/2020</FPCLINE>
      <FPCLINE>    gs_hsn-tcs_val = ls_item-tcs_val.   &quot;Added by //DEVK921432 on 12/10/2020</FPCLINE>
      <FPCLINE/>
      <FPCLINE>    APPEND gs_hsn TO gt_hsn.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>  ENDIF.</FPCLINE>
      <FPCLINE>  APPEND ls_item TO gt_item.</FPCLINE>
      <FPCLINE>  CLEAR: ls_item, gs_hsn,lv_umren.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>ENDLOOP.</FPCLINE>
      <FPCLINE>CLEAR:lv_per,lv_rate.</FPCLINE>
      <FPCLINE>*---------</FPCLINE>
      <FPCLINE>lv_nhsn = lv_hsn.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>&quot;ADDED BY RAM ON 19/2</FPCLINE>
      <FPCLINE>*LOOP AT GT_HSN INTO GS_HSN WHERE UNIT EQ &apos;BT&apos; .</FPCLINE>
      <FPCLINE>*</FPCLINE>
      <FPCLINE>*  SELECT SINGLE UMREN INTO LV_UMREN FROM MARM</FPCLINE>
      <FPCLINE>*  WHERE MATNR = GS_HSN-MATNR.</FPCLINE>
      <FPCLINE>*</FPCLINE>
      <FPCLINE>*  GS_HSN-QTY = GS_HSN-QTY / LV_UMREN .</FPCLINE>
      <FPCLINE>*</FPCLINE>
      <FPCLINE>*  MODIFY GT_HSN FROM GS_HSN TRANSPORTING QTY.</FPCLINE>
      <FPCLINE>*</FPCLINE>
      <FPCLINE>*ENDLOOP.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>&quot;ENDED BY RAM ON 19/2/18</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>IF gt_item[] IS NOT INITIAL.</FPCLINE>
      <FPCLINE>  DELETE gt_item WHERE fkimg IS INITIAL.</FPCLINE>
      <FPCLINE>ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>******* Line jump Logic    *************</FPCLINE>
      <FPCLINE>DATA: rem    TYPE i,</FPCLINE>
      <FPCLINE>      cut    TYPE i,</FPCLINE>
      <FPCLINE>      lv_cut TYPE posnr.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>IF is_bil_invoice-hd_gen-bil_number EQ &apos;4162000248&apos; OR is_bil_invoice-hd_gen-bil_number EQ &apos;4162000255&apos;.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>  gv_jump = 6.</FPCLINE>
      <FPCLINE>*</FPCLINE>
      <FPCLINE>**ELSE.</FPCLINE>
      <FPCLINE>**</FPCLINE>
      <FPCLINE>**  GV_JUMP = 8.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>  LOOP AT gt_item INTO ls_item.</FPCLINE>
      <FPCLINE>    ls_item-posnr = sy-tabix.</FPCLINE>
      <FPCLINE>    MODIFY gt_item FROM ls_item TRANSPORTING posnr.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>    rem = ls_item-posnr MOD gv_jump.</FPCLINE>
      <FPCLINE>    IF rem EQ 0.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>      cut = ls_item-posnr + 1.</FPCLINE>
      <FPCLINE>      lv_cut = cut.</FPCLINE>
      <FPCLINE>    ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>    IF ls_item-posnr EQ lv_cut.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>      ls_item-f = &apos;X&apos;.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>    ELSE.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>      ls_item-f = &apos; &apos;.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>    ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>    MODIFY gt_item FROM ls_item TRANSPORTING f.</FPCLINE>
      <FPCLINE>    CLEAR: cut.</FPCLINE>
      <FPCLINE>*  IF LS_ITEM-POSNR GT 9.</FPCLINE>
      <FPCLINE>*</FPCLINE>
      <FPCLINE>*    IF REM EQ 0.</FPCLINE>
      <FPCLINE>*</FPCLINE>
      <FPCLINE>*      LS_ITEM-F = &apos;X&apos;.</FPCLINE>
      <FPCLINE>*</FPCLINE>
      <FPCLINE>*    ELSEIF REM IS NOT INITIAL.</FPCLINE>
      <FPCLINE>*</FPCLINE>
      <FPCLINE>*      LS_ITEM-F = &apos; &apos;.</FPCLINE>
      <FPCLINE>*</FPCLINE>
      <FPCLINE>*    ENDIF.</FPCLINE>
      <FPCLINE>**  MODIFY GT_ITEM FROM LS_ITEM TRANSPORTING F.</FPCLINE>
      <FPCLINE>*</FPCLINE>
      <FPCLINE>*  ELSEIF LS_ITEM-POSNR EQ 9.</FPCLINE>
      <FPCLINE>*</FPCLINE>
      <FPCLINE>*    LS_ITEM-F = &apos;X&apos;.</FPCLINE>
      <FPCLINE>*  ENDIF.</FPCLINE>
      <FPCLINE>*  MODIFY GT_ITEM FROM LS_ITEM TRANSPORTING F.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>  ENDLOOP.</FPCLINE>
      <FPCLINE>*</FPCLINE>
      <FPCLINE/>
      <FPCLINE>ELSE.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>  ls_item-f = &apos; &apos;.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>ENDIF.</FPCLINE>
      <FPCLINE>********* Line jump Logic    *************</FPCLINE>
      <FPCLINE/>
      <FPCLINE>********************</FPCLINE>
      <FPCLINE>*--Supplier Details</FPCLINE>
      <FPCLINE>*********************</FPCLINE>
      <FPCLINE/>
      <FPCLINE>CLEAR: ls_vbrp, lv_branch,lv_state_desc,lv_cntry_desc.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>READ TABLE gt_vbrp INTO ls_vbrp INDEX 1.                &quot;#EC CI_NOORDER</FPCLINE>
      <FPCLINE>&quot;Added by CSPLABAP during code remediation</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*--Get the GSTIN</FPCLINE>
      <FPCLINE>CALL FUNCTION &apos;J_1IG_GET_PLANT_DETAILS&apos;</FPCLINE>
      <FPCLINE>  EXPORTING</FPCLINE>
      <FPCLINE>    im_werks  = ls_vbrp-werks</FPCLINE>
      <FPCLINE>    im_bukrs  = gs_vbrk-bukrs</FPCLINE>
      <FPCLINE>  IMPORTING</FPCLINE>
      <FPCLINE>    ex_branch = lv_branch</FPCLINE>
      <FPCLINE>    ex_gstin  = lv_gstin.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>*--BUPLA Adress number</FPCLINE>
      <FPCLINE>*SELECT SINGLE * &quot;Commented by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>SELECT * &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>  FROM j_1bbranch</FPCLINE>
      <FPCLINE>  INTO ls_branch</FPCLINE>
      <FPCLINE>  UP TO 1 ROWS  &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>  WHERE bukrs EQ gs_vbrk-bukrs AND</FPCLINE>
      <FPCLINE>        branch EQ lv_branch</FPCLINE>
      <FPCLINE>  ORDER BY PRIMARY KEY.	&quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>ENDSELECT.  &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE/>
      <FPCLINE>IF sy-subrc IS INITIAL.</FPCLINE>
      <FPCLINE>*  SELECT SINGLE * &quot;Commented by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>  SELECT * &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>    FROM adrc</FPCLINE>
      <FPCLINE>    INTO ls_adrc</FPCLINE>
      <FPCLINE>    UP TO 1 ROWS  &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>    WHERE addrnumber = ls_branch-adrnr</FPCLINE>
      <FPCLINE>    ORDER BY PRIMARY KEY.	&quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>  ENDSELECT.  &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>  IF sy-subrc IS INITIAL.</FPCLINE>
      <FPCLINE>*--state description</FPCLINE>
      <FPCLINE>    SELECT SINGLE bezei FROM t005u</FPCLINE>
      <FPCLINE>                 INTO lv_state_desc</FPCLINE>
      <FPCLINE>                 WHERE spras = &apos;EN&apos; AND</FPCLINE>
      <FPCLINE>                       land1 = ls_adrc-country AND</FPCLINE>
      <FPCLINE>                       bland = ls_adrc-region.</FPCLINE>
      <FPCLINE>*--Country Description</FPCLINE>
      <FPCLINE>    SELECT SINGLE landx FROM t005t</FPCLINE>
      <FPCLINE>                 INTO lv_cntry_desc</FPCLINE>
      <FPCLINE>                 WHERE spras EQ &apos;EN&apos; AND</FPCLINE>
      <FPCLINE>                       land1 EQ ls_adrc-country.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>    CONCATENATE ls_adrc-name1</FPCLINE>
      <FPCLINE>                &apos; &apos;</FPCLINE>
      <FPCLINE>                ls_adrc-name2</FPCLINE>
      <FPCLINE>                INTO gs_sp-name.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>    MOVE ls_adrc-street     TO gs_sp-street.</FPCLINE>
      <FPCLINE>    MOVE ls_adrc-city1      TO gs_sp-city1.</FPCLINE>
      <FPCLINE>    MOVE ls_adrc-post_code1 TO gs_sp-post_code1.</FPCLINE>
      <FPCLINE>    MOVE lv_state_desc      TO gs_sp-state_desc.</FPCLINE>
      <FPCLINE>    MOVE lv_cntry_desc      TO gs_sp-cntry_desc.</FPCLINE>
      <FPCLINE>    MOVE gs_vbrk-xblnr      TO  gs_sp-serial_num.</FPCLINE>
      <FPCLINE>    MOVE gs_vbrk-fkdat      TO  gs_sp-date.</FPCLINE>
      <FPCLINE>    MOVE ls_branch-gstin    TO  gs_sp-gstin.</FPCLINE>
      <FPCLINE>  ENDIF.</FPCLINE>
      <FPCLINE>ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>*************************</FPCLINE>
      <FPCLINE>*--Bill-to-party details</FPCLINE>
      <FPCLINE>*************************</FPCLINE>
      <FPCLINE>CLEAR: lv_adrnr ,ls_adrc,lv_cntry_desc.</FPCLINE>
      <FPCLINE>*SELECT SINGLE * &quot;Commented by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>SELECT * &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>  INTO ls_vbpa</FPCLINE>
      <FPCLINE>  FROM vbpa</FPCLINE>
      <FPCLINE>  UP TO 1 ROWS  &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>  WHERE vbeln = is_bil_invoice-hd_gen-bil_number AND parvw = &apos;RE&apos;</FPCLINE>
      <FPCLINE>  ORDER BY PRIMARY KEY.	&quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>ENDSELECT.  &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*</FPCLINE>
      <FPCLINE>*SELECT SINGLE * INTO LS_VBPA</FPCLINE>
      <FPCLINE>*                FROM VBPA</FPCLINE>
      <FPCLINE>*                WHERE VBELN = &apos;0101000002&apos; AND</FPCLINE>
      <FPCLINE>*                      PARVW = &apos;RE&apos;.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>lv_adrnr = ls_vbpa-adrnr.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>IF sy-subrc IS INITIAL.</FPCLINE>
      <FPCLINE>*  SELECT SINGLE * &quot;Commented by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>  SELECT * &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>    FROM adrc</FPCLINE>
      <FPCLINE>    INTO ls_adrc</FPCLINE>
      <FPCLINE>    UP TO 1 ROWS  &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>    WHERE addrnumber = lv_adrnr</FPCLINE>
      <FPCLINE>    ORDER BY PRIMARY KEY.	&quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>  ENDSELECT.  &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>  IF sy-subrc IS INITIAL.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*--Country Description</FPCLINE>
      <FPCLINE>    SELECT SINGLE landx FROM t005t</FPCLINE>
      <FPCLINE>                 INTO lv_cntry_desc</FPCLINE>
      <FPCLINE>                 WHERE spras EQ &apos;EN&apos; AND</FPCLINE>
      <FPCLINE>                       land1 EQ ls_adrc-country.</FPCLINE>
      <FPCLINE>*--State description</FPCLINE>
      <FPCLINE>    SELECT SINGLE bezei</FPCLINE>
      <FPCLINE>                  FROM t005u</FPCLINE>
      <FPCLINE>                  INTO gs_bill_to-state</FPCLINE>
      <FPCLINE>                  WHERE spras EQ &apos;EN&apos; AND</FPCLINE>
      <FPCLINE>                        land1 EQ ls_adrc-country AND</FPCLINE>
      <FPCLINE>                        bland EQ ls_adrc-region.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*--GSTIN</FPCLINE>
      <FPCLINE>    SELECT SINGLE stcd3</FPCLINE>
      <FPCLINE>           FROM   kna1</FPCLINE>
      <FPCLINE>           INTO   gs_bill_to-gstin</FPCLINE>
      <FPCLINE>           WHERE  kunnr EQ ls_vbpa-kunnr.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>    MOVE ls_adrc-name1       TO gs_bill_to-name1.</FPCLINE>
      <FPCLINE>    MOVE ls_adrc-street      TO gs_bill_to-street .</FPCLINE>
      <FPCLINE>    MOVE ls_adrc-city1       TO gs_bill_to-city1.</FPCLINE>
      <FPCLINE>    MOVE ls_adrc-post_code1  TO gs_bill_to-post_code1.</FPCLINE>
      <FPCLINE>    MOVE ls_adrc-region      TO gs_bill_to-region.</FPCLINE>
      <FPCLINE>    MOVE lv_cntry_desc       TO gs_bill_to-country.</FPCLINE>
      <FPCLINE>    MOVE ls_adrc-region      TO gs_bill_to-state_code.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>  ENDIF.</FPCLINE>
      <FPCLINE>ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>*************************</FPCLINE>
      <FPCLINE>*--Ship-to-party details</FPCLINE>
      <FPCLINE>*************************</FPCLINE>
      <FPCLINE>CLEAR: lv_adrnr ,ls_adrc, ls_vbpa,lv_cntry_desc.</FPCLINE>
      <FPCLINE>*SELECT SINGLE * &quot;Commented by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>SELECT * &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>  INTO ls_vbpa</FPCLINE>
      <FPCLINE>  FROM vbpa</FPCLINE>
      <FPCLINE>  UP TO 1 ROWS  &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>  WHERE vbeln = is_bil_invoice-hd_gen-bil_number AND parvw = &apos;WE&apos;</FPCLINE>
      <FPCLINE>  ORDER BY PRIMARY KEY.	&quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>ENDSELECT.  &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*</FPCLINE>
      <FPCLINE>*SELECT SINGLE * INTO LS_VBPA</FPCLINE>
      <FPCLINE>*                     FROM VBPA</FPCLINE>
      <FPCLINE>*                     WHERE VBELN = &apos;0101000002&apos; AND</FPCLINE>
      <FPCLINE>*                           PARVW = &apos;WE&apos;.</FPCLINE>
      <FPCLINE>*</FPCLINE>
      <FPCLINE/>
      <FPCLINE>IF sy-subrc IS INITIAL.</FPCLINE>
      <FPCLINE>*  SELECT SINGLE * &quot;Commented by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>  SELECT * &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>    FROM adrc</FPCLINE>
      <FPCLINE>    INTO ls_adrc</FPCLINE>
      <FPCLINE>    UP TO 1 ROWS  &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>    WHERE addrnumber = ls_vbpa-adrnr</FPCLINE>
      <FPCLINE>    ORDER BY PRIMARY KEY.	&quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE>  ENDSELECT.  &quot;Added by SPLABAP during code remediation</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*--Country Description</FPCLINE>
      <FPCLINE>  SELECT SINGLE landx FROM t005t</FPCLINE>
      <FPCLINE>               INTO lv_cntry_desc</FPCLINE>
      <FPCLINE>               WHERE spras EQ &apos;EN&apos; AND</FPCLINE>
      <FPCLINE>                     land1 EQ ls_adrc-country.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*--State description</FPCLINE>
      <FPCLINE>  SELECT SINGLE bezei</FPCLINE>
      <FPCLINE>                FROM t005u</FPCLINE>
      <FPCLINE>                INTO gs_sh_to-state</FPCLINE>
      <FPCLINE>                WHERE spras EQ &apos;EN&apos; AND</FPCLINE>
      <FPCLINE>                      land1 EQ ls_adrc-country AND</FPCLINE>
      <FPCLINE>                      bland EQ ls_adrc-region.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*--GSTIN</FPCLINE>
      <FPCLINE>  SELECT SINGLE stcd3</FPCLINE>
      <FPCLINE>         FROM   kna1</FPCLINE>
      <FPCLINE>         INTO   gs_sh_to-gstin</FPCLINE>
      <FPCLINE>         WHERE kunnr EQ ls_vbpa-kunnr.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>  MOVE ls_adrc-name1       TO gs_sh_to-name1.</FPCLINE>
      <FPCLINE>  MOVE ls_adrc-street      TO gs_sh_to-street.</FPCLINE>
      <FPCLINE>  MOVE ls_adrc-city1       TO gs_sh_to-city1.</FPCLINE>
      <FPCLINE>  MOVE ls_adrc-post_code1  TO gs_sh_to-post_code1.</FPCLINE>
      <FPCLINE>  MOVE ls_adrc-region      TO gs_sh_to-region.</FPCLINE>
      <FPCLINE>  MOVE lv_cntry_desc       TO gs_sh_to-country.</FPCLINE>
      <FPCLINE>  MOVE ls_adrc-region      TO gs_sh_to-state_code.</FPCLINE>
      <FPCLINE>ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>gv_tot_inv  = gs_total-tax_val + gs_total-cgst +</FPCLINE>
      <FPCLINE>              gs_total-sgst  + gs_total-igst + gs_total-tcsv + gv_round_off.   &quot;TCSV, GV_ROUND_OFF  Added by //DEVK921432 on 12/10/2</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*****************</FPCLINE>
      <FPCLINE>*--Total in words</FPCLINE>
      <FPCLINE>*****************</FPCLINE>
      <FPCLINE/>
      <FPCLINE>&quot;Commented by //DEVK921432 on 12/10/2020</FPCLINE>
      <FPCLINE>*LV_AMT = GV_TOT_INV.</FPCLINE>
      <FPCLINE>*</FPCLINE>
      <FPCLINE>*GV_TOT_INV = LV_AMT.</FPCLINE>
      <FPCLINE>&quot;Commented by //DEVK921432 on 12/10/2020</FPCLINE>
      <FPCLINE/>
      <FPCLINE>CALL FUNCTION &apos;J_1IG_AMT_IN_WORDS&apos;</FPCLINE>
      <FPCLINE>  EXPORTING</FPCLINE>
      <FPCLINE>    amt_in_num         = gv_tot_inv</FPCLINE>
      <FPCLINE>  IMPORTING</FPCLINE>
      <FPCLINE>    amt_in_words       = gv_tot_str</FPCLINE>
      <FPCLINE>  EXCEPTIONS</FPCLINE>
      <FPCLINE>    data_type_mismatch = 1</FPCLINE>
      <FPCLINE>    OTHERS             = 2.</FPCLINE>
      <FPCLINE>IF sy-subrc &lt;&gt; 0.</FPCLINE>
      <FPCLINE>* Implement suitable error handling here</FPCLINE>
      <FPCLINE>ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>DESCRIBE TABLE gt_item LINES lv_no_lines.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>IF sy-subrc IS INITIAL.</FPCLINE>
      <FPCLINE>  TRANSLATE gv_tot_str TO UPPER CASE.</FPCLINE>
      <FPCLINE>ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>*Added by Samsudeen M on 23.03.2023</FPCLINE>
      <FPCLINE>DATA: lt_lines TYPE TABLE OF tline.</FPCLINE>
      <FPCLINE>&quot;Headertxt display</FPCLINE>
      <FPCLINE>DATA(l_tdname) = CONV tdobname( is_bil_invoice-hd_gen-bil_number ).</FPCLINE>
      <FPCLINE>SELECT SINGLE * FROM stxh INTO @DATA(l_htext)</FPCLINE>
      <FPCLINE>                WHERE tdname = @l_tdname</FPCLINE>
      <FPCLINE>                AND tdobject = &apos;VBBK&apos;.</FPCLINE>
      <FPCLINE>IF sy-subrc = 0.</FPCLINE>
      <FPCLINE>  REFRESH: lt_lines.</FPCLINE>
      <FPCLINE>  CALL FUNCTION &apos;READ_TEXT&apos;</FPCLINE>
      <FPCLINE>    EXPORTING</FPCLINE>
      <FPCLINE>      client                  = sy-mandt</FPCLINE>
      <FPCLINE>      id                      = l_htext-tdid</FPCLINE>
      <FPCLINE>      language                = l_htext-tdspras</FPCLINE>
      <FPCLINE>      name                    = l_htext-tdname</FPCLINE>
      <FPCLINE>      object                  = l_htext-tdobject</FPCLINE>
      <FPCLINE>    TABLES</FPCLINE>
      <FPCLINE>      lines                   = lt_lines</FPCLINE>
      <FPCLINE>    EXCEPTIONS</FPCLINE>
      <FPCLINE>      id                      = 1</FPCLINE>
      <FPCLINE>      language                = 2</FPCLINE>
      <FPCLINE>      name                    = 3</FPCLINE>
      <FPCLINE>      not_found               = 4</FPCLINE>
      <FPCLINE>      object                  = 5</FPCLINE>
      <FPCLINE>      reference_check         = 6</FPCLINE>
      <FPCLINE>      wrong_access_to_archive = 7</FPCLINE>
      <FPCLINE>      OTHERS                  = 8.</FPCLINE>
      <FPCLINE>  IF sy-subrc = 0.</FPCLINE>
      <FPCLINE>    CLEAR: gv_headertxt.</FPCLINE>
      <FPCLINE>    LOOP AT lt_lines INTO DATA(lw_lines).</FPCLINE>
      <FPCLINE>      gv_headertxt = |{ gv_headertxt } { lw_lines-tdline }|.</FPCLINE>
      <FPCLINE>    ENDLOOP.</FPCLINE>
      <FPCLINE>  ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>ENDIF.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>CLEAR gs_transdtls.</FPCLINE>
      <FPCLINE>SELECT SINGLE * FROM zsd_eway_trdtls INTO gs_transdtls</FPCLINE>
      <FPCLINE>  WHERE docno = is_bil_invoice-hd_gen-bil_number</FPCLINE>
      <FPCLINE>    AND STATUS = &apos;A&apos;.</FPCLINE>
      <FPCLINE>*</FPCLINE>
      <FPCLINE>*select single bukrs from vbrk into @data(l_bukrs)</FPCLINE>
      <FPCLINE>*  where vbeln =  @bil_number.&quot; = &apos;0011043019&apos;.</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>  CLEAR: GS_HSN, LS_ITEM.</FPCLINE>
      <FPCLINE>  INSERT LS_ITEM INTO GT_ITEM INDEX 1.   .</FPCLINE>
      <FPCLINE>  INSERT GS_HSN INTO GT_HSN INDEX 1.   .</FPCLINE>
      <FPCLINE/>
      <FPCLINE/>
      <FPCLINE>select single signed_qrcode</FPCLINE>
      <FPCLINE>              irn</FPCLINE>
      <FPCLINE>   from j_1ig_invrefnum into ( gv_qrcode,gv_irn ) &quot;lv_str</FPCLINE>
      <FPCLINE>  where docno       = is_bil_invoice-hd_gen-bil_number&quot;bil_number</FPCLINE>
      <FPCLINE>    and irn_status  = &apos;ACT&apos;</FPCLINE>
      <FPCLINE>    and bukrs       = gs_vbrk-bukrs.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>  gv_tot_inv = ABS( gv_tot_inv  ).</FPCLINE>
      <FPCLINE/>
      <FPCLINE>  CASE gs_vbrk-bukrs.</FPCLINE>
      <FPCLINE>    WHEN &apos;1000&apos;. gv_for_text = &apos;For SHEENLAC PAINTS LIMITED&apos;.</FPCLINE>
      <FPCLINE>        gv_reg_add1 = &apos;Registered office: Sheenlac Tower&apos;&apos;s - No.124, Developed Plots,&apos;.</FPCLINE>
      <FPCLINE>        gv_reg_add2 = &apos;Industrial Estate, Ambattur  Chennai-600098.&apos;.</FPCLINE>
      <FPCLINE>        gv_reg_add3 = &apos;Phone : 044 - 43949900 Fax : 044 - 42857194.&apos;.</FPCLINE>
      <FPCLINE>    WHEN &apos;2000&apos;. gv_for_text = &apos;For SHEENLAC NOROO COATINGS INDIA PVT LTD&apos;.</FPCLINE>
      <FPCLINE>        gv_reg_add1 = &apos;Registered office: No.124, Developed Plots, SIDCO Industrial Estate,&apos;.</FPCLINE>
      <FPCLINE>        gv_reg_add2 = &apos;Ambattur,Chennai - 600098&apos;.</FPCLINE>
      <FPCLINE>        gv_reg_add3 = &apos;Phone : 044 - 49113333  Fax :&apos;.</FPCLINE>
      <FPCLINE>    WHEN &apos;1700&apos;. gv_for_text = &apos;For SPHINAX CHEMICAL INDS. (PVT) LTD&apos;.</FPCLINE>
      <FPCLINE>        gv_reg_add1 = &apos;Registered office: 124 Developed plots, Industrial Estate&apos;.</FPCLINE>
      <FPCLINE>        gv_reg_add2 = &apos;Ambattur, Chennai - 600 098&apos;.</FPCLINE>
      <FPCLINE>    WHEN &apos;4000&apos;. gv_for_text = &apos;For JENSON &amp; NICHOLSON PAINTS PVT LTD&apos;.</FPCLINE>
      <FPCLINE>        gv_reg_add1 = &apos;Registered office: Old  No.109B,&apos;.</FPCLINE>
      <FPCLINE>        gv_reg_add2 = &apos;New No-124,Developed Plots,&apos;.</FPCLINE>
      <FPCLINE>        gv_reg_add3 = &apos;Sidco Industrial Estate,Ambattur ,Chennai-600098.&apos;.</FPCLINE>
      <FPCLINE>    WHEN &apos;1400&apos;. gv_for_text = &apos;For  M/S. Tech Services&apos;.</FPCLINE>
      <FPCLINE>    WHEN OTHERS.</FPCLINE>
      <FPCLINE>  ENDCASE.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>  gv_del_date = is_bil_invoice-hd_gen-bil_date.</FPCLINE>
     </INITIALIZATION>
     <FORMS/>
    </CL_FP_CODING>
   </cls:CL_FP_CODING>
  </asx:heap>
 </asx:abap>
</abapGit>
