*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: ZVALPN_CATEG....................................*
FORM GET_DATA_ZVALPN_CATEG.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZALPN_CATEG WHERE
(VIM_WHERETAB) .
    CLEAR ZVALPN_CATEG .
ZVALPN_CATEG-MANDT =
ZALPN_CATEG-MANDT .
ZVALPN_CATEG-CKEY =
ZALPN_CATEG-CKEY .
ZVALPN_CATEG-CATEGORY =
ZALPN_CATEG-CATEGORY .
<VIM_TOTAL_STRUC> = ZVALPN_CATEG.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZVALPN_CATEG .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZVALPN_CATEG.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZVALPN_CATEG-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZALPN_CATEG WHERE
  CKEY = ZVALPN_CATEG-CKEY .
    IF SY-SUBRC = 0.
    DELETE ZALPN_CATEG .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZALPN_CATEG WHERE
  CKEY = ZVALPN_CATEG-CKEY .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZALPN_CATEG.
    ENDIF.
ZALPN_CATEG-MANDT =
ZVALPN_CATEG-MANDT .
ZALPN_CATEG-CKEY =
ZVALPN_CATEG-CKEY .
ZALPN_CATEG-CATEGORY =
ZVALPN_CATEG-CATEGORY .
    IF SY-SUBRC = 0.
    UPDATE ZALPN_CATEG ##WARN_OK.
    ELSE.
    INSERT ZALPN_CATEG .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZVALPN_CATEG-UPD_FLAG,
STATUS_ZVALPN_CATEG-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZVALPN_CATEG.
  SELECT SINGLE * FROM ZALPN_CATEG WHERE
CKEY = ZVALPN_CATEG-CKEY .
ZVALPN_CATEG-MANDT =
ZALPN_CATEG-MANDT .
ZVALPN_CATEG-CKEY =
ZALPN_CATEG-CKEY .
ZVALPN_CATEG-CATEGORY =
ZALPN_CATEG-CATEGORY .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZVALPN_CATEG USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZVALPN_CATEG-CKEY TO
ZALPN_CATEG-CKEY .
MOVE ZVALPN_CATEG-MANDT TO
ZALPN_CATEG-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZALPN_CATEG'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZALPN_CATEG TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZALPN_CATEG'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZVALPN_MATERIAL.................................*
FORM GET_DATA_ZVALPN_MATERIAL.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZALPN_MATERIAL WHERE
(VIM_WHERETAB) .
    CLEAR ZVALPN_MATERIAL .
ZVALPN_MATERIAL-MANDT =
ZALPN_MATERIAL-MANDT .
ZVALPN_MATERIAL-MATNR =
ZALPN_MATERIAL-MATNR .
ZVALPN_MATERIAL-CKEY =
ZALPN_MATERIAL-CKEY .
ZVALPN_MATERIAL-CATEGORY =
ZALPN_MATERIAL-CATEGORY .
ZVALPN_MATERIAL-SCKEY =
ZALPN_MATERIAL-SCKEY .
ZVALPN_MATERIAL-SUBCATEGORY =
ZALPN_MATERIAL-SUBCATEGORY .
<VIM_TOTAL_STRUC> = ZVALPN_MATERIAL.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZVALPN_MATERIAL .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZVALPN_MATERIAL.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZVALPN_MATERIAL-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZALPN_MATERIAL WHERE
  MATNR = ZVALPN_MATERIAL-MATNR .
    IF SY-SUBRC = 0.
    DELETE ZALPN_MATERIAL .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZALPN_MATERIAL WHERE
  MATNR = ZVALPN_MATERIAL-MATNR .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZALPN_MATERIAL.
    ENDIF.
ZALPN_MATERIAL-MANDT =
ZVALPN_MATERIAL-MANDT .
ZALPN_MATERIAL-MATNR =
ZVALPN_MATERIAL-MATNR .
ZALPN_MATERIAL-CKEY =
ZVALPN_MATERIAL-CKEY .
ZALPN_MATERIAL-CATEGORY =
ZVALPN_MATERIAL-CATEGORY .
ZALPN_MATERIAL-SCKEY =
ZVALPN_MATERIAL-SCKEY .
ZALPN_MATERIAL-SUBCATEGORY =
ZVALPN_MATERIAL-SUBCATEGORY .
    IF SY-SUBRC = 0.
    UPDATE ZALPN_MATERIAL ##WARN_OK.
    ELSE.
    INSERT ZALPN_MATERIAL .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZVALPN_MATERIAL-UPD_FLAG,
STATUS_ZVALPN_MATERIAL-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZVALPN_MATERIAL.
  SELECT SINGLE * FROM ZALPN_MATERIAL WHERE
MATNR = ZVALPN_MATERIAL-MATNR .
ZVALPN_MATERIAL-MANDT =
ZALPN_MATERIAL-MANDT .
ZVALPN_MATERIAL-MATNR =
ZALPN_MATERIAL-MATNR .
ZVALPN_MATERIAL-CKEY =
ZALPN_MATERIAL-CKEY .
ZVALPN_MATERIAL-CATEGORY =
ZALPN_MATERIAL-CATEGORY .
ZVALPN_MATERIAL-SCKEY =
ZALPN_MATERIAL-SCKEY .
ZVALPN_MATERIAL-SUBCATEGORY =
ZALPN_MATERIAL-SUBCATEGORY .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZVALPN_MATERIAL USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZVALPN_MATERIAL-MATNR TO
ZALPN_MATERIAL-MATNR .
MOVE ZVALPN_MATERIAL-MANDT TO
ZALPN_MATERIAL-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZALPN_MATERIAL'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZALPN_MATERIAL TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZALPN_MATERIAL'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZVALPN_SUBCATEG.................................*
FORM GET_DATA_ZVALPN_SUBCATEG.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZALPN_SUBCATEG WHERE
(VIM_WHERETAB) .
    CLEAR ZVALPN_SUBCATEG .
ZVALPN_SUBCATEG-MANDT =
ZALPN_SUBCATEG-MANDT .
ZVALPN_SUBCATEG-SCKEY =
ZALPN_SUBCATEG-SCKEY .
ZVALPN_SUBCATEG-SUBCATEGORY =
ZALPN_SUBCATEG-SUBCATEGORY .
ZVALPN_SUBCATEG-CKEY =
ZALPN_SUBCATEG-CKEY .
ZVALPN_SUBCATEG-CATEGORY =
ZALPN_SUBCATEG-CATEGORY .
<VIM_TOTAL_STRUC> = ZVALPN_SUBCATEG.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZVALPN_SUBCATEG .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZVALPN_SUBCATEG.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZVALPN_SUBCATEG-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZALPN_SUBCATEG WHERE
  CKEY = ZVALPN_SUBCATEG-CKEY AND
  CATEGORY = ZVALPN_SUBCATEG-CATEGORY AND
  SCKEY = ZVALPN_SUBCATEG-SCKEY .
    IF SY-SUBRC = 0.
    DELETE ZALPN_SUBCATEG .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZALPN_SUBCATEG WHERE
  CKEY = ZVALPN_SUBCATEG-CKEY AND
  CATEGORY = ZVALPN_SUBCATEG-CATEGORY AND
  SCKEY = ZVALPN_SUBCATEG-SCKEY .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZALPN_SUBCATEG.
    ENDIF.
ZALPN_SUBCATEG-MANDT =
ZVALPN_SUBCATEG-MANDT .
ZALPN_SUBCATEG-SCKEY =
ZVALPN_SUBCATEG-SCKEY .
ZALPN_SUBCATEG-SUBCATEGORY =
ZVALPN_SUBCATEG-SUBCATEGORY .
ZALPN_SUBCATEG-CKEY =
ZVALPN_SUBCATEG-CKEY .
ZALPN_SUBCATEG-CATEGORY =
ZVALPN_SUBCATEG-CATEGORY .
    IF SY-SUBRC = 0.
    UPDATE ZALPN_SUBCATEG ##WARN_OK.
    ELSE.
    INSERT ZALPN_SUBCATEG .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZVALPN_SUBCATEG-UPD_FLAG,
STATUS_ZVALPN_SUBCATEG-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZVALPN_SUBCATEG.
  SELECT SINGLE * FROM ZALPN_SUBCATEG WHERE
CKEY = ZVALPN_SUBCATEG-CKEY AND
CATEGORY = ZVALPN_SUBCATEG-CATEGORY AND
SCKEY = ZVALPN_SUBCATEG-SCKEY .
ZVALPN_SUBCATEG-MANDT =
ZALPN_SUBCATEG-MANDT .
ZVALPN_SUBCATEG-SCKEY =
ZALPN_SUBCATEG-SCKEY .
ZVALPN_SUBCATEG-SUBCATEGORY =
ZALPN_SUBCATEG-SUBCATEGORY .
ZVALPN_SUBCATEG-CKEY =
ZALPN_SUBCATEG-CKEY .
ZVALPN_SUBCATEG-CATEGORY =
ZALPN_SUBCATEG-CATEGORY .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZVALPN_SUBCATEG USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZVALPN_SUBCATEG-CKEY TO
ZALPN_SUBCATEG-CKEY .
MOVE ZVALPN_SUBCATEG-CATEGORY TO
ZALPN_SUBCATEG-CATEGORY .
MOVE ZVALPN_SUBCATEG-SCKEY TO
ZALPN_SUBCATEG-SCKEY .
MOVE ZVALPN_SUBCATEG-MANDT TO
ZALPN_SUBCATEG-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZALPN_SUBCATEG'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZALPN_SUBCATEG TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZALPN_SUBCATEG'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
