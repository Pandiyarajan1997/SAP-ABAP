*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: ZV_CUST_COMMS...................................*
FORM GET_DATA_ZV_CUST_COMMS.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZCUS_CF_CUMM WHERE
(VIM_WHERETAB) .
    CLEAR ZV_CUST_COMMS .
ZV_CUST_COMMS-MANDT =
ZCUS_CF_CUMM-MANDT .
ZV_CUST_COMMS-FINTYPE =
ZCUS_CF_CUMM-FINTYPE .
ZV_CUST_COMMS-KUNNR =
ZCUS_CF_CUMM-KUNNR .
ZV_CUST_COMMS-COM_TYPE =
ZCUS_CF_CUMM-COM_TYPE .
ZV_CUST_COMMS-SEQ_NO =
ZCUS_CF_CUMM-SEQ_NO .
ZV_CUST_COMMS-PHONE =
ZCUS_CF_CUMM-PHONE .
ZV_CUST_COMMS-EMAIL =
ZCUS_CF_CUMM-EMAIL .
<VIM_TOTAL_STRUC> = ZV_CUST_COMMS.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZV_CUST_COMMS .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZV_CUST_COMMS.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZV_CUST_COMMS-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZCUS_CF_CUMM WHERE
  FINTYPE = ZV_CUST_COMMS-FINTYPE AND
  KUNNR = ZV_CUST_COMMS-KUNNR AND
  COM_TYPE = ZV_CUST_COMMS-COM_TYPE AND
  SEQ_NO = ZV_CUST_COMMS-SEQ_NO .
    IF SY-SUBRC = 0.
    DELETE ZCUS_CF_CUMM .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZCUS_CF_CUMM WHERE
  FINTYPE = ZV_CUST_COMMS-FINTYPE AND
  KUNNR = ZV_CUST_COMMS-KUNNR AND
  COM_TYPE = ZV_CUST_COMMS-COM_TYPE AND
  SEQ_NO = ZV_CUST_COMMS-SEQ_NO .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZCUS_CF_CUMM.
    ENDIF.
ZCUS_CF_CUMM-MANDT =
ZV_CUST_COMMS-MANDT .
ZCUS_CF_CUMM-FINTYPE =
ZV_CUST_COMMS-FINTYPE .
ZCUS_CF_CUMM-KUNNR =
ZV_CUST_COMMS-KUNNR .
ZCUS_CF_CUMM-COM_TYPE =
ZV_CUST_COMMS-COM_TYPE .
ZCUS_CF_CUMM-SEQ_NO =
ZV_CUST_COMMS-SEQ_NO .
ZCUS_CF_CUMM-PHONE =
ZV_CUST_COMMS-PHONE .
ZCUS_CF_CUMM-EMAIL =
ZV_CUST_COMMS-EMAIL .
    IF SY-SUBRC = 0.
    UPDATE ZCUS_CF_CUMM ##WARN_OK.
    ELSE.
    INSERT ZCUS_CF_CUMM .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZV_CUST_COMMS-UPD_FLAG,
STATUS_ZV_CUST_COMMS-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZV_CUST_COMMS.
  SELECT SINGLE * FROM ZCUS_CF_CUMM WHERE
FINTYPE = ZV_CUST_COMMS-FINTYPE AND
KUNNR = ZV_CUST_COMMS-KUNNR AND
COM_TYPE = ZV_CUST_COMMS-COM_TYPE AND
SEQ_NO = ZV_CUST_COMMS-SEQ_NO .
ZV_CUST_COMMS-MANDT =
ZCUS_CF_CUMM-MANDT .
ZV_CUST_COMMS-FINTYPE =
ZCUS_CF_CUMM-FINTYPE .
ZV_CUST_COMMS-KUNNR =
ZCUS_CF_CUMM-KUNNR .
ZV_CUST_COMMS-COM_TYPE =
ZCUS_CF_CUMM-COM_TYPE .
ZV_CUST_COMMS-SEQ_NO =
ZCUS_CF_CUMM-SEQ_NO .
ZV_CUST_COMMS-PHONE =
ZCUS_CF_CUMM-PHONE .
ZV_CUST_COMMS-EMAIL =
ZCUS_CF_CUMM-EMAIL .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZV_CUST_COMMS USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZV_CUST_COMMS-FINTYPE TO
ZCUS_CF_CUMM-FINTYPE .
MOVE ZV_CUST_COMMS-KUNNR TO
ZCUS_CF_CUMM-KUNNR .
MOVE ZV_CUST_COMMS-COM_TYPE TO
ZCUS_CF_CUMM-COM_TYPE .
MOVE ZV_CUST_COMMS-SEQ_NO TO
ZCUS_CF_CUMM-SEQ_NO .
MOVE ZV_CUST_COMMS-MANDT TO
ZCUS_CF_CUMM-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCUS_CF_CUMM'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCUS_CF_CUMM TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCUS_CF_CUMM'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*

* base table related FORM-routines.............
INCLUDE LSVIMFTX .
