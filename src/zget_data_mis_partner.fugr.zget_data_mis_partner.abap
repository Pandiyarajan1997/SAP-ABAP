FUNCTION ZGET_DATA_MIS_PARTNER.
*"----------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     VALUE(PARNR_ID) TYPE  PERNR_D OPTIONAL
*"     VALUE(DATE_FRM) TYPE  BUDAT
*"     VALUE(DATE_TO) TYPE  BUDAT
*"  TABLES
*"      IT_PARTNER STRUCTURE  ZSTR_MIS_PART_EM_MOB
*"----------------------------------------------------------------------

  TYPES:BEGIN OF TY_PA0000,
        PERNR TYPE PA0000-PERNR,
        BEGDA TYPE PA0000-BEGDA,
        ENDDA TYPE PA0000-ENDDA,
        STAT2 TYPE PA0000-STAT2,
    END OF TY_PA0000.

  DATA : IT_PA0000 TYPE TABLE OF TY_PA0000,
         WA_PA0000 TYPE TY_PA0000.

  TYPES :BEGIN OF TY_PA0105,
      PERNR TYPE PA0105-PERNR,
      SUBTY TYPE PA0105-SUBTY,
      BEGDA TYPE PA0105-BEGDA,
      ENDDA TYPE PA0105-ENDDA,
      USRTY TYPE PA0105-USRTY,
      USRID TYPE PA0105-USRID,
      USRID_LONG TYPE PA0105-USRID_LONG,
    END OF TY_PA0105.

  DATA:IT_PA0105 TYPE TABLE OF TY_PA0105,
        WA_PA0105 TYPE TY_PA0105.

  TYPES :BEGIN OF TY_PA0105_FI,
     PERNR TYPE PA0105-PERNR,
     BEGDA TYPE PA0105-BEGDA,
     ENDDA TYPE PA0105-ENDDA,
     USRID TYPE PA0105-USRID,
     USRID_LONG TYPE PA0105-USRID_LONG,
   END OF TY_PA0105_FI.

  DATA:IT_PA0105_FI TYPE TABLE OF TY_PA0105_FI,
        WA_PA0105_FI TYPE TY_PA0105_FI,
        WA_PARTNER TYPE ZSTR_MIS_PART_EM_MOB.

  IF PARNR_ID IS NOT INITIAL.
    SELECT
      PERNR
      BEGDA
      ENDDA
      STAT2 INTO TABLE IT_PA0000 FROM PA0000 WHERE PERNR EQ PARNR_ID AND STAT2 = '3' AND ( BEGDA BETWEEN DATE_FRM AND DATE_TO AND ENDDA BETWEEN DATE_FRM AND DATE_TO ) .
  ELSE.
    SELECT
      PERNR
      BEGDA
      ENDDA
      STAT2 INTO TABLE IT_PA0000 FROM PA0000 WHERE STAT2 = '3' AND ( BEGDA BETWEEN DATE_FRM AND DATE_TO  AND  ENDDA BETWEEN DATE_FRM AND DATE_TO ) .
  ENDIF.

  IF IT_PA0000 IS NOT INITIAL.
    SELECT
      PERNR
      SUBTY
      BEGDA
      ENDDA
      USRTY
      USRID
      USRID_LONG INTO TABLE IT_PA0105 FROM PA0105 FOR ALL ENTRIES IN IT_PA0000 WHERE PERNR = IT_PA0000-PERNR AND USRTY IN ('0010','MOBI') .
  ENDIF.

  LOOP AT IT_PA0105 INTO WA_PA0105.
    WA_PA0105_FI-PERNR = WA_PA0105-PERNR.
    WA_PA0105_FI-BEGDA = WA_PA0105-BEGDA.
    WA_PA0105_FI-ENDDA = WA_PA0105-ENDDA.
    IF WA_PA0105-USRTY = '0010'.
      WA_PA0105_FI-USRID_LONG =  WA_PA0105-USRID_LONG.
    ELSEIF WA_PA0105-USRTY = 'MOBI'.
      WA_PA0105_FI-USRID =  WA_PA0105-USRID.
    ENDIF.
    APPEND WA_PA0105_FI TO IT_PA0105_FI.
    CLEAR: WA_PA0105_FI,WA_PA0105,WA_PARTNER.
  ENDLOOP.

  LOOP AT IT_PA0105_FI INTO WA_PA0105_FI .
    MOVE-CORRESPONDING WA_PA0105_FI TO WA_PARTNER.
    APPEND WA_PARTNER TO IT_PARTNER.
    CLEAR : WA_PARTNER,WA_PA0105_FI.
  ENDLOOP.

  CLEAR : WA_PA0000,WA_PA0105,WA_PA0105_FI,WA_PARTNER.

ENDFUNCTION.
