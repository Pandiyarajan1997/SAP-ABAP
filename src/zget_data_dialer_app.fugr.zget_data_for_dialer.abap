FUNCTION ZGET_DATA_FOR_DIALER.
*"----------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     VALUE(DATE_FRM) TYPE  AEDAT
*"     VALUE(DATE_TO) TYPE  AEDAT
*"  TABLES
*"      IT_DIALER STRUCTURE  ZSTR_DIALER_APP
*"----------------------------------------------------------------------
  TYPES : BEGIN OF TY_CDHDR,
          MANDANT TYPE CDHDR-MANDANT,
          OBJECTCLAS TYPE CDHDR-OBJECTCLAS,
          OBJECTID TYPE CDHDR-OBJECTID,
          CHANGENR TYPE CDHDR-CHANGENR,
          UDATE TYPE CDHDR-UDATE,
          UTIME TYPE CDHDR-UTIME,
          TCODE TYPE CDHDR-TCODE,
        END OF TY_CDHDR.

  TYPES : BEGIN OF TY_CDPOS,
          MANDANT TYPE CDPOS-MANDANT,
          OBJECTCLAS TYPE CDPOS-OBJECTCLAS,
          OBJECTID(10) ,
          CHANGENR TYPE CDPOS-CHANGENR,
          TABNAME TYPE CDPOS-TABNAME,
          TABKEY TYPE CDPOS-TABKEY,
          FNAME TYPE CDPOS-FNAME,
          VALUE_NEW TYPE CDPOS-VALUE_NEW,
          VALUE_OLD TYPE CDPOS-VALUE_OLD,
        END OF TY_CDPOS.


  DATA : IT_CDHDR TYPE TABLE OF TY_CDHDR,
       WA_CDHDR TYPE TY_CDHDR.

  DATA : IT_CDPOS TYPE TABLE OF TY_CDPOS,
         WA_CDPOS TYPE TY_CDPOS.

  TYPES : BEGIN OF TY_KNVV ,
           KUNNR TYPE KUNNR ,
           VKORG TYPE KNVV-VKORG,
           VTWEG TYPE KNVV-VTWEG,
           SPART TYPE KNVV-SPART,
           KDGRP TYPE KNVV-KDGRP,
           VKBUR TYPE KNVV-VKBUR,
           VWERK TYPE KNVV-VWERK,
          END OF TY_KNVV.
  DATA:IT_KNVV TYPE STANDARD TABLE OF TY_KNVV,
       WA_KNVV TYPE TY_KNVV.
  DATA IT_KNA1 LIKE KNA1 OCCURS 0 WITH HEADER LINE .

  TYPES: BEGIN OF TY_TVK1,
KATR1 TYPE TVK1-KATR1,
TXT1 TYPE TVK1T-VTEXT,
END OF TY_TVK1.

  DATA:IT_TVK1 TYPE TABLE OF TY_TVK1,
        WA_TVK1 TYPE TY_TVK1.

  TYPES: BEGIN OF TY_TVK2,
  KATR2 TYPE TVK2-KATR2,
  TXT2 TYPE TVK2T-VTEXT,
  END OF TY_TVK2.

  DATA:IT_TVK2 TYPE TABLE OF TY_TVK2,
        WA_TVK2 TYPE TY_TVK2.

  TYPES: BEGIN OF TY_TVK3,
    KATR3 TYPE TVK3-KATR3,
    TXT3 TYPE TVK3T-VTEXT,
    END OF TY_TVK3.

  DATA:IT_TVK3 TYPE TABLE OF TY_TVK3,
        WA_TVK3 TYPE TY_TVK3.

  TYPES: BEGIN OF TY_TVK4,
    KATR4 TYPE TVK4-KATR4,
    TXT4 TYPE TVK4T-VTEXT,
    END OF TY_TVK4.

  DATA:IT_TVK4 TYPE TABLE OF TY_TVK4,
        WA_TVK4 TYPE TY_TVK4.

  TYPES: BEGIN OF TY_TVK5,
    KATR5 TYPE TVK5-KATR5,
    TXT5 TYPE TVK5T-VTEXT,
    END OF TY_TVK5.

  DATA:IT_TVK5 TYPE TABLE OF TY_TVK5,
        WA_TVK5 TYPE TY_TVK5.

  TYPES: BEGIN OF TY_TVK6,
    KATR6 TYPE TVK6-KATR6,
    TXT6 TYPE TVK6T-VTEXT,
    END OF TY_TVK6.

  DATA:IT_TVK6 TYPE TABLE OF TY_TVK6,
        WA_TVK6 TYPE TY_TVK6.

  TYPES: BEGIN OF TY_TVK7,
    KATR7 TYPE TVK7-KATR7,
    TXT7 TYPE TVK7T-VTEXT,
    END OF TY_TVK7.

  DATA:IT_TVK7 TYPE TABLE OF TY_TVK7,
        WA_TVK7 TYPE TY_TVK7.

  TYPES: BEGIN OF TY_TVK8,
    KATR8 TYPE TVK8-KATR8,
    TXT8 TYPE TVK8T-VTEXT,
    END OF TY_TVK8.

  DATA:IT_TVK8 TYPE TABLE OF TY_TVK8,
        WA_TVK8 TYPE TY_TVK8.

  TYPES: BEGIN OF TY_TVK9,
    KATR9 TYPE TVK9-KATR9,
    TXT9 TYPE TVK9T-VTEXT,
    END OF TY_TVK9.

  DATA:IT_TVK9 TYPE TABLE OF TY_TVK9,
        WA_TVK9 TYPE TY_TVK9.

  TYPES: BEGIN OF TY_TVK10,
    KATR10 TYPE TVK0-KATR10,
    TXT10 TYPE TVK0T-VTEXT,
    END OF TY_TVK10.

  DATA:IT_TVK10 TYPE TABLE OF TY_TVK10,
        WA_TVK10 TYPE TY_TVK10.


  TYPES : BEGIN OF TY_KNVP,
            KUNNR TYPE KNVP-KUNNR,
            VKORG TYPE KNVP-VKORG,
            VTWEG TYPE KNVP-VTWEG,
            SPART TYPE KNVP-SPART,
            PARVW TYPE KNVP-PARVW,
            PARZA TYPE KNVP-PARZA,
            KUNN2 TYPE KNVP-KUNN2,
            LIFNR TYPE KNVP-LIFNR,
            PERNR TYPE KNVP-PERNR,
            PARNR TYPE KNVP-PARNR,
            KNREF TYPE KNVP-KNREF,
            DEFPA TYPE KNVP-DEFPA,
          END OF TY_KNVP.

  DATA: IT_KNVP TYPE STANDARD TABLE OF TY_KNVP,
        WA_KNVP TYPE TY_KNVP.

  DATA:IT_T005T TYPE STANDARD TABLE OF T005T,
        WA_T005T TYPE T005T.

  DATA:IT_T005U TYPE STANDARD  TABLE OF T005U,
       WA_T005U TYPE T005U.

  DATA:IT_T005H TYPE STANDARD  TABLE OF T005H,
       WA_T005H TYPE T005H,
       WA_DIALER TYPE ZSTR_DIALER_APP.
  TYPES:BEGIN OF TY_PA0001,
    PERNR TYPE PA0001-PERNR,
    BUKRS TYPE PA0001-BUKRS,
    SNAME TYPE PA0001-SNAME,
    END OF TY_PA0001.

  DATA: IT_PA0001 TYPE TABLE OF TY_PA0001,
        WA_PA0001 TYPE TY_PA0001.

  TYPES:BEGIN OF TY_PA0105,
    PERNR TYPE PA0105-PERNR,
    USRTY TYPE PA0105-USRTY,
    USRID TYPE PA0105-USRID,
    USRID_LONG TYPE PA0105-USRID_LONG,
    END OF TY_PA0105.

  DATA:IT_PA0105 TYPE TABLE OF TY_PA0105,
       WA_PA0105 TYPE TY_PA0105.


  TYPES:BEGIN OF TY_TVKGGT,
    KDKGR TYPE TVKGGT-KDKGR,
    GR_VTEXT TYPE TVKGGT-VTEXT,
    END OF TY_TVKGGT.

  DATA:IT_TVKGGT1 TYPE TABLE OF TY_TVKGGT,
       WA_TVKGGT1 TYPE TY_TVKGGT.

  SELECT
         MANDANT
         OBJECTCLAS
         OBJECTID
         CHANGENR
         UDATE
         UTIME
         TCODE
          INTO TABLE IT_CDHDR FROM CDHDR  WHERE UDATE GE DATE_FRM AND UDATE LE DATE_TO AND ( TCODE EQ 'XD01' OR TCODE EQ 'XD02' OR TCODE EQ 'VD01' OR TCODE EQ 'VD02' OR TCODE EQ 'MASS' OR TCODE EQ 'XD05' OR TCODE EQ 'XD06' OR TCODE EQ 'XD99' ) .
  IF IT_CDHDR IS NOT INITIAL.


    SELECT
             MANDANT
             OBJECTCLAS
             OBJECTID
             CHANGENR
             TABNAME
             TABKEY
             FNAME
             VALUE_NEW
             VALUE_OLD FROM CDPOS INTO TABLE IT_CDPOS FOR ALL ENTRIES IN IT_CDHDR WHERE
             OBJECTCLAS = IT_CDHDR-OBJECTCLAS AND OBJECTID = IT_CDHDR-OBJECTID AND CHANGENR = IT_CDHDR-CHANGENR. "#EC CI_NOORDER  " Added by <IT-CAR Tool> during Code Remediation
    "AND ( FNAME EQ 'KDKG1' OR FNAME EQ 'KDKG2' OR FNAME EQ 'KDKG3' OR FNAME EQ 'KDKG4' OR FNAME EQ 'KDKG5').
*        * get customer data
    SELECT
      KUNNR
      VKORG
      VTWEG
      SPART
      KDGRP
      VKBUR
      VWERK
      FROM  KNVV
      INTO TABLE IT_KNVV FOR ALL ENTRIES IN IT_CDPOS
     WHERE KUNNR EQ IT_CDPOS-OBJECTID.


    SORT IT_KNVV ASCENDING BY KUNNR VKORG VTWEG SPART.
    DELETE ADJACENT DUPLICATES FROM IT_KNVV COMPARING KUNNR VKORG VTWEG.

  ENDIF.

  IF IT_KNVV[] IS NOT INITIAL.

    SELECT KUNNR
             NAME1
             KUNNR
             NAME1
             LAND1
             REGIO
             CITYC
             ADRNR
             TELF2
             TELF1
             PSTLZ
             KTOKD
             ORT01
             STCD3
             KDKG1
             KDKG2
             KDKG3
             KDKG4
             KDKG5
             LOEVM
             KATR1
             KATR2
             KATR3
             KATR4
             KATR5
             KATR6
             KATR7
             KATR8
             KATR9
             KATR10
             ERDAT
           FROM KNA1
           INTO   CORRESPONDING FIELDS OF TABLE IT_KNA1
           FOR ALL ENTRIES IN IT_KNVV
           WHERE KUNNR EQ IT_KNVV-KUNNR .

    SELECT
     SPRAS
     LAND1
     LANDX
     FROM T005T INTO CORRESPONDING FIELDS OF  TABLE IT_T005T
    WHERE SPRAS EQ 'EN' .


    SELECT
      SPRAS
      LAND1
      BLAND
      BEZEI
      FROM T005U INTO CORRESPONDING FIELDS OF  TABLE IT_T005U
      WHERE SPRAS EQ 'EN' .

    SELECT
       SPRAS
       LAND1
       REGIO
       CITYC
       BEZEI
       FROM T005H INTO CORRESPONDING FIELDS OF  TABLE IT_T005H
       WHERE SPRAS EQ 'EN'.

    SELECT KDKGR VTEXT FROM TVKGGT INTO TABLE IT_TVKGGT1.

    SELECT KATR1 VTEXT FROM TVK1T INTO TABLE IT_TVK1 FOR ALL ENTRIES IN IT_KNA1
          WHERE KATR1 EQ  IT_KNA1-KATR1.
    SELECT KATR2 VTEXT FROM TVK2T INTO TABLE IT_TVK2 FOR ALL ENTRIES IN IT_KNA1
          WHERE KATR2 EQ  IT_KNA1-KATR2.
    SELECT KATR3 VTEXT FROM TVK3T INTO TABLE IT_TVK3 FOR ALL ENTRIES IN IT_KNA1
          WHERE KATR3 EQ  IT_KNA1-KATR3.
    SELECT KATR4 VTEXT FROM TVK4T INTO TABLE IT_TVK4 FOR ALL ENTRIES IN IT_KNA1
          WHERE KATR4 EQ  IT_KNA1-KATR4.
    SELECT KATR5 VTEXT FROM TVK5T INTO TABLE IT_TVK5 FOR ALL ENTRIES IN IT_KNA1
          WHERE KATR5 EQ  IT_KNA1-KATR5.
    SELECT KATR6 VTEXT FROM TVK6T INTO TABLE IT_TVK6 FOR ALL ENTRIES IN IT_KNA1
          WHERE KATR6 EQ  IT_KNA1-KATR6.
    SELECT KATR7 VTEXT FROM TVK7T INTO TABLE IT_TVK7 FOR ALL ENTRIES IN IT_KNA1
          WHERE KATR7 EQ  IT_KNA1-KATR7.
    SELECT KATR8 VTEXT FROM TVK8T INTO TABLE IT_TVK8 FOR ALL ENTRIES IN IT_KNA1
          WHERE KATR8 EQ  IT_KNA1-KATR8.
    SELECT KATR9 VTEXT FROM TVK9T INTO TABLE IT_TVK9 FOR ALL ENTRIES IN IT_KNA1
          WHERE KATR9 EQ  IT_KNA1-KATR9.
    SELECT KATR10 VTEXT FROM TVK0T INTO TABLE IT_TVK10 FOR ALL ENTRIES IN IT_KNA1
          WHERE KATR10 EQ  IT_KNA1-KATR10.



    SELECT
          KUNNR
          VKORG
          VTWEG
          SPART
          PARVW
          PARZA
          KUNN2
          LIFNR
          PERNR
          PARNR
          KNREF
          DEFPA
          FROM KNVP INTO TABLE IT_KNVP FOR ALL ENTRIES IN IT_KNVV WHERE VKORG EQ IT_KNVV-VKORG
                               AND VTWEG EQ IT_KNVV-VTWEG AND KUNNR EQ IT_KNVV-KUNNR AND SPART EQ IT_KNVV-SPART .

    SELECT  PERNR
                  BUKRS
                  SNAME
                  FROM PA0001 INTO TABLE IT_PA0001 FOR ALL ENTRIES IN IT_KNVP WHERE PERNR = IT_KNVP-PERNR .
    SELECT PERNR
           USRTY
           USRID
           USRID_LONG FROM PA0105 INTO TABLE IT_PA0105 FOR ALL ENTRIES IN IT_PA0001 WHERE PERNR = IT_PA0001-PERNR AND USRTY ='MOBI'.


  ENDIF.
  SORT :IT_PA0001 ASCENDING BY PERNR BUKRS.
  SORT :IT_PA0105 ASCENDING BY PERNR.
  SORT : IT_KNVP  ASCENDING BY KUNNR VKORG VTWEG SPART.
  SORT IT_T005T ASCENDING BY LAND1 .
  SORT IT_T005U ASCENDING BY LAND1 BLAND.
  SORT IT_T005H ASCENDING BY LAND1 REGIO CITYC.
  DELETE ADJACENT DUPLICATES FROM IT_PA0001 COMPARING PERNR.
  DELETE ADJACENT DUPLICATES FROM IT_PA0105 COMPARING PERNR USRID.
  SORT IT_TVKGGT1 ASCENDING BY KDKGR.

  LOOP AT IT_KNVV INTO WA_KNVV.
    READ TABLE IT_KNA1 WITH KEY KUNNR = WA_KNVV-KUNNR.
    WA_DIALER-KUNNR = WA_KNVV-KUNNR.
    WA_DIALER-VKORG = WA_KNVV-VKORG.
    WA_DIALER-VTWEG = WA_KNVV-VTWEG.
    WA_DIALER-SPART = WA_KNVV-SPART.


    WA_DIALER-NAME1 = IT_KNA1-NAME1. "taken form adrc table below
    WA_DIALER-KUNNR = IT_KNA1-KUNNR.
    WA_DIALER-LAND1 = IT_KNA1-LAND1.
    WA_DIALER-REGIO = IT_KNA1-REGIO.
    WA_DIALER-CITYC = IT_KNA1-CITYC.
    WA_DIALER-CITYCX = IT_KNA1-ORT01.
    WA_DIALER-KATR1 = IT_KNA1-KATR1.
    WA_DIALER-KATR2 = IT_KNA1-KATR2.
    WA_DIALER-KATR3 = IT_KNA1-KATR3.
    WA_DIALER-KATR4 = IT_KNA1-KATR4.
    WA_DIALER-KATR5 = IT_KNA1-KATR5.
    WA_DIALER-KATR6 = IT_KNA1-KATR6.
    WA_DIALER-KATR7 = IT_KNA1-KATR7.
    WA_DIALER-KATR8 = IT_KNA1-KATR8.
    WA_DIALER-KATR9 = IT_KNA1-KATR9.
    WA_DIALER-KATR10 = IT_KNA1-KATR10.
    WA_DIALER-LOEVM = IT_KNA1-LOEVM.
    WA_DIALER-ERDAT = IT_KNA1-ERDAT.
    WA_DIALER-TEL_NUMBER = IT_KNA1-TELF2.
    WA_DIALER-MOB_NUMBER = IT_KNA1-TELF1.

    WA_DIALER-KDKG1  =           IT_KNA1-KDKG1 .
    WA_DIALER-KDKG2  =           IT_KNA1-KDKG2 .
    WA_DIALER-KDKG3  =           IT_KNA1-KDKG3 .
    WA_DIALER-KDKG4  =           IT_KNA1-KDKG4 .
    WA_DIALER-KDKG5  =           IT_KNA1-KDKG5 .
    READ TABLE IT_TVKGGT1 INTO WA_TVKGGT1 WITH KEY KDKGR = WA_DIALER-KDKG1.
    WA_DIALER-VTEXT1 = WA_TVKGGT1-GR_VTEXT.
    CLEAR:WA_TVKGGT1.
    READ TABLE IT_TVKGGT1 INTO WA_TVKGGT1 WITH KEY KDKGR = WA_DIALER-KDKG2.
    WA_DIALER-VTEXT2 = WA_TVKGGT1-GR_VTEXT.
    CLEAR:WA_TVKGGT1.
    READ TABLE IT_TVKGGT1 INTO WA_TVKGGT1 WITH KEY KDKGR = WA_DIALER-KDKG3.
    WA_DIALER-VTEXT3 = WA_TVKGGT1-GR_VTEXT.
    CLEAR:WA_TVKGGT1.
    READ TABLE IT_TVKGGT1 INTO WA_TVKGGT1 WITH KEY KDKGR = WA_DIALER-KDKG4.
    WA_DIALER-VTEXT4 = WA_TVKGGT1-GR_VTEXT.
    CLEAR:WA_TVKGGT1.
    READ TABLE IT_TVKGGT1 INTO WA_TVKGGT1 WITH KEY KDKGR = WA_DIALER-KDKG5.
    WA_DIALER-VTEXT5 = WA_TVKGGT1-GR_VTEXT.
    CLEAR:WA_TVKGGT1.
*

**    read table IT_KNVP into WA_KNVP   WITH  KEY VKORG = IT_DIALER-VKORG
**                                VTWEG = IT_DIALER-VTWEG  KUNNR = IT_DIALER-KUNNR  SPART = IT_DIALER-SPART .

    LOOP AT IT_KNVP INTO WA_KNVP WHERE VKORG = WA_DIALER-VKORG AND
                                VTWEG = WA_DIALER-VTWEG AND  KUNNR = WA_DIALER-KUNNR AND SPART = WA_DIALER-SPART .
      READ TABLE IT_PA0001 INTO WA_PA0001 WITH KEY PERNR = WA_KNVP-PERNR.
      READ TABLE IT_PA0105 INTO WA_PA0105 WITH KEY PERNR = WA_KNVP-PERNR.

      IF WA_KNVP-PARVW = ''.

      ELSEIF WA_KNVP-PARVW = 'ZA'.
        WA_DIALER-CC_PERNR = WA_KNVP-PERNR.
        WA_DIALER-CC_SNAME = WA_PA0001-SNAME.
        WA_DIALER-CC_TEL_NUMBER = WA_PA0105-USRID.
      ELSEIF WA_KNVP-PARVW = 'ZH'.
        WA_DIALER-CM_PERNR = WA_KNVP-PERNR.
        WA_DIALER-CM_SNAME = WA_PA0001-SNAME.
        WA_DIALER-CM_TEL_NUMBER = WA_PA0105-USRID.
      ELSEIF WA_KNVP-PARVW = 'L5'.
        WA_DIALER-SO_PERNR = WA_KNVP-PERNR.
        WA_DIALER-SO_SNAME = WA_PA0001-SNAME.
        WA_DIALER-SO_TEL_NUMBER = WA_PA0105-USRID.
      ELSEIF WA_KNVP-PARVW = 'L3'.
        WA_DIALER-SM_PERNR = WA_KNVP-PERNR.
        WA_DIALER-SM_SNAME = WA_PA0001-SNAME.
        WA_DIALER-SM_TEL_NUMBER = WA_PA0105-USRID.
      ENDIF.

    ENDLOOP.
    CLEAR:WA_KNVP.
    READ TABLE IT_T005T INTO WA_T005T WITH  KEY LAND1 = WA_DIALER-LAND1 BINARY SEARCH.
    IF SY-SUBRC = 0.

      WA_DIALER-LANDX  = WA_T005T-LANDX .

    ENDIF.

    READ TABLE IT_T005U INTO WA_T005U WITH  KEY LAND1 = WA_DIALER-LAND1
                                                BLAND = WA_DIALER-REGIO   BINARY SEARCH.
    IF SY-SUBRC = 0.
      WA_DIALER-REGIOX  = WA_T005U-BEZEI .
    ENDIF.

    READ TABLE IT_T005H INTO WA_T005H WITH  KEY LAND1 = WA_DIALER-LAND1
                                                REGIO = WA_DIALER-REGIO
                                                CITYC = WA_DIALER-CITYC    BINARY SEARCH.
    IF SY-SUBRC = 0.
      WA_DIALER-CITYCX  = WA_T005U-BEZEI .
    ENDIF.

    READ TABLE IT_TVK1 INTO WA_TVK1 WITH KEY KATR1 = WA_DIALER-KATR1.
    IF WA_TVK1 IS NOT INITIAL.
      WA_DIALER-TXT1 = WA_TVK1-TXT1.
      CLEAR: WA_TVK1.
    ENDIF.

    READ TABLE IT_TVK2 INTO WA_TVK2 WITH KEY KATR2 = WA_DIALER-KATR2.
    IF WA_TVK2 IS NOT INITIAL.
      WA_DIALER-TXT2 = WA_TVK2-TXT2.
      CLEAR: WA_TVK2.
    ENDIF.

    READ TABLE IT_TVK3 INTO WA_TVK3 WITH KEY KATR3 = WA_DIALER-KATR3.
    IF WA_TVK3 IS NOT INITIAL.
      WA_DIALER-TXT3 = WA_TVK3-TXT3.
      CLEAR: WA_TVK3.
    ENDIF.

    READ TABLE IT_TVK4 INTO WA_TVK4 WITH KEY KATR4 = WA_DIALER-KATR4.
    IF WA_TVK4 IS NOT INITIAL.
      WA_DIALER-TXT4 = WA_TVK4-TXT4.
      CLEAR: WA_TVK4.
    ENDIF.

    READ TABLE IT_TVK5 INTO WA_TVK5 WITH KEY KATR5 = WA_DIALER-KATR5.
    IF WA_TVK5 IS NOT INITIAL.
      WA_DIALER-TXT5 = WA_TVK5-TXT5.
      CLEAR: WA_TVK5.
    ENDIF.

    READ TABLE IT_TVK6 INTO WA_TVK6 WITH KEY KATR6 = WA_DIALER-KATR6.
    IF WA_TVK6 IS NOT INITIAL.
      WA_DIALER-TXT6 = WA_TVK6-TXT6.
      CLEAR: WA_TVK6.
    ENDIF.

    READ TABLE IT_TVK7 INTO WA_TVK7 WITH KEY KATR7 = WA_DIALER-KATR7.
    IF WA_TVK7 IS NOT INITIAL.
      WA_DIALER-TXT7 = WA_TVK7-TXT7.
      CLEAR: WA_TVK7.
    ENDIF.

    READ TABLE IT_TVK8 INTO WA_TVK8 WITH KEY KATR8 = WA_DIALER-KATR8.
    IF WA_TVK8 IS NOT INITIAL.
      WA_DIALER-TXT8 = WA_TVK8-TXT8.
      CLEAR: WA_TVK8.
    ENDIF.

    READ TABLE IT_TVK9 INTO WA_TVK9 WITH KEY KATR9 = WA_DIALER-KATR9.
    IF WA_TVK9 IS NOT INITIAL.
      WA_DIALER-TXT9 = WA_TVK9-TXT9.
      CLEAR: WA_TVK9.
    ENDIF.

    READ TABLE IT_TVK10 INTO WA_TVK10 WITH KEY KATR10 = WA_DIALER-KATR10.
    IF WA_TVK10 IS NOT INITIAL.
      WA_DIALER-TXT10 = WA_TVK10-TXT10.
      CLEAR: WA_TVK10.
    ENDIF.


    APPEND WA_DIALER TO IT_DIALER.

    CLEAR :WA_KNVP,WA_KNVV,WA_TVK1,WA_TVK6,WA_TVK7,WA_T005H,WA_T005T,WA_T005U,WA_DIALER,WA_PA0001,WA_PA0105,WA_TVKGGT1,WA_TVK2,WA_TVK3,WA_TVK4,WA_TVK5,WA_TVK8,WA_TVK9,WA_TVK10.

  ENDLOOP.


ENDFUNCTION.
