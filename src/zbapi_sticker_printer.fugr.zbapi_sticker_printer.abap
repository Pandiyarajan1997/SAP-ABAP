FUNCTION ZBAPI_STICKER_PRINTER.
*"----------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     VALUE(IN_MATNR) TYPE  MATNR OPTIONAL
*"     VALUE(IN_VKORG) TYPE  VKORG
*"  TABLES
*"      IT_STICKER STRUCTURE  ZSTR_STICKER_PRINTER OPTIONAL
*"----------------------------------------------------------------------
  TYPES:BEGIN OF TY_MARA,
          MATNR TYPE MARA-MATNR,
          GROES TYPE MARA-GROES,
        END OF TY_MARA.
  DATA: IT_MARA TYPE TABLE OF TY_MARA,
        WA_MARA TYPE TY_MARA.

  TYPES : BEGIN OF TY_MAKT,
            MATNR TYPE MAKT-MATNR,
            SPRAS TYPE CHAR2,
            MAKTX TYPE MAKT-MAKTX,
          END OF TY_MAKT.

  DATA:IT_MAKT TYPE TABLE OF TY_MAKT,
       WA_MAKT TYPE TY_MAKT.

  TYPES : BEGIN OF TY_A055,
            WERKS TYPE A055-WERKS,
            MATNR TYPE A055-MATNR,
            DATAB TYPE A055-DATAB,
            DATBI TYPE A055-DATBI,
            KNUMH TYPE A055-KNUMH,
            KSCHL TYPE A005-KSCHL,
          END OF TY_A055.

  DATA : IT_A055 TYPE TABLE OF TY_A055,
         WA_A005 TYPE TY_A055.
  TYPES:BEGIN OF TY_KONP,
          KNUMH TYPE KONP-KNUMH,
          KSCHL TYPE KONP-KSCHL,
          KBETR TYPE KONP-KBETR,
          KONWA TYPE KONP-KONWA,
        END OF TY_KONP.
  DATA: IT_KONP TYPE TABLE OF TY_KONP,
        WA_KONP TYPE TY_KONP.

  TYPES:BEGIN OF TY_FINAL,
          MATNR    TYPE MARA-MATNR,
          WERKS    TYPE A055-WERKS,
          MAKTX_EN TYPE MAKT-MAKTX,
          MAKTX_Z1 TYPE MAKT-MAKTX,
          GROES    TYPE MARA-GROES,
          KBETR    TYPE KONP-KBETR,
          KONWA    TYPE KONP-KONWA,
        END OF TY_FINAL.

  DATA:IT_FINAL   TYPE TABLE OF TY_FINAL,
       WA_FINAL   TYPE TY_FINAL,
       WA_STICKER TYPE ZSTR_STICKER_PRINTER.



  IF IN_MATNR IS NOT INITIAL.
    SELECT
    MATNR
    GROES
    INTO TABLE IT_MARA
    FROM MARA WHERE MSTAE = '' AND MTART IN ('FERT','HAWA','HALB') AND MATNR IN (IN_MATNR).

  ELSE.

    SELECT
        MATNR
        GROES
    INTO TABLE IT_MARA
    FROM MARA WHERE MSTAE = '' AND MTART IN ('FERT','HAWA','HALB').

  ENDIF.


  IF IT_MARA IS NOT INITIAL.

    SELECT
      MATNR
      SPRAS
      MAKTX
      INTO TABLE IT_MAKT FROM MAKT FOR ALL ENTRIES IN IT_MARA WHERE MATNR = IT_MARA-MATNR AND SPRAS IN ('EN','Z1').

    SELECT
      WERKS
      MATNR
      DATAB
      DATBI
      KNUMH
      KSCHL
      INTO TABLE IT_A055
      FROM A055 WHERE VKORGAU = IN_VKORG AND KSCHL = 'PI01' AND DATAB <= SY-DATUM AND DATBI >= SY-DATUM .
    IF IT_A055 IS NOT INITIAL.
      SELECT
        KNUMH
        KSCHL
        KBETR
        KONWA INTO TABLE IT_KONP
        FROM KONP FOR ALL ENTRIES IN IT_A055 WHERE KSCHL = IT_A055-KSCHL AND KNUMH = IT_A055-KNUMH.
    ENDIF.

  ENDIF.

  SORT IT_MARA ASCENDING BY MATNR.
  SORT IT_MAKT ASCENDING BY MATNR SPRAS.
  SORT IT_A055 ASCENDING BY MATNR KNUMH.
  SORT IT_KONP ASCENDING BY KNUMH.

  LOOP AT IT_MARA INTO WA_MARA.
    WA_FINAL-MATNR = WA_MARA-MATNR.
    WA_FINAL-GROES = WA_MARA-GROES.
    CLEAR WA_MAKT.
    READ TABLE IT_MAKT INTO WA_MAKT WITH KEY MATNR = WA_MARA-MATNR SPRAS = 'E' BINARY SEARCH.
    IF SY-SUBRC = 0.
      WA_FINAL-MAKTX_EN = WA_MAKT-MAKTX.
    ENDIF.
    CLEAR WA_MAKT.
    READ TABLE IT_MAKT INTO WA_MAKT WITH KEY MATNR = WA_MARA-MATNR SPRAS = 'Z' BINARY SEARCH.
    IF SY-SUBRC = 0.
      WA_FINAL-MAKTX_Z1 = WA_MAKT-MAKTX.
    ENDIF.
    CLEAR WA_MAKT.
    LOOP AT IT_A055 INTO WA_A005 WHERE MATNR = WA_MARA-MATNR.
      WA_FINAL-WERKS = WA_A005-WERKS.
      READ TABLE IT_KONP INTO WA_KONP WITH KEY KNUMH = WA_A005-KNUMH BINARY SEARCH.
      IF SY-SUBRC EQ 0.
        WA_FINAL-KBETR = WA_KONP-KBETR.
        WA_FINAL-KONWA = WA_KONP-KONWA.
      ENDIF.
      CLEAR : WA_A005,WA_KONP.
    ENDLOOP.
    APPEND WA_FINAL TO IT_STICKER.
    CLEAR:WA_FINAL,WA_MARA,WA_KONP,WA_A005,WA_MAKT.
  ENDLOOP.
  CLEAR : WA_A005,WA_FINAL,WA_KONP,WA_MAKT,WA_MARA,WA_STICKER.

ENDFUNCTION.
