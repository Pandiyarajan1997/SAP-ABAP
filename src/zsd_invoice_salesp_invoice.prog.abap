*&---------------------------------------------------------------------*
*& Report  ZSD_INVOICE_SALESP_INVOICE
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT ZSD_INVOICE_SALESP_INVOICE.



DATA: LV_BUKRS TYPE VBRK-BUKRS,
       W_AUX_FKDAT TYPE VBRK-FKDAT,
      W_FKART TYPE VBRK-FKART,
      W_VBELN TYPE VBRK-VBELN,
      W_KUNAG TYPE VBRK-KUNAG,
      W_MATNR TYPE VBRP-MATNR,
      W_CHARG TYPE LIPS-CHARG,                               " BATCH FOR INVOICE DETAILS
      W_INV_VKBUR TYPE VBRP-VKBUR,                           " SALES OFFICE FOR INVOICE
      W_SPART TYPE VBRK-SPART,

      COUNTER TYPE I VALUE '0',
      GT_LIST     TYPE VRM_VALUES,
      GWA_LIST    TYPE VRM_VALUE,
      GT_VALUES   TYPE TABLE OF DYNPREAD,                     " INTERNAL TABLE FOR LIST BOX
      GWA_VALUES  TYPE DYNPREAD,                              " WORK AREA FOR LIST BOX
      GV_SELECTED_VALUE(10) TYPE C,
      IT_FIELDCAT  TYPE TABLE OF SLIS_FIELDCAT_ALV,
      WA_FIELDCAT  LIKE LINE OF IT_FIELDCAT,
      IT_SORT TYPE SLIS_T_SORTINFO_ALV,
      WA_SORT LIKE LINE OF IT_SORT,
      G_SENT_TO_ALL TYPE SONV-FLAG,
      G_TAB_LINES   TYPE I,


      W_KUNNR TYPE KNC1-KUNNR,
      W_BUKRS TYPE KNC1-BUKRS,                                " VARIABLE DECLARATIONS FOR ACCOUNT BALANCES
      W_VKBUR TYPE KNVV-VKBUR,                                " SALES OFFICE FOR ACCOUNT BALANCES
*      W_GJAHR TYPE KNC1-GJAHR,
      W_RE_PERIOD TYPE BSID-MONAT,

      W_S_MATNR TYPE MARD-MATNR,                               " VARIABLE DECLARATIONS FOR STOCK
      W_S_BUKRS TYPE T001-BUKRS,
      W_S_HKONT TYPE BSEG-HKONT,
      W_S_WERKS TYPE T001W-WERKS,
      W_S_LGORT TYPE T001L-LGORT,
      W_S_CHARG TYPE MCHB-CHARG,
      W_S_BWTAR TYPE MBEW-BWTAR,
      W_S_BWART TYPE MSEG-BWART,
            W_S_DATUM TYPE MKPF-BUDAT.

*--------------------------------------------------------------*
* TYPES DECLARATION
*--------------------------------------------------------------*


TYPES: BEGIN OF TY_VBRK_VBRP,                           "FINAL TABLE TYPE FOR OVERVIEW REPORT
       FKDAT TYPE VBRK-FKDAT,
       SPART TYPE VBRK-SPART,
       VRKME TYPE VBRP-VRKME,
       VBELN TYPE VBRK-VBELN,

       FKART TYPE VBRK-FKART,
       KUNAG TYPE VBRK-KUNAG,
       KUNRG TYPE VBRK-KUNRG,
       VKORG TYPE VBRK-VKORG,
       VTWEG TYPE VBRK-VTWEG,
       NETWR TYPE VBRK-NETWR,
       SFAKN TYPE VBRK-SFAKN,
       KNKLI TYPE VBRK-KNKLI,
       MWSBK TYPE VBRK-MWSBK,
       FKSTO TYPE VBRK-FKSTO,
       KDGRP TYPE VBRK-KDGRP,
       POSNR TYPE VBRP-POSNR,
       VKBUR TYPE VBRP-VKBUR,
       MATNR TYPE VBRP-MATNR,
       FKIMG TYPE VBRP-FKIMG,
       VOLUM TYPE VBRP-VOLUM,
       VGBEL TYPE VBRP-VGBEL,
*       UMREN TYPE MARM-UMREN,
*       TOT_BAS TYPE VBRP-FKIMG,
*       BAS_UNIT(1) TYPE C,
*       TOTAL TYPE FKIMG,
*       TOT_QUA TYPE FKIMG,

       END OF TY_VBRK_VBRP,


       BEGIN OF TY_TVKBT,
       VKBUR TYPE TVKBT-VKBUR,
       BEZEI TYPE TVKBT-BEZEI,
       END OF TY_TVKBT,

       BEGIN OF TY_TSPAT,
       SPART TYPE TSPAT-SPART,
       VTEXT TYPE TSPAT-VTEXT,
       END OF TY_TSPAT,

       BEGIN OF TY_KNA1,
       KUNNR TYPE KNA1-KUNNR,
       NAME1 TYPE KNA1-NAME1,
       NAME2 TYPE KNA1-NAME2,
       END OF TY_KNA1,

       BEGIN OF TY_MARM,
       MATNR TYPE MARM-MATNR,
       MEINH TYPE MARM-MEINH,
       UMREZ TYPE MARM-UMREZ,
       UMREN TYPE MARM-UMREN,
       END OF TY_MARM,


       BEGIN OF TY_FINOVR,                           "FINAL TABLE TYPE FOR OVERVIEW REPORT
       FKDAT TYPE VBRK-FKDAT,
       VKBUR TYPE VBRP-VKBUR,
       KUNRG TYPE VBRK-KUNAG,
       SPART TYPE VBRK-SPART,
       VBELN TYPE VBRK-VBELN,
       CANDOC(1) TYPE C,
       FKART TYPE VBRK-FKART,
       KUNAG TYPE VBRK-KUNAG,
*       KUNRG TYPE VBRK-KUNRG,
       VKORG TYPE VBRK-VKORG,
       VTWEG TYPE VBRK-VTWEG,
       NETWR TYPE VBRK-NETWR,
       SFAKN TYPE VBRK-SFAKN,
       KNKLI TYPE VBRK-KNKLI,
       MWSBK TYPE VBRK-MWSBK,
       FKSTO TYPE VBRK-FKSTO,
       BTGEW TYPE LIKP-BTGEW, " Commended by Govind on 12.05.2014
       INV_VAL TYPE NETWR,
       POSNR TYPE VBRP-POSNR,

       BEZEI TYPE TVKBT-BEZEI,
       VTEXT TYPE TSPAT-VTEXT,
       NAME1 TYPE KNA1-NAME1,
       NAME2 TYPE KNA1-NAME2,
       M_VOLUM TYPE MARA-VOLUM,
       QTY_LTR TYPE VBRP-VOLUM,
       SUM_CUST TYPE KBETR,                             " SUM CUSTOMER WISE
       SUM_OFF TYPE KBETR,                              " SUM SALES OFFICE WISE
       V_COUNT TYPE I,
       FLAG(1) TYPE C,
       END OF TY_FINOVR.

TYPES: BEGIN OF TY_TVKBT2,
    VKBUR TYPE TVKBT-VKBUR,
    BEZEI TYPE TVKBT-BEZEI,
    END OF TY_TVKBT2,

    BEGIN OF TY_TSPAT2,
    SPART TYPE TSPAT-SPART,
    VTEXT TYPE TSPAT-VTEXT,
    END OF TY_TSPAT2,

    BEGIN OF TY_KNA12,

    KUNNR TYPE KNA1-KUNNR,
    NAME1 TYPE KNA1-NAME1,
    NAME2 TYPE KNA1-NAME2,
    END OF TY_KNA12,

    BEGIN OF TY_LIKP,
    VBELN TYPE LIKP-VBELN,
    BTGEW TYPE LIKP-BTGEW,
    END OF TY_LIKP,

    BEGIN OF TY_VBRP, " Added by Govind
       VBELN TYPE VBRP-VBELN,
      POSNR TYPE VBRP-POSNR,
      FKIMG TYPE VBRP-FKIMG,
       VOLUM TYPE VBRP-VOLUM,
      MATNR TYPE VBRP-MATNR,
      END OF TY_VBRP,

BEGIN OF TY_MARA,
  MATNR TYPE MARA-MATNR,
  VOLUM TYPE MARA-VOLUM,
  VOLEH TYPE MARA-VOLEH,
  END OF TY_MARA,

BEGIN OF TY_MARA1,
  MATNR TYPE MARA-MATNR,
  VOLUM TYPE MARA-VOLUM,
  VOLEH TYPE MARA-VOLEH,
  END OF TY_MARA1,

BEGIN OF TY_VDRK2,
BUKRS TYPE VBRK-BUKRS,
FKDAT TYPE VBRK-FKDAT,
FKART TYPE VBRK-FKART,
VBELN TYPE VBRP-VBELN,
LPOSNR TYPE LIPS-POSNR,
MATNR TYPE VBRP-MATNR,
FKIMG TYPE VBRP-FKIMG,
VGPOS TYPE VBRP-VGPOS,
VOLUM TYPE VBRP-VOLUM,
VOLEH TYPE VBRP-VOLEH,
PSTYV TYPE LIPS-PSTYV,
SPART TYPE  VBRK-SPART,
NETWR TYPE VBRK-NETWR,
KUNAG TYPE VBRK-KUNAG,
KUNRG TYPE VBRK-KUNRG,
SFAKN TYPE VBRK-SFAKN,
FKSTO TYPE VBRK-FKSTO,
KDGRP TYPE VBRK-KDGRP,
POSNR TYPE VBRP-POSNR,
ARKTX TYPE VBRP-ARKTX,
VRKME TYPE VBRP-VRKME,
VGBEL TYPE VBRP-VGBEL,
VKBUR TYPE VBRP-VKBUR,
VNETWR TYPE VBRP-NETWR,
LMATNR TYPE LIPS-MATNR,
LVBELN TYPE LIPS-VBELN,
LFIMG TYPE LIPS-LFIMG,
CHARG TYPE LIPS-CHARG,

DEL_FLAG(1) TYPE C,
PROC_KEY(1) TYPE C,

END OF TY_VDRK2,


   BEGIN OF TY_FINALDET,                              " FINAL TABLE TYPE FOR DETAIL REPORT
   FKDAT TYPE VBRK-FKDAT,
   VKBUR TYPE VBRP-VKBUR,


   BEZEI TYPE TVKBT-BEZEI,
   SPART TYPE VBRK-SPART,
   VTEXT TYPE TSPAT-VTEXT,
   VBELN TYPE VBRP-VBELN,
   LVBELN TYPE LIPS-VBELN,
   ORDER_NUM TYPE I,
   CHARG TYPE LIPS-CHARG,
   SORT_KEY(1) TYPE C,                               " SORT KEY is there so that the Header and will be shown first and items beneath it
   SORT_CRIT TYPE POSNR,
   CANDOC(1) TYPE C,
   POSNR TYPE VBRP-POSNR,


   MATNR TYPE VBRP-MATNR,
   ARKTX TYPE VBRP-ARKTX,
*   CHARG TYPE LIPS-CHARG,
   FKIMG TYPE VBRP-FKIMG,
   VOLUM TYPE VBRP-VOLUM,
   VOLEH TYPE VBRP-VOLEH,
   M_VOLUM TYPE MARA-VOLUM,
   T_VOLUM TYPE MARA-VOLUM,
   VRKME TYPE VBRP-VRKME,
   VNETWR TYPE VBRP-NETWR,
   NETWR(10) TYPE C,                                 " NETWR field has been declared as character field so that Net price fields for multiple batch split rows will be shown as '-'.
   KUNAG TYPE VBRK-KUNAG,
   NAME1 TYPE KNA1-NAME1,
   KUNRG TYPE VBRK-KUNRG,
   NAME2 TYPE KNA1-NAME1,
   SFAKN TYPE VBRK-SFAKN,
   LFIMG TYPE LIPS-LFIMG,
   FLAG2(2)  TYPE C,
   PROC_KEY(1) TYPE C,                               " PROCESS KEY

   END OF TY_FINALDET.





*--------------------------------------------------------------*
*INTERNAL TABLE DECLARATIONS
*--------------------------------------------------------------*



DATA: IT_VBRK TYPE TABLE OF TY_VBRK_VBRP,
IT_TVKBT TYPE TABLE OF TY_TVKBT,
IT_TSPAT  TYPE TABLE OF TY_TSPAT,
IT_KNA1 TYPE TABLE OF TY_KNA1,
IT_MARA TYPE TABLE OF TY_MARA,
IT_MARA1 TYPE TABLE OF TY_MARA1,
IT_VBRK2 TYPE TABLE OF TY_VDRK2,
IT_TVKBT2 TYPE TABLE OF TY_TVKBT2,
IT_TSPAT2  TYPE TABLE OF TY_TSPAT2,
IT_KNA12 TYPE TABLE OF TY_KNA12,
IT_MARM TYPE TABLE OF TY_MARM,
IT_LIKP TYPE TABLE OF TY_LIKP,
IT_VBRP TYPE TABLE OF TY_VBRP,
IT_FINOVR TYPE TABLE OF TY_FINOVR,
IT_FINALDET TYPE TABLE OF TY_FINALDET,

IT_DOCDATA TYPE STANDARD TABLE OF SODOCCHGI1,
IT_PACKLIST TYPE STANDARD TABLE OF SOPCKLSTI1,
IT_ATTACHMENT TYPE STANDARD TABLE OF SOLISTI1,
IT_BODY_MSG TYPE STANDARD TABLE OF SOLISTI1,
IT_RECEIVERS TYPE STANDARD TABLE OF SOMLRECI1,
IT_RSPARAMS TYPE STANDARD TABLE OF RSPARAMS.                                   " INTERNAL TABLE FOR TAKING SELECTION SCREEN VALUES FOR STOCK



DATA : LAYOUT TYPE SLIS_LAYOUT_ALV.                   "Changed by Savariar S as on 08/01/2015.

*--------------------------------------------------------------*
*WORK AREA DECLARATIONS
*--------------------------------------------------------------*

DATA: WA_VBRK TYPE TY_VBRK_VBRP,
      WA_TVKBT TYPE  TY_TVKBT,
      WA_TSPAT  TYPE TY_TSPAT,
      WA_KNA1 TYPE TY_KNA1,
      WA_MARA TYPE TY_MARA,
       WA_MARA1 TYPE TY_MARA1,
      WA_VBRK2 TYPE TY_VDRK2,
      WA_TVKBT2 TYPE  TY_TVKBT2,
      WA_TSPAT2  TYPE TY_TSPAT2,
      WA_KNA12 TYPE TY_KNA12,
      WA_FINALDET LIKE LINE OF IT_FINALDET,
      WA_FINOVR LIKE LINE OF IT_FINOVR,
      WA_MARM LIKE LINE OF IT_MARM,
      WA_LIKP LIKE LINE OF IT_LIKP,
      WA_VBRP LIKE LINE OF IT_VBRP,
*      WA_FINOVR1 LIKE LINE OF IT_FINOVR,
      WA_DOCDATA LIKE LINE OF IT_DOCDATA,
      WA_PACKLIST LIKE LINE OF IT_PACKLIST,
      WA_ATTACHMENT LIKE LINE OF IT_ATTACHMENT,
      WA_BODY_MSG LIKE LINE OF IT_BODY_MSG,
      WA_RECEIVERS LIKE LINE OF IT_RECEIVERS,
      WA_RSPARAMS LIKE LINE OF IT_RSPARAMS.                                      " WORK AREA FOR TAKING SELECTION SCREEN VALUES FOR STOCK



**************** Sales Pro Data  OR Secondary Sales ************************************** Data Declaration ***

TYPES: BEGIN OF FY_FINOVR,                           "FINAL TABLE TYPE FOR OVERVIEW REPORT
       FKDAT TYPE VBRK-FKDAT,
       VKBUR TYPE VBRP-VKBUR,
       KUNRG TYPE VBRK-KUNAG,
       SPART TYPE VBRK-SPART,
       VBELN TYPE VBRK-VBELN,
       CANDOC(1) TYPE C,
       FKART TYPE VBRK-FKART,
       KUNAG TYPE VBRK-KUNAG,
*       KUNRG TYPE VBRK-KUNRG,
       VKORG TYPE VBRK-VKORG,
       VTWEG TYPE VBRK-VTWEG,
       NETWR TYPE VBRK-NETWR,
       SFAKN TYPE VBRK-SFAKN,
       KNKLI TYPE VBRK-KNKLI,
       MWSBK TYPE VBRK-MWSBK,
       FKSTO TYPE VBRK-FKSTO,
       BTGEW TYPE LIKP-BTGEW, " Commended by Govind on 12.05.2014
       INV_VAL TYPE NETWR,
       POSNR TYPE VBRP-POSNR,

       BEZEI TYPE TVKBT-BEZEI,
       VTEXT TYPE TSPAT-VTEXT,
       NAME1 TYPE KNA1-NAME1,
       NAME2 TYPE KNA1-NAME2,
       M_VOLUM TYPE MARA-VOLUM,
       QTY_LTR TYPE VBRP-VOLUM,
       SUM_CUST TYPE KBETR,                             " SUM CUSTOMER WISE
       SUM_OFF TYPE KBETR,                              " SUM SALES OFFICE WISE
       V_COUNT TYPE I,
       FLAG(1) TYPE C,
       END OF FY_FINOVR.

TYPES: BEGIN OF TY_ZVBRKP,
        VKORG TYPE ZSKU_VBRK-VKORG,
        WERKS TYPE ZSKU_VBRK-WERKS,
        SKU_ID TYPE ZSKU_VBRK-SKU_ID,
        DOC_YEAR TYPE ZSKU_VBRK-DOC_YEAR,
        VBELN TYPE ZSKU_VBRK-VBELN,
        FKART TYPE ZSKU_VBRK-FKART,
        KUNNR TYPE ZSKU_VBRK-KUNNR,
        FKDAT TYPE ZSKU_VBRK-FKDAT,
        TOTAL_DISCOUNT_AMOUNT TYPE ZSKU_VBRK-TOTAL_DISCOUNT_AMOUNT,
        NET_AMOUNT TYPE ZSKU_VBRK-NET_AMOUNT,
        TAX_AMOUNT TYPE ZSKU_VBRK-TAX_AMOUNT,
        GROSS_AMT TYPE ZSKU_VBRK-GROSS_AMT,
        ISCANCELLED TYPE ZSKU_VBRK-ISCANCELLED,
        VTWEG TYPE ZSKU_VBRK-VTWEG,
          DIVISION TYPE ZSKU_VBRK-DIVISION,
*        POSNR TYPE ZSKU_VBRP-POSNR,
        VOLUM TYPE ZSKU_VBRK-VOLUM,
        BRGEW TYPE ZSKU_VBRK-BRGEW,
        LTR TYPE ZSKU_VBRP-LTR,
       END OF TY_ZVBRKP.

DATA: GT_SKUFINOVR TYPE STANDARD TABLE OF  FY_FINOVR,
      WA_SKUFINOVR TYPE                    FY_FINOVR,
      GT_ZVBRKP TYPE STANDARD TABLE OF  TY_ZVBRKP,
      WA_ZVBRKP TYPE                    TY_ZVBRKP.


*******************************************************************************************

SELECTION-SCREEN: BEGIN OF BLOCK B1.

PARAMETERS: PS_PARM AS LISTBOX VISIBLE LENGTH 20 USER-COMMAND ABC MODIF ID TB1.            " SELECTION SCREEN PARAMETER FOR INVOICE AND CUSTOMER BALANCES

SELECTION-SCREEN: END OF BLOCK B1.



SELECTION-SCREEN: BEGIN OF BLOCK B2 WITH FRAME TITLE TEXT-T01.

PARAMETERS : R1 RADIOBUTTON GROUP G1 USER-COMMAND UC1 MODIF ID TB2 ,          " SELECTION SCREEN FOR INVOICE

             R2 RADIOBUTTON GROUP G1 MODIF ID TB2 DEFAULT 'X'.

SELECTION-SCREEN SKIP.

SELECT-OPTIONS: SO_BUKRS FOR LV_BUKRS NO INTERVALS,
                SO_FKDAT FOR W_AUX_FKDAT MODIF ID TB2 DEFAULT SY-DATUM OBLIGATORY,        " SELECTION SCREEN ELEMENTS FOR INVOICE
                SO_FKART  FOR W_FKART MODIF ID TB2,
                SO_VBELN FOR W_VBELN MODIF ID TB2,
                SO_KUNAG FOR W_KUNAG MODIF ID TB2,
                SO_MATNR FOR W_MATNR MODIF ID TB2,
                SO_CHARG FOR W_CHARG MODIF ID TB5,
                SO_VKBU2 FOR W_INV_VKBUR MODIF ID TB2,                                    " SELECT OPTIONS FOR SALES OFFICE IN invoice
                SO_SPART FOR W_SPART MODIF ID TB2.

SELECTION-SCREEN SKIP.

PARAMETERS: P_CB AS CHECKBOX USER-COMMAND CBC MODIF ID TB2.
PARAMETERS: P_SR AS CHECKBOX USER-COMMAND CBC MODIF ID TB2.

SELECTION-SCREEN: END OF BLOCK B2.

INITIALIZATION.

 GWA_LIST-KEY = '1'.
  GWA_LIST-TEXT = 'INVOICE WITH SALES PRO'.
  APPEND GWA_LIST TO GT_LIST.
  CLEAR: GWA_LIST.


  CALL FUNCTION 'VRM_SET_VALUES'
    EXPORTING
      ID              = 'PS_PARM'
      VALUES          = GT_LIST
    EXCEPTIONS
      ID_ILLEGAL_NAME = 1
      OTHERS          = 2.


  IF PS_PARM IS INITIAL.                                                 " TO SET SET THE INITIAL VALUE SHOWN IN LIST BOX AS 'INVOICE'

    PS_PARM = '1'.

  ENDIF.



  LOOP AT SCREEN.


    IF SCREEN-NAME = 'PS_PARM'.
      SCREEN-INPUT = 0.
      MODIFY SCREEN.
    ENDIF.

  ENDLOOP.


*ENDIF.


AT SELECTION-SCREEN OUTPUT.

  IF R1 = 'X'.
    LOOP AT SCREEN.
      IF SCREEN-NAME = 'SO_CHARG-LOW'.
        SCREEN-ACTIVE = 1.
        SCREEN-INPUT = 0.
        MODIFY SCREEN.
      ENDIF.

      IF SCREEN-NAME = 'SO_CHARG-HIGH'.
        SCREEN-ACTIVE = 1.
        SCREEN-INPUT = 0.
        MODIFY SCREEN.
      ENDIF.
      IF SCREEN-NAME = 'SO_MATNR-LOW'.
        SCREEN-ACTIVE = 1.
        SCREEN-INPUT = 0.
        MODIFY SCREEN.
      ENDIF.
      IF SCREEN-NAME = 'SO_MATNR-HIGH'.
        SCREEN-ACTIVE = 1.
        SCREEN-INPUT = 0.
        MODIFY SCREEN.
      ENDIF.

      IF SCREEN-GROUP1 = 'TB1'.
        SCREEN-INPUT = 0.
        MODIFY SCREEN.
      ENDIF.

    ENDLOOP.
  ENDIF.



  IF R2 = 'X'.
    LOOP AT SCREEN.
      IF SCREEN-NAME = 'SO_MATNR'.
        SCREEN-ACTIVE = 1.
        SCREEN-INPUT = 1.
        MODIFY SCREEN.
      ENDIF.

      IF SCREEN-NAME = 'SO_CHARG'.
        SCREEN-ACTIVE = 1.
        SCREEN-INPUT = 1.
        MODIFY SCREEN.
      ENDIF.

      IF SCREEN-NAME = 'PS_PARM'.
        SCREEN-INPUT = 0.
        MODIFY SCREEN.
      ENDIF.

    ENDLOOP.
  ENDIF.


*--------------------------------------------------------------*
*At Selection Screen Ouput ON List Box PS_PARM
*--------------------------------------------------------------*


AT SELECTION-SCREEN ON PS_PARM.
  CLEAR: GWA_VALUES, GT_VALUES.
  REFRESH GT_VALUES.
  GWA_VALUES-FIELDNAME = 'PS_PARM'.
  APPEND GWA_VALUES TO GT_VALUES.
  CALL FUNCTION 'DYNP_VALUES_READ'
    EXPORTING
      DYNAME             = SY-CPROG
      DYNUMB             = SY-DYNNR
      TRANSLATE_TO_UPPER = 'X'
    TABLES
      DYNPFIELDS         = GT_VALUES.

  READ TABLE GT_VALUES INDEX 1 INTO GWA_VALUES.
  IF SY-SUBRC = 0 AND GWA_VALUES-FIELDVALUE IS NOT INITIAL.
    READ TABLE GT_LIST INTO GWA_LIST
                      WITH KEY KEY = GWA_VALUES-FIELDVALUE.
    IF SY-SUBRC = 0.
      GV_SELECTED_VALUE = GWA_LIST-TEXT.
    ENDIF.
  ENDIF.


START-OF-SELECTION.

  IF R1 = 'X'.

    PERFORM DATA_RETRIEVAL_OVERVIEW.
    PERFORM AUTHCHECK_OVERVIEW.
    PERFORM BUILD_FIELDCATALOG_OVERVIEW.
    PERFORM BUILD_ALV_OVERVIEW.

  ELSEIF R2 = 'X'.

    PERFORM DATA_RETRIEVAL_DETAIL.
    PERFORM AUTHCHECK_DETAIL.
    PERFORM BUILD_FIELDCATALOG_DETAIL.
    PERFORM BUILD_ALV_DETAIL.


  ENDIF.



*&---------------------------------------------------------------------*
*&      Form  DATA_RETRIEVAL_OVERVIEW
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM DATA_RETRIEVAL_OVERVIEW .

  IF P_SR <> 'X' AND P_CB <> 'X'. " Added by Goivnd On 05/06/2014
    SELECT   VBRK~BUKRS  "#EC CI_DB_OPERATION_OK[2768887]    "Added by SPLABAP during code remediation
              VBRK~FKDAT
                VBRK~SPART
                VBRK~VBELN
                VBRK~FKART
                VBRK~KUNAG
                VBRK~KUNRG
                VBRK~VKORG
                VBRK~VTWEG
                VBRK~NETWR
                VBRK~SFAKN
                VBRK~KNKLI
                VBRK~MWSBK
                VBRK~FKSTO
                VBRK~KDGRP
                VBRP~POSNR
                VBRP~VRKME
                VBRP~VKBUR
                VBRP~MATNR
                VBRP~FKIMG
                VBRP~VGBEL
                VBRP~VOLUM
                INTO CORRESPONDING FIELDS OF TABLE IT_VBRK
                FROM VBRK JOIN VBRP ON VBRK~VBELN = VBRP~VBELN   "#EC CI_DB_OPERATION_OK[2768887]    "Added by SPLABAP during code remediation
                WHERE VBRK~BUKRS IN SO_BUKRS AND VBRK~FKDAT IN SO_FKDAT AND VBRK~VBELN IN SO_VBELN
        AND VBRK~KUNAG IN SO_KUNAG AND VBRP~VKBUR IN SO_VKBU2 AND VBRK~SPART IN SO_SPART AND FKART <> 'YBRE' AND VBRK~FKART IN SO_FKART AND FKSTO <> 'X' AND VBRK~KDGRP <> '09' .
      SORT IT_VBRK.   "Added by SPLABAP during code remediation
      DELETE ADJACENT DUPLICATES FROM IT_VBRK COMPARING VBELN .



*********** Sales Pro & Sceondary Sales ************ Selected Data
    SELECT ZSKU_VBRK~VKORG
           ZSKU_VBRK~WERKS
           ZSKU_VBRK~SKU_ID
           ZSKU_VBRK~DOC_YEAR
           ZSKU_VBRK~VBELN
           ZSKU_VBRK~FKART
           ZSKU_VBRK~KUNNR
           ZSKU_VBRK~FKDAT
           ZSKU_VBRK~TOTAL_DISCOUNT_AMOUNT
           ZSKU_VBRK~NET_AMOUNT
           ZSKU_VBRK~TAX_AMOUNT
           ZSKU_VBRK~GROSS_AMT
           ZSKU_VBRK~ISCANCELLED
           ZSKU_VBRK~VTWEG
           ZSKU_VBRK~DIVISION
           ZSKU_VBRK~VOLUM
           ZSKU_VBRK~BRGEW
           ZSKU_VBRP~LTR
      INTO TABLE GT_ZVBRKP
      FROM ZSKU_VBRK
      INNER JOIN ZSKU_VBRP
      ON ( ZSKU_VBRK~VKORG = ZSKU_VBRP~VKORG AND
           ZSKU_VBRK~WERKS = ZSKU_VBRP~WERKS AND
           ZSKU_VBRK~SKU_ID = ZSKU_VBRP~SKU_ID AND
           ZSKU_VBRK~DOC_YEAR = ZSKU_VBRP~DOC_YEAR AND
           ZSKU_VBRK~VBELN = ZSKU_VBRP~VBELN )
      WHERE ZSKU_VBRK~VKORG IN SO_BUKRS
      AND   ZSKU_VBRK~SKU_ID IN SO_VKBU2
    AND ZSKU_VBRK~DIVISION IN SO_SPART
      AND ZSKU_VBRK~FKART IN SO_FKART
      AND ZSKU_VBRK~FKDAT IN SO_FKDAT
      AND ZSKU_VBRK~VBELN IN SO_VBELN
      AND  ZSKU_VBRK~KUNNR IN SO_KUNAG.

    SORT GT_ZVBRKP.   "Added by SPLABAP during code remediation
    DELETE ADJACENT DUPLICATES FROM GT_ZVBRKP COMPARING VBELN.

  ELSEIF P_CB = 'X'. " Added by Goivnd On 05/06/2014
    SELECT    VBRK~BUKRS   "#EC CI_DB_OPERATION_OK[2768887]    "Added by SPLABAP during code remediation
             VBRK~FKDAT
             VBRK~SPART
             VBRK~VBELN
             VBRK~FKART
             VBRK~KUNAG
             VBRK~KUNRG
             VBRK~VKORG
             VBRK~VTWEG
             VBRK~NETWR
             VBRK~SFAKN
             VBRK~KNKLI
             VBRK~MWSBK
             VBRK~FKSTO
             VBRP~POSNR
             VBRP~VRKME
             VBRP~VKBUR
             VBRP~MATNR
             VBRP~FKIMG
             VBRP~VGBEL
             VBRP~VOLUM
             INTO CORRESPONDING FIELDS OF TABLE IT_VBRK
             FROM VBRK JOIN VBRP ON VBRK~VBELN = VBRP~VBELN  "#EC CI_DB_OPERATION_OK[2768887]    "Added by SPLABAP during code remediation
             WHERE VBRK~BUKRS IN SO_BUKRS AND VBRK~FKDAT IN SO_FKDAT AND VBRK~VBELN IN SO_VBELN
     AND VBRK~KUNAG IN SO_KUNAG AND VBRP~VKBUR IN SO_VKBU2 AND VBRK~SPART IN SO_SPART AND VBRK~FKART IN SO_FKART AND FKSTO = 'X'.

    SORT IT_VBRK.   "Added by SPLABAP during code remediation
    DELETE ADJACENT DUPLICATES FROM IT_VBRK COMPARING VBELN .

  ELSEIF P_SR = 'X' . " Added by Goivnd On 05/06/2014
    SELECT  VBRK~BUKRS   "#EC CI_DB_OPERATION_OK[2768887]    "Added by SPLABAP during code remediation
        VBRK~FKDAT
        VBRK~SPART
        VBRK~VBELN
        VBRK~FKART
        VBRK~KUNAG
        VBRK~KUNRG
        VBRK~VKORG
        VBRK~VTWEG
        VBRK~NETWR
        VBRK~SFAKN
        VBRK~KNKLI
        VBRK~MWSBK
        VBRK~FKSTO
        VBRP~POSNR
        VBRP~VRKME
        VBRP~VKBUR
        VBRP~MATNR
        VBRP~FKIMG
        VBRP~VGBEL
        VBRP~VOLUM
        INTO CORRESPONDING FIELDS OF TABLE IT_VBRK
        FROM VBRK JOIN VBRP ON VBRK~VBELN = VBRP~VBELN  "#EC CI_DB_OPERATION_OK[2768887]    "Added by SPLABAP during code remediation
        WHERE VBRK~BUKRS IN SO_BUKRS AND VBRK~FKDAT IN SO_FKDAT AND VBRK~VBELN IN SO_VBELN
AND VBRK~KUNAG IN SO_KUNAG AND VBRP~VKBUR IN SO_VKBU2 AND VBRK~SPART IN SO_SPART AND FKART = 'YBRE' AND VBRK~FKART IN SO_FKART AND FKSTO <> 'X' .
    SORT IT_VBRK.   "Added by SPLABAP during code remediation
    DELETE ADJACENT DUPLICATES FROM IT_VBRK COMPARING VBELN .
  ENDIF.

IF NOT IT_VBRK[] IS INITIAL.
    SELECT VBELN POSNR FKIMG VOLUM MATNR FROM VBRP INTO  CORRESPONDING FIELDS OF TABLE IT_VBRP FOR ALL ENTRIES IN IT_VBRK WHERE VBELN = IT_VBRK-VBELN.
  ENDIF.

  SELECT MATNR VOLUM VOLEH FROM MARA INTO CORRESPONDING FIELDS OF TABLE IT_MARA FOR ALL ENTRIES IN IT_VBRP WHERE MATNR = IT_VBRP-MATNR.

  SELECT VBELN
         BTGEW FROM LIKP INTO TABLE IT_LIKP FOR ALL ENTRIES IN IT_VBRK
         WHERE VBELN = IT_VBRK-VGBEL.


  LOOP AT GT_ZVBRKP INTO  WA_ZVBRKP.
    WA_VBRK-FKDAT = WA_ZVBRKP-FKDAT.
    WA_VBRK-SPART = WA_ZVBRKP-DIVISION.
    WA_VBRK-VKBUR = WA_ZVBRKP-SKU_ID.
    WA_VBRK-KUNRG = WA_ZVBRKP-KUNNR.
    WA_VBRK-VBELN = WA_ZVBRKP-VBELN.
    WA_VBRK-FKART = WA_ZVBRKP-FKART.
    WA_VBRK-KUNAG = WA_ZVBRKP-KUNNR.
    WA_VBRK-KUNRG = WA_ZVBRKP-KUNNR.
    WA_VBRK-VKORG = WA_ZVBRKP-VKORG.
    WA_VBRK-VTWEG = WA_ZVBRKP-VTWEG.
    WA_VBRK-NETWR = WA_ZVBRKP-NET_AMOUNT.
    WA_VBRK-MWSBK = WA_ZVBRKP-TAX_AMOUNT .
    WA_SKUFINOVR-INV_VAL = WA_ZVBRKP-NET_AMOUNT + WA_SKUFINOVR-MWSBK .        " goving calc
    WA_VBRK-VOLUM =   WA_ZVBRKP-VOLUM.
*    WA_VBRK-VTWEG = WA_ZVBRKP-BRGEW.
    APPEND WA_VBRK TO IT_VBRK.
    CLEAR WA_VBRK.
  ENDLOOP.





  TYPES: BEGIN OF TY_VBRK_TEMP,
       SPART TYPE VBRK-SPART,
       VKBUR TYPE VBRP-VKBUR,
       KUNAG TYPE VBRK-KUNAG,
       KUNRG TYPE VBRK-KUNRG,
  END OF TY_VBRK_TEMP.

  DATA: IT_VBRK_TEMP TYPE STANDARD TABLE OF TY_VBRK_TEMP,
        WA_VBRK_TEMP LIKE LINE OF IT_VBRK_TEMP.

  LOOP AT IT_VBRK INTO WA_VBRK.

    MOVE-CORRESPONDING WA_VBRK TO WA_VBRK_TEMP.
    APPEND WA_VBRK_TEMP TO IT_VBRK_TEMP.
    CLEAR: WA_VBRK, WA_VBRK_TEMP.

  ENDLOOP.

  SORT IT_VBRK_TEMP BY SPART VKBUR KUNAG KUNRG.

  DELETE ADJACENT DUPLICATES FROM IT_VBRK_TEMP COMPARING ALL FIELDS.

  IF IT_VBRK_TEMP IS NOT INITIAL.

    SELECT VKBUR
           BEZEI
           FROM TVKBT INTO TABLE IT_TVKBT
           FOR ALL ENTRIES IN IT_VBRK_TEMP
           WHERE VKBUR = IT_VBRK_TEMP-VKBUR
           AND SPRAS = 'EN'.

    SELECT SPART
           VTEXT
           FROM TSPAT INTO TABLE IT_TSPAT
           FOR ALL ENTRIES IN IT_VBRK_TEMP
           WHERE SPART = IT_VBRK_TEMP-SPART
           AND SPRAS = 'EN'.

    SELECT KUNNR
           NAME1
           NAME2
           FROM KNA1 INTO TABLE IT_KNA1
           FOR ALL ENTRIES IN IT_VBRK_TEMP
           WHERE KUNNR = IT_VBRK_TEMP-KUNRG AND KUNNR = IT_VBRK_TEMP-KUNAG.

  ENDIF.




  LOOP AT IT_VBRK INTO WA_VBRK.

    WA_FINOVR-FKDAT = WA_VBRK-FKDAT.
    WA_FINOVR-SPART = WA_VBRK-SPART.
    WA_FINOVR-VBELN = WA_VBRK-VBELN.
    WA_FINOVR-FKART = WA_VBRK-FKART.
    WA_FINOVR-KUNAG = WA_VBRK-KUNAG.
    WA_FINOVR-KUNRG = WA_VBRK-KUNRG.
    WA_FINOVR-VKORG = WA_VBRK-VKORG.
    WA_FINOVR-VTWEG = WA_VBRK-VTWEG.
    WA_FINOVR-NETWR = WA_VBRK-NETWR.
    WA_FINOVR-SFAKN = WA_VBRK-SFAKN.
    WA_FINOVR-VKBUR = WA_VBRK-VKBUR.
    WA_FINOVR-MWSBK = WA_VBRK-MWSBK.
    WA_FINOVR-INV_VAL = WA_VBRK-NETWR + WA_VBRK-MWSBK.


     LOOP AT IT_VBRP INTO WA_VBRP WHERE VBELN = WA_VBRK-VBELN.
           WA_FINOVR-QTY_LTR =  WA_FINOVR-QTY_LTR + WA_VBRP-VOLUM.
    ENDLOOP.

    IF WA_VBRK-VKORG = '6000'.
      WA_FINOVR-QTY_LTR =  WA_VBRK-VOLUM.
    ENDIF.



   IF WA_VBRK-VKORG = '6000'.
*     SELECT SINGLE BRGEW     "Commented by SPLABAP during code remediation
       SELECT BRGEW
       FROM ZSKU_VBRK UP TO 1 ROWS
       INTO WA_FINOVR-BTGEW WHERE VBELN = WA_VBRK-VBELN ORDER BY PRIMARY KEY. "Added by SPLABAP during code remediation
       ENDSELECT. "Added by SPLABAP during code remediation


     ENDIF.

    READ TABLE IT_LIKP INTO WA_LIKP WITH KEY VBELN = WA_VBRK-VGBEL.

    IF SY-SUBRC = 0.

      WA_FINOVR-BTGEW = WA_LIKP-BTGEW.

    ENDIF.

    READ TABLE IT_TVKBT INTO WA_TVKBT WITH KEY VKBUR = WA_VBRK-VKBUR.
    IF SY-SUBRC = 0.
      WA_FINOVR-BEZEI = WA_TVKBT-BEZEI.
    ENDIF.

    READ TABLE IT_TSPAT INTO WA_TSPAT WITH KEY SPART = WA_VBRK-SPART.

    IF SY-SUBRC = 0.
      WA_FINOVR-VTEXT = WA_TSPAT-VTEXT.
    ENDIF.

    READ TABLE IT_KNA1 INTO WA_KNA1 WITH KEY KUNNR = WA_VBRK-KUNAG .

    IF SY-SUBRC = 0.
      WA_FINOVR-NAME1 = WA_KNA1-NAME1.
      WA_FINOVR-NAME2 = WA_KNA1-NAME1.
    ENDIF.

    APPEND WA_FINOVR TO IT_FINOVR.
    CLEAR WA_FINOVR.
  ENDLOOP.


  DATA: IT_TEMP TYPE STANDARD TABLE OF TY_FINOVR,
         WA_TEMP LIKE LINE OF IT_TEMP.


  DATA: CNT TYPE I VALUE '0'.

  IF P_CB EQ 'X'.

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      IF WA_FINOVR-SFAKN IS NOT INITIAL.

        WA_FINOVR-CANDOC = 'X'.

        MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING CANDOC.

        APPEND WA_FINOVR TO IT_TEMP.

        CLEAR WA_FINOVR.

      ENDIF.

    ENDLOOP.


    LOOP AT IT_FINOVR INTO WA_FINOVR.

      READ TABLE IT_TEMP INTO WA_TEMP WITH KEY SFAKN = WA_FINOVR-VBELN.

      IF SY-SUBRC = 0.

        MODIFY IT_FINOVR FROM WA_TEMP TRANSPORTING CANDOC.

      ENDIF.

    ENDLOOP.

  ENDIF.


  IF P_CB NE 'X'.

    LOOP AT IT_FINOVR INTO WA_FINOVR.

      CNT = CNT + 1.
      IF WA_FINOVR-SFAKN IS NOT INITIAL.

        WA_TEMP-SFAKN = WA_FINOVR-SFAKN.

        APPEND WA_TEMP TO IT_TEMP.

        DELETE IT_FINOVR INDEX CNT.

        CNT = CNT - 1.

      ENDIF.
    ENDLOOP.

    LOOP AT IT_TEMP INTO WA_TEMP.

      DELETE IT_FINOVR WHERE VBELN = WA_TEMP-SFAKN.

    ENDLOOP.

    DELETE IT_FINOVR WHERE VKBUR = ''.                        "

  ENDIF.


  DATA: SUM_CUST TYPE NETWR,
        SUM_OFF TYPE NETWR.




  SORT IT_FINOVR BY FKDAT VKBUR KUNRG.

  LOOP AT IT_FINOVR INTO WA_FINOVR.

    SUM_CUST = WA_FINOVR-NETWR + SUM_CUST + WA_FINOVR-MWSBK.


    AT END OF KUNRG.

      WA_FINOVR-SUM_CUST = SUM_CUST.

      MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING SUM_CUST.
      CLEAR: SUM_CUST.
    ENDAT.

  ENDLOOP.


  LOOP AT IT_FINOVR INTO WA_FINOVR.




    COUNTER = COUNTER + 1.
    SUM_OFF = WA_FINOVR-NETWR + SUM_OFF + WA_FINOVR-MWSBK.

    AT END OF VKBUR.


      WA_FINOVR-V_COUNT = COUNTER.
      WA_FINOVR-SUM_OFF = SUM_OFF.

      MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_COUNT SUM_OFF.
      CLEAR: COUNTER, SUM_OFF.


    ENDAT.


  ENDLOOP.


*  LOOP AT IT_FINOVR INTO WA_FINOVR.
*    IF WA_FINOVR-V_COUNT IS INITIAL.
*      WA_FINOVR-V_COUNT = '-'.
*      MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING V_COUNT.
*    ENDIF.
*    CLEAR:WA_FINOVR-V_COUNT.
*
*  ENDLOOP.

  IF IT_FINOVR IS INITIAL.


    MESSAGE 'No Data Exists for the Input' TYPE 'S' DISPLAY LIKE 'E'.

    STOP.

  ENDIF.

ENDFORM.                    "DATA_RETRIEVAL_OVERVIEW






" DATA_RETRIEVAL_OVERVIEW
*&---------------------------------------------------------------------*
*&      Form  BUILD_FIELDCATALOG_OVERVIEW
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  AUTHCHECK_OVERVIEW
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM AUTHCHECK_OVERVIEW .

  LOOP AT IT_FINOVR INTO WA_FINOVR.
    AUTHORITY-CHECK OBJECT 'ZINVOICE'
    ID 'ZVKBUR' FIELD WA_FINOVR-VKBUR
    ID 'ZSPART' DUMMY
    ID 'ACTVT' FIELD '03'.
    IF SY-SUBRC NE 0.
      WA_FINOVR-FLAG = 'x' .
      MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FLAG.
      MESSAGE 'NO AUTHORIZATION FOR CERTAIN RECORDS' TYPE 'S'.
    ENDIF.

    AUTHORITY-CHECK OBJECT 'ZINVOICE'
    ID 'ZVKBUR' DUMMY
    ID 'ZSPART' FIELD WA_FINOVR-SPART
    ID 'ACTVT' FIELD '03'.
    IF SY-SUBRC NE 0.
      WA_FINOVR-FLAG = 'x' .
      MODIFY IT_FINOVR FROM WA_FINOVR TRANSPORTING FLAG.
      MESSAGE 'NO AUTHORIZATION FOR CERTAIN RECORDS' TYPE 'S'.
    ENDIF.
    CLEAR: WA_FINOVR.
  ENDLOOP.

  DELETE IT_FINOVR WHERE FLAG = 'x'.


ENDFORM.                    " AUTHCHECK_OVERVIEW



*&---------------------------------------------------------------------*
*&      Form  BUILD_FIELDCATALOG_OVERVIEW
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM BUILD_FIELDCATALOG_OVERVIEW .

  WA_FIELDCAT-FIELDNAME   = 'FKDAT'.
  WA_FIELDCAT-SELTEXT_M   = 'BILLING DATE'.
  WA_FIELDCAT-COL_POS     = 1.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR  WA_FIELDCAT.

  WA_SORT-FIELDNAME = 'FKDAT'.
  WA_SORT-UP = 'X'.
  WA_SORT-GROUP = 'X'.
  APPEND WA_SORT TO IT_SORT.
  CLEAR WA_SORT.

  WA_FIELDCAT-FIELDNAME   = 'VKBUR'.
  WA_FIELDCAT-SELTEXT_M   = 'SALES OFFICE'.
  WA_FIELDCAT-COL_POS     = 2.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR  WA_FIELDCAT.

  WA_SORT-FIELDNAME = 'VKBUR'.
  WA_SORT-UP = 'X'.
  WA_SORT-GROUP = 'X'.
  APPEND WA_SORT TO IT_SORT.
  CLEAR WA_SORT.

  WA_FIELDCAT-FIELDNAME   = 'BEZEI'.
  WA_FIELDCAT-SELTEXT_M   = 'SALES DESCRIPTION'.
  WA_FIELDCAT-COL_POS     = 3.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR  WA_FIELDCAT.


  WA_FIELDCAT-FIELDNAME   = 'VKORG'.
  WA_FIELDCAT-SELTEXT_M   = 'SALES ORGANIZATION'.
  WA_FIELDCAT-COL_POS     = 4.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR  WA_FIELDCAT.

  WA_FIELDCAT-FIELDNAME   = 'VTWEG'.
  WA_FIELDCAT-SELTEXT_M   = 'DISTRIBUTION CHANNEL'.
  WA_FIELDCAT-COL_POS     = 5.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR  WA_FIELDCAT.

  WA_FIELDCAT-FIELDNAME   = 'SPART'.
  WA_FIELDCAT-SELTEXT_M   = 'SALES DIVISION'.
  WA_FIELDCAT-COL_POS     = 6.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR  WA_FIELDCAT.

  WA_FIELDCAT-FIELDNAME   = 'VTEXT'.
  WA_FIELDCAT-SELTEXT_M   = 'SALES DIVISION DESCRIPTION'.
  WA_FIELDCAT-COL_POS     = 7.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR  WA_FIELDCAT.

  WA_FIELDCAT-FIELDNAME   = 'VBELN'.
  WA_FIELDCAT-SELTEXT_M   = 'BILLING DOCUMENT'.
  WA_FIELDCAT-COL_POS     = 8.
  WA_FIELDCAT-HOTSPOT     = 'X'.
  WA_FIELDCAT-CFIELDNAME   = 'VBELN'.
  WA_FIELDCAT-CTABNAME    = 'VBRP'.

  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR  WA_FIELDCAT.


  WA_FIELDCAT-FIELDNAME   = 'CANDOC'.
  WA_FIELDCAT-SELTEXT_M   = 'CANCELLED DOCUMENT'.
  WA_FIELDCAT-COL_POS     = 9.

  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR  WA_FIELDCAT.



  WA_FIELDCAT-FIELDNAME   = 'FKART'.
  WA_FIELDCAT-SELTEXT_M   = 'BILLING TYPE'.
  WA_FIELDCAT-COL_POS     = 10.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR  WA_FIELDCAT.
*

  WA_FIELDCAT-FIELDNAME   = 'KUNRG'.
  WA_FIELDCAT-SELTEXT_M   = 'SOLD-TO-PARTY'.
  WA_FIELDCAT-COL_POS     = 11.
  WA_FIELDCAT-CFIELDNAME   = 'KUNRG'.
  WA_FIELDCAT-CTABNAME    = 'VBRK'.

  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR  WA_FIELDCAT.

*  WA_FIELDCAT-FIELDNAME   = 'KUNAG'.
*  WA_FIELDCAT-SELTEXT_M   = 'SOLD-TO-PARTY'.
*  WA_FIELDCAT-COL_POS     = 11.
*  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
*  WA_FIELDCAT-CTABNAME    = 'VBRK'.
*
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

  WA_FIELDCAT-FIELDNAME   = 'NAME1'.
  WA_FIELDCAT-SELTEXT_M   = 'SP NAME'.
  WA_FIELDCAT-COL_POS     = 10.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR  WA_FIELDCAT.




*  WA_FIELDCAT-FIELDNAME   = 'NAME2'.
*  WA_FIELDCAT-SELTEXT_M   = 'PY NAME'.
*  WA_FIELDCAT-COL_POS     = 12.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

  WA_FIELDCAT-FIELDNAME   = 'QTY_LTR'. "  Added By Govind On 08/01/2015
  WA_FIELDCAT-SELTEXT_M   = 'TOTAL IN LITES/KGS'.
  WA_FIELDCAT-COL_POS     = 13.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR  WA_FIELDCAT.
*
  WA_FIELDCAT-FIELDNAME   = 'BTGEW'.
  WA_FIELDCAT-SELTEXT_M   = 'TOTAL WEIGHT'.
  WA_FIELDCAT-COL_POS     = 14.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR  WA_FIELDCAT.



  WA_FIELDCAT-FIELDNAME   = 'NETWR'.
  WA_FIELDCAT-SELTEXT_M   = 'NET VALUE'.
  WA_FIELDCAT-COL_POS     = 15.
  WA_FIELDCAT-DO_SUM      = 'X'.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR  WA_FIELDCAT.

  WA_FIELDCAT-FIELDNAME   = 'MWSBK'.
  WA_FIELDCAT-SELTEXT_M   = 'TAX VALUE'.
  WA_FIELDCAT-COL_POS     = 16.
  WA_FIELDCAT-DO_SUM      = 'X'.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR  WA_FIELDCAT.

  WA_FIELDCAT-FIELDNAME   = 'INV_VAL'.
  WA_FIELDCAT-SELTEXT_M   = 'INVOICE VALUE'.
  WA_FIELDCAT-COL_POS     = 17.
  WA_FIELDCAT-DO_SUM      = 'X'.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'SUM_CUST'.
*  WA_FIELDCAT-SELTEXT_M   = 'CUSTOMER SUM'.
*  WA_FIELDCAT-COL_POS     = 18.
*  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_FIELDCAT-FIELDNAME   = 'SUM_OFF'.
*  WA_FIELDCAT-SELTEXT_M   = ' SALES OFFICE SUM'.
*  WA_FIELDCAT-COL_POS     = 19.
*  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*
*  WA_FIELDCAT-FIELDNAME   = 'V_COUNT'.
*  WA_FIELDCAT-SELTEXT_M   = 'COUNTER'.
*  WA_FIELDCAT-COL_POS     = 20.
*  WA_FIELDCAT-DO_SUM      = 'X'.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


ENDFORM.                    "BUILD_FIELDCATALOG_OVERVIEW

" BUILD_FIELDCATALOG_OVERVIEW
*&---------------------------------------------------------------------*
*&      Form  BUILD_ALV_OVERVIEW
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM BUILD_ALV_OVERVIEW .

  LAYOUT-COLWIDTH_OPTIMIZE = 'X'.                          "ADDED BY SAVARIAR S AS ON 08/01/2015

  LAYOUT-ZEBRA = 'X'.



  LOOP AT IT_FINOVR TRANSPORTING NO FIELDS WHERE CANDOC = 'X'.

    EXIT.

  ENDLOOP.

  IF SY-SUBRC NE 0.

    READ TABLE IT_FIELDCAT INTO WA_FIELDCAT WITH KEY FIELDNAME = 'CANDOC'.

    IF SY-SUBRC = 0.

      WA_FIELDCAT-NO_OUT = 'X'.
      WA_FIELDCAT-TECH   = 'X'.

      MODIFY IT_FIELDCAT FROM WA_FIELDCAT INDEX SY-TABIX.

    ENDIF.

  ENDIF.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
  EXPORTING
*   I_INTERFACE_CHECK                 = ' '
*   I_BYPASSING_BUFFER                = ' '
*   I_BUFFER_ACTIVE                   = ' '
      I_CALLBACK_PROGRAM                = SY-REPID
*      I_CALLBACK_PF_STATUS_SET          = 'PF_STATUS_GET'
      I_CALLBACK_USER_COMMAND           = 'MY_USER_COMMAND'
*   I_CALLBACK_TOP_OF_PAGE            = ' '
*   I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*   I_CALLBACK_HTML_END_OF_LIST       = ' '
*   I_STRUCTURE_NAME                  =
*   I_BACKGROUND_ID                   = ' '
*   I_GRID_TITLE                      =
*   I_GRID_SETTINGS                   =
   IS_LAYOUT                         = LAYOUT
      IT_FIELDCAT                       = IT_FIELDCAT
*   IT_EXCLUDING                      =
*   IT_SPECIAL_GROUPS                 =
    IT_SORT                           = IT_SORT
*   IT_FILTER                         =
*   IS_SEL_HIDE                       =
*   I_DEFAULT                         = 'X'
*   I_SAVE                            = ' '
*   IS_VARIANT                        =
*   IT_EVENTS                         =
*   IT_EVENT_EXIT                     =
*   IS_PRINT                          =
*   IS_REPREP_ID                      =
*   I_SCREEN_START_COLUMN             = 0
*   I_SCREEN_START_LINE               = 0
*   I_SCREEN_END_COLUMN               = 0
*   I_SCREEN_END_LINE                 = 0
*   I_HTML_HEIGHT_TOP                 = 0
*   I_HTML_HEIGHT_END                 = 0
*   IT_ALV_GRAPHICS                   =
*   IT_HYPERLINK                      =
*   IT_ADD_FIELDCAT                   =
*   IT_EXCEPT_QINFO                   =
*   IR_SALV_FULLSCREEN_ADAPTER        =
* IMPORTING
*   E_EXIT_CAUSED_BY_CALLER           =
*   ES_EXIT_CAUSED_BY_USER            =
    TABLES
      T_OUTTAB                          = IT_FINOVR
* EXCEPTIONS
*   PROGRAM_ERROR                     = 1
*   OTHERS                            = 2
            .
  IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.


ENDFORM.                    "BUILD_ALV_OVERVIEW

*&---------------------------------------------------------------------*
*&      Form  MY_STATUS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->RT_EXTAB   text
*----------------------------------------------------------------------*
FORM PF_STATUS_GET USING RT_EXTAB TYPE SLIS_T_EXTAB.

  SET PF-STATUS 'MY_STATUS'.

ENDFORM.                    "MY_STATUS

*&---------------------------------------------------------------------*
*&      Form  MY_USER_COMMAND
*&---------------------------------------------------------------------*
*      FOR SENDING EMAIL WITH EXCEL ATTACHMENT
*----------------------------------------------------------------------*
*      -->R_UCOMM    text
*----------------------------------------------------------------------*
FORM MY_USER_COMMAND USING R_UCOMM LIKE SY-UCOMM RS_SELFIELD TYPE SLIS_SELFIELD.

*  break-point.

  CASE R_UCOMM.

    WHEN '&MAI'.

      PERFORM BUILD_XLS_DATA_TABLE.

      PERFORM SEND_MAIL.

    WHEN '&IC1'.

      IF RS_SELFIELD-FIELDNAME = 'VBELN'.

        SET PARAMETER ID 'VF' FIELD RS_SELFIELD-VALUE.
        CALL TRANSACTION 'VF03' AND SKIP FIRST SCREEN.
      ENDIF.

  ENDCASE.
ENDFORM.                    "MY_USER_COMMAND
*&---------------------------------------------------------------------*
*&      Form  BUILD_XLS_DATA_TABLE
*&---------------------------------------------------------------------*
*       FOR BUILDING EXCEL DATA
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM BUILD_XLS_DATA_TABLE .

  CLASS CL_ABAP_CHAR_UTILITIES DEFINITION LOAD.
  CONSTANTS:
  CON_TAB  TYPE C VALUE CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB,
  CON_CRET TYPE C VALUE CL_ABAP_CHAR_UTILITIES=>CR_LF.

  CONCATENATE 'BILLING DATE '
               'SALES OFFICE'
               'SALES OFFICE DESCRIPTION'
               'SALES ORGANIZATION'
               'DISTRIBUTION CHANNEL'
               'SALES DIVISION'
               'SALES DIVISION DESCRIPTION'
               'BILLING DOCUMENT NO'
               'BILLING TYPE'
               'PAYER'
               'PAYER NAME'
               'TOT LTR'
               'NET VALUE'
               'TAX VALUE'
               'INVOICE VALUE'
               'CUSTOMER SUM'
               'SL OFFICE SUM'
               'COUNTER'
  INTO  WA_ATTACHMENT SEPARATED BY  CON_TAB.

  CONCATENATE CON_CRET
  WA_ATTACHMENT
  INTO WA_ATTACHMENT.

  APPEND WA_ATTACHMENT TO IT_ATTACHMENT.
  CLEAR  WA_ATTACHMENT.


  DATA:    LV_STR_VOLUM TYPE STRING,
           LV_STR_BTGEW TYPE STRING,
            LV_STRING_OVR TYPE STRING,
            LV_MWSBK TYPE STRING,
            LV_INV_VAL TYPE STRING,
            LV_SUM_CUST TYPE STRING,
            LV_SUM_OFF TYPE STRING,
            LV_COUNT TYPE STRING.
  LOOP AT IT_FINOVR INTO WA_FINOVR.

    MOVE: WA_FINOVR-QTY_LTR TO LV_STR_VOLUM,
           WA_FINOVR-BTGEW TO LV_STR_BTGEW,
          WA_FINOVR-NETWR TO LV_STRING_OVR,
          WA_FINOVR-MWSBK TO LV_MWSBK,
          WA_FINOVR-INV_VAL TO LV_INV_VAL,
          WA_FINOVR-SUM_CUST TO LV_SUM_CUST,
          WA_FINOVR-SUM_OFF TO LV_SUM_OFF,
          WA_FINOVR-V_COUNT TO LV_COUNT.

    CONCATENATE  WA_FINOVR-FKDAT WA_FINOVR-VKBUR WA_FINOVR-BEZEI WA_FINOVR-VKORG WA_FINOVR-VTWEG WA_FINOVR-SPART WA_FINOVR-VTEXT  WA_FINOVR-VBELN WA_FINOVR-FKART
    WA_FINOVR-KUNRG WA_FINOVR-NAME2  LV_STR_BTGEW  LV_STRING_OVR LV_MWSBK LV_INV_VAL
    LV_SUM_CUST LV_SUM_OFF LV_COUNT
  INTO WA_ATTACHMENT SEPARATED BY CON_TAB.

    CONCATENATE CON_CRET WA_ATTACHMENT
    INTO WA_ATTACHMENT.
    APPEND WA_ATTACHMENT TO IT_ATTACHMENT.
    CLEAR WA_ATTACHMENT.

  ENDLOOP.

ENDFORM.                    " BUILD_XLS_DATA_TABLE
*&---------------------------------------------------------------------*
*&      Form  SEND_MAIL
*&---------------------------------------------------------------------*
*       FOR SENDING MAIL WITH EXCEL ATTACHMENT
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SEND_MAIL .

  WA_DOCDATA-OBJ_NAME = 'MAIL WITH EXCEL ATTACHMENT'.
  WA_DOCDATA-OBJ_DESCR = 'SAP Reports'.

  PERFORM BODY_OF_MAIL USING: SPACE, 'Hello ',
  'Please find the attached excel sheet'.

  DESCRIBE TABLE IT_BODY_MSG LINES G_TAB_LINES.
  WA_PACKLIST-HEAD_START = 1.
  WA_PACKLIST-HEAD_NUM   = 0.
  WA_PACKLIST-BODY_START = 1.
  WA_PACKLIST-BODY_NUM   = G_TAB_LINES.
  WA_PACKLIST-DOC_TYPE   = 'RAW'.
  APPEND WA_PACKLIST TO IT_PACKLIST.
  CLEAR  WA_PACKLIST.

  "Write Packing List for Attachment
  WA_PACKLIST-TRANSF_BIN = SPACE.
  WA_PACKLIST-HEAD_START = 1.
  WA_PACKLIST-HEAD_NUM   = 1.
  WA_PACKLIST-BODY_START = G_TAB_LINES + 1.
  DESCRIBE TABLE IT_ATTACHMENT LINES WA_PACKLIST-BODY_NUM.
  WA_PACKLIST-DOC_TYPE   = 'XLS'.
  WA_PACKLIST-OBJ_DESCR  = 'SAP Invoice Details'.
  WA_PACKLIST-OBJ_NAME   = 'XLS_ATTACHMENT'.
  WA_PACKLIST-DOC_SIZE   = WA_PACKLIST-BODY_NUM * 255.
  APPEND WA_PACKLIST TO IT_PACKLIST.
  CLEAR  WA_PACKLIST.

  APPEND LINES OF IT_ATTACHMENT TO IT_BODY_MSG.
  "Fill the document data and get size of attachment
  WA_DOCDATA-OBJ_LANGU  = SY-LANGU.
  READ TABLE IT_BODY_MSG INTO WA_BODY_MSG INDEX G_TAB_LINES.
  WA_DOCDATA-DOC_SIZE = ( G_TAB_LINES - 1 ) * 255 + STRLEN( WA_BODY_MSG ).

  "Receivers List.
  WA_RECEIVERS-REC_TYPE   = 'U'.  "Internet address
  WA_RECEIVERS-RECEIVER   = 'no-reply@sheenlac.in'.
  WA_RECEIVERS-COM_TYPE   = 'INT'.
  WA_RECEIVERS-NOTIF_DEL  = 'X'.
  WA_RECEIVERS-NOTIF_NDEL = 'X'.
  APPEND WA_RECEIVERS TO IT_RECEIVERS .
  CLEAR:WA_RECEIVERS.

*   WA_RECEIVERS-REC_TYPE   = 'U'.  "Internet address
*  WA_RECEIVERS-RECEIVER   = 'govindarajanm@sheenlac.in'.
*  WA_RECEIVERS-COM_TYPE   = 'INT'.
*  WA_RECEIVERS-NOTIF_DEL  = 'X'.
*  WA_RECEIVERS-NOTIF_NDEL = 'X'.
*  APPEND WA_RECEIVERS TO IT_RECEIVERS .
*  CLEAR:WA_RECEIVERS.

  CALL FUNCTION 'SO_NEW_DOCUMENT_ATT_SEND_API1'                                 " FUNCTION MODULE FOR MAIL SENDING
    EXPORTING
      DOCUMENT_DATA                    = WA_DOCDATA
      PUT_IN_OUTBOX                    = 'X'
      COMMIT_WORK                      = 'X'
   IMPORTING
      SENT_TO_ALL                      = G_SENT_TO_ALL
*   NEW_OBJECT_ID                    =
    TABLES
      PACKING_LIST                     = IT_PACKLIST
*   OBJECT_HEADER                    =
*   CONTENTS_BIN                     =
     CONTENTS_TXT                     = IT_BODY_MSG
*   CONTENTS_HEX                     =
*   OBJECT_PARA                      =
*   OBJECT_PARB                      =
      RECEIVERS                        = IT_RECEIVERS
  EXCEPTIONS
     TOO_MANY_RECEIVERS               = 1
     DOCUMENT_NOT_SENT                = 2
     DOCUMENT_TYPE_NOT_EXIST          = 3
     OPERATION_NO_AUTHORIZATION       = 4
     PARAMETER_ERROR                  = 5
     X_ERROR                          = 6
     ENQUEUE_ERROR                    = 7
     OTHERS                           = 8
            .
  IF SY-SUBRC <> 0.

    WRITE: 'FAILURE'.

  ELSE.

    WAIT UP TO 2 SECONDS.

    SUBMIT RSCONN01 WITH MODE = 'INT'
        WITH OUTPUT = 'X'
        AND RETURN.
  ENDIF.
ENDFORM.                    " SEND_MAIL

*&---------------------------------------------------------------------*
*&      Form  BODY_OF_MAIL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM BODY_OF_MAIL USING L_MESSAGE.

  WA_BODY_MSG = L_MESSAGE.
  APPEND WA_BODY_MSG TO IT_BODY_MSG.
  CLEAR  WA_BODY_MSG.

ENDFORM.                    " BODY_OF_MAIL
*&---------------------------------------------------------------------*
*&      Form  DATA_RETRIEVAL_DETAIL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM DATA_RETRIEVAL_DETAIL .

  TYPES: BEGIN OF TY_LIPS,
         VBELN TYPE LIPS-VBELN,
         VKBUR TYPE LIPS-VKBUR,                             "SALES OFFICE FROM LIPS TABLE
         MATNR TYPE LIPS-MATNR,
         SPART TYPE LIPS-SPART,
         POSNR TYPE LIPS-POSNR,
         PSTYV TYPE LIPS-PSTYV,
         LFIMG TYPE LIPS-LFIMG,
         CHARG TYPE LIPS-CHARG,
         VRKME TYPE LIPS-VRKME,
    END OF TY_LIPS.

*
  DATA: IT_LIPS TYPE STANDARD TABLE OF TY_LIPS,
        WA_LIPS LIKE LINE OF IT_LIPS.

  TYPES: BEGIN OF TY_VBRP2,
         VBELN TYPE VBRP-VBELN,
         VGBEL TYPE VBRP-VGBEL,
         POSNR TYPE VBRP-POSNR,
         FKIMG TYPE VBRP-FKIMG,
         VOLUM TYPE VBRP-VOLUM,
         VOLEH TYPE VBRP-VOLEH,
         NETWR TYPE VBRP-NETWR,
  END OF TY_VBRP2.

  DATA: IT_VBRP2 TYPE STANDARD TABLE OF TY_VBRP2,
        WA_VBRP2 LIKE LINE OF IT_VBRP2.


******************* Sales Pro and Secondary Sales ******* Data Declaraction *********


  TYPES: BEGIN OF TY_VBRPK,
    VKORG TYPE ZSKU_VBRK-VKORG,
    FKDAT TYPE ZSKU_VBRK-FKDAT,
    FKART TYPE ZSKU_VBRK-FKART,
    VBELN TYPE ZSKU_VBRK-VBELN,
    MATNR TYPE ZSKU_VBRP-MATNR,
    ARKTX TYPE ZSKU_VBRP-ARKTX,
    MEINS TYPE ZSKU_VBRP-MEINS,
    FKIMG TYPE ZSKU_VBRP-FKIMG,
    NTWEW TYPE ZSKU_VBRP-NTWEW,
    LTR TYPE ZSKU_VBRP-LTR,
    DIVISION TYPE ZSKU_VBRK-DIVISION,
    KUNNR TYPE ZSKU_VBRK-KUNNR,
    ISCANCELLED TYPE ZSKU_VBRK-ISCANCELLED,
    POSNR TYPE ZSKU_VBRP-POSNR,
    CASEORTIN TYPE ZSKU_VBRP-CASEORTIN,
     SKU_ID TYPE ZSKU_VBRP-SKU_ID,
     NET_AMOUNT TYPE ZSKU_VBRP-NET_AMOUNT,
    TOTAL_AMOUNT TYPE ZSKU_VBRP-TOTAL_AMOUNT,
    CHARG TYPE ZSKU_VBATCH-CHARG,
    END OF TY_VBRPK.

  DATA : IT_VBRPK TYPE TABLE OF TY_VBRPK,
         WA_VBRPK TYPE TY_VBRPK.

********************************************
*BREAK-POINT.

  IF P_SR <> 'X' AND P_CB <> 'X'.

    SELECT VBRK~BUKRS  "#EC CI_DB_OPERATION_OK[2768887]    "Added by SPLABAP during code remediation
           VBRK~FKDAT
           VBRK~FKART
          VBRP~VBELN
          LIPS~POSNR
          VBRP~MATNR
          VBRP~FKIMG
          VBRP~VGPOS
           VBRP~VOLUM
          VBRP~VOLEH
          LIPS~PSTYV
          VBRK~SPART
          VBRK~NETWR
          VBRK~KUNAG
          VBRK~KUNRG
          VBRK~SFAKN
          VBRK~FKSTO
          VBRK~KDGRP
          VBRP~POSNR
          VBRP~ARKTX
          VBRP~VRKME
          VBRP~VGBEL
          VBRP~VKBUR
          VBRP~NETWR " Modified by Govind on 02/08/2014 Time 12:01 PM
          LIPS~MATNR
          LIPS~VBELN
          LIPS~LFIMG
          LIPS~CHARG
          INTO TABLE IT_VBRK2
          FROM VBRP JOIN VBRK ON VBRP~VBELN = VBRK~VBELN  "#EC CI_DB_OPERATION_OK[2768887]    "Added by SPLABAP during code remediation
                    JOIN LIPS ON VBRP~VGBEL = LIPS~VBELN
                    AND   VBRP~MATNR = LIPS~MATNR
          WHERE     VBRK~BUKRS IN SO_BUKRS
                AND VBRK~FKDAT IN SO_FKDAT
                AND VBRP~MATNR IN SO_MATNR
                AND VBRP~VKBUR IN SO_VKBU2
                AND VBRP~VBELN IN SO_VBELN
                AND VBRK~KUNAG IN SO_KUNAG
                AND VBRP~SPART IN SO_SPART
      AND VBRK~FKSTO <> 'X' AND FKART <> 'YBRE'
      AND  VBRK~FKART IN SO_FKART
                AND LIPS~CHARG IN SO_CHARG AND VBRK~KDGRP <> '09'.

*    BREAK-POINT.
******************* Sales Pro and Secondary Sales ******* Data Selection *********
    SELECT  ZSKU_VBRK~VKORG
       ZSKU_VBRK~FKDAT
       ZSKU_VBRK~FKART
       ZSKU_VBRK~VBELN
       ZSKU_VBRP~MATNR
       ZSKU_VBRP~ARKTX
      ZSKU_VBRP~MEINS
       ZSKU_VBRP~FKIMG
      ZSKU_VBRP~NTWEW
       ZSKU_VBRP~LTR
       ZSKU_VBRK~DIVISION
       ZSKU_VBRK~KUNNR
       ZSKU_VBRK~ISCANCELLED
      ZSKU_VBRP~POSNR
      ZSKU_VBRP~CASEORTIN
      ZSKU_VBRP~SKU_ID
      ZSKU_VBRP~NET_AMOUNT
      ZSKU_VBRK~NET_AMOUNT
*      ZSKU_VBATCH~CHARG
                INTO TABLE IT_VBRPK
      FROM ZSKU_VBRK
      INNER JOIN ZSKU_VBRP
      ON ( ZSKU_VBRK~VKORG = ZSKU_VBRP~VKORG AND
           ZSKU_VBRK~WERKS = ZSKU_VBRP~WERKS AND
           ZSKU_VBRK~SKU_ID = ZSKU_VBRP~SKU_ID AND
           ZSKU_VBRK~DOC_YEAR = ZSKU_VBRP~DOC_YEAR AND
           ZSKU_VBRK~VBELN = ZSKU_VBRP~VBELN )
                     WHERE
       ZSKU_VBRK~VKORG IN SO_BUKRS
AND   ZSKU_VBRK~SKU_ID IN SO_VKBU2
AND ZSKU_VBRK~DIVISION IN SO_SPART
AND ZSKU_VBRK~FKART IN SO_FKART
AND ZSKU_VBRK~FKDAT IN SO_FKDAT
AND ZSKU_VBRK~VBELN IN SO_VBELN
AND  ZSKU_VBRK~KUNNR IN SO_KUNAG
      AND ZSKU_VBRP~MATNR IN SO_MATNR
                            AND ZSKU_VBRP~CHARG IN SO_CHARG .
SORT IT_VBRPK.    "Added by SPLABAP during code remediation
DELETE ADJACENT DUPLICATES FROM IT_VBRPK COMPARING VBELN MATNR DIVISION .
********************************

  ELSEIF P_CB = 'X'.
    SELECT VBRK~BUKRS  "#EC CI_DB_OPERATION_OK[2768887]    "Added by SPLABAP during code remediation
       VBRK~FKDAT
           VBRK~FKART
          VBRP~VBELN
          LIPS~POSNR
          VBRP~MATNR
          VBRP~FKIMG
          VBRP~VGPOS
           VBRP~VOLUM
          VBRP~VOLEH
          LIPS~PSTYV
          VBRK~SPART
          VBRK~NETWR
          VBRK~KUNAG
          VBRK~KUNRG
          VBRK~SFAKN
           VBRK~FKSTO
           VBRK~kdgrp
          VBRP~POSNR
          VBRP~ARKTX
          VBRP~VRKME
          VBRP~VGBEL
          VBRP~VKBUR
          VBRP~NETWR " Modified by Govind on 02/08/2014 Time 12:01 PM
          LIPS~MATNR
          LIPS~VBELN
          LIPS~LFIMG
          LIPS~CHARG
          INTO TABLE IT_VBRK2
          FROM VBRP JOIN VBRK ON VBRP~VBELN = VBRK~VBELN   "#EC CI_DB_OPERATION_OK[2768887]    "Added by SPLABAP during code remediation
                    JOIN LIPS ON VBRP~VGBEL = LIPS~VBELN
                    AND   VBRP~MATNR = LIPS~MATNR
          WHERE     VBRK~BUKRS IN SO_BUKRS
                AND VBRK~FKDAT IN SO_FKDAT
                AND VBRP~MATNR IN SO_MATNR
                AND VBRP~VKBUR IN SO_VKBU2
                AND VBRP~VBELN IN SO_VBELN
                AND VBRK~KUNAG IN SO_KUNAG
                AND VBRP~SPART IN SO_SPART
      AND VBRK~FKSTO = 'X'
      AND  VBRK~FKART IN SO_FKART
                AND LIPS~CHARG IN SO_CHARG .

  ELSEIF P_SR = 'X' .
    SELECT VBRK~BUKRS  "#EC CI_DB_OPERATION_OK[2768887]    "Added by SPLABAP during code remediation
           VBRK~FKDAT
           VBRK~FKART
          VBRP~VBELN
          LIPS~POSNR
          VBRP~MATNR
          VBRP~FKIMG
          VBRP~VGPOS
           VBRP~VOLUM
          VBRP~VOLEH
          LIPS~PSTYV
          VBRK~SPART
          VBRK~NETWR
          VBRK~KUNAG
          VBRK~KUNRG
          VBRK~SFAKN
          VBRK~FKSTO
          VBRK~kdgrp
          VBRP~POSNR
          VBRP~ARKTX
          VBRP~VRKME
          VBRP~VGBEL
          VBRP~VKBUR
          VBRP~NETWR " Modified by Govind on 02/08/2014 Time 12:01 PM
          LIPS~MATNR
          LIPS~VBELN
          LIPS~LFIMG
          LIPS~CHARG
          INTO TABLE IT_VBRK2
          FROM VBRP JOIN VBRK ON VBRP~VBELN = VBRK~VBELN   "#EC CI_DB_OPERATION_OK[2768887]    "Added by SPLABAP during code remediation
                    JOIN LIPS ON VBRP~VGBEL = LIPS~VBELN
                    AND   VBRP~MATNR = LIPS~MATNR
          WHERE    VBRK~BUKRS IN SO_BUKRS
                AND  VBRK~FKDAT IN SO_FKDAT
                AND VBRP~MATNR IN SO_MATNR
                AND VBRP~VKBUR IN SO_VKBU2
                AND VBRP~VBELN IN SO_VBELN
                AND VBRK~KUNAG IN SO_KUNAG
                AND VBRP~SPART IN SO_SPART
      AND VBRK~FKSTO <> 'X' AND FKART = 'YBRE'
      AND  VBRK~FKART IN SO_FKART
                AND LIPS~CHARG IN SO_CHARG .
  ENDIF.
*BREAK-POINT.
*               AND VBRP-CHARG IN LIPS~CHARG.
*SORT IT_VBRK2  BY CHARG  .
*DELETE ADJACENT DUPLICATES FROM IT_VBRK2 COMPARING VBELN  MATNR.

******************* Sales Pro and Secondary Sales ******* Data Selection *********
  LOOP AT IT_VBRPK INTO WA_VBRPK.
    WA_VBRK2-BUKRS = WA_VBRPK-VKORG.
    WA_VBRK2-FKDAT = WA_VBRPK-FKDAT.
    WA_VBRK2-FKART = WA_VBRPK-FKART.
    WA_VBRK2-VBELN = WA_VBRPK-VBELN.
    WA_VBRK2-MATNR = WA_VBRPK-MATNR.
    WA_VBRK2-ARKTX = WA_VBRPK-ARKTX.
    WA_VBRK2-VRKME = WA_VBRPK-MEINS.
    WA_VBRK2-FKIMG  = WA_VBRPK-FKIMG.
    WA_VBRK2-VOLUM = WA_VBRPK-LTR.
    WA_VBRK2-SPART = WA_VBRPK-DIVISION.
    WA_VBRK2-KUNAG = WA_VBRPK-KUNNR.
    WA_VBRK2-KUNRG = WA_VBRPK-KUNNR.
    WA_VBRK2-POSNR = WA_VBRPK-POSNR.
    WA_VBRK2-VKBUR = WA_VBRPK-SKU_ID.
    WA_VBRK2-NETWR  = WA_VBRPK-NET_AMOUNT.
    WA_VBRK2-CHARG = WA_VBRPK-CHARG.
    WA_VBRK2-VNETWR = WA_VBRPK-NET_AMOUNT.
    APPEND WA_VBRK2 TO IT_VBRK2 .
    CLEAR WA_VBRK2 .
  ENDLOOP.
******************* End Sales Pro and Secondary Sales ******* Data Selection *********


  DATA: IT_TEMP_VBRK2 TYPE STANDARD TABLE OF TY_VDRK2,
        WA_TEMP_VBRK2 LIKE LINE OF IT_TEMP_VBRK2.

  MOVE IT_VBRK2 TO IT_TEMP_VBRK2.

  SORT IT_TEMP_VBRK2 BY SPART VKBUR KUNAG.

  DELETE ADJACENT DUPLICATES FROM IT_TEMP_VBRK2 COMPARING SPART VKBUR KUNAG.

  IF IT_VBRK2 IS NOT INITIAL.

    SELECT VKBUR
           BEZEI
           FROM TVKBT INTO TABLE IT_TVKBT2
           FOR ALL ENTRIES IN IT_TEMP_VBRK2
           WHERE VKBUR = IT_TEMP_VBRK2-VKBUR
           AND SPRAS = 'EN'.

    SELECT SPART
           VTEXT
           FROM TSPAT INTO TABLE IT_TSPAT2
           FOR ALL ENTRIES IN IT_TEMP_VBRK2
           WHERE SPART = IT_TEMP_VBRK2-SPART
           AND SPRAS = 'EN'.

    SELECT KUNNR
           NAME1
           NAME2
           FROM KNA1 INTO TABLE IT_KNA12
           FOR ALL ENTRIES IN IT_TEMP_VBRK2
           WHERE KUNNR = IT_TEMP_VBRK2-KUNAG.
    SELECT MATNR
         VOLUM
         VOLEH FROM MARA INTO TABLE IT_MARA1
         FOR ALL ENTRIES IN IT_VBRK2 WHERE MATNR = IT_VBRK2-MATNR.

  ENDIF.



  DATA: TEMP_POS TYPE LIPS-CHARG,
        TEMP_POS1 TYPE LIPS-CHARG.


  DATA : IT_READ_VBRK2 TYPE STANDARD TABLE OF TY_VDRK2,
         WA_READ_VBRK2 LIKE LINE OF IT_READ_VBRK2,
         TEMP_TABIX TYPE SY-TABIX,
         TEMP_VGPOS TYPE VBRP-VGPOS,
         TEMP_VGBEL TYPE VBRP-VGBEL.

  SORT IT_VBRK2 BY PSTYV.


*DELETE ADJACENT DUPLICATES FROM IT_VBRK2 COMPARING VBELN LPOSNR.


 LOOP AT IT_VBRK2 INTO WA_VBRK2.
   IF WA_VBRK2-BUKRS = '6000'.
   WA_FINALDET-FKDAT = WA_VBRK2-FKDAT.
      WA_FINALDET-SPART = WA_VBRK2-SPART.
      WA_FINALDET-NETWR = WA_VBRK2-NETWR.
      WA_FINALDET-KUNAG = WA_VBRK2-KUNAG.
      WA_FINALDET-KUNRG = WA_VBRK2-KUNRG.
      WA_FINALDET-SFAKN = WA_VBRK2-SFAKN.
      WA_FINALDET-VBELN = WA_VBRK2-VBELN.
      WA_FINALDET-LVBELN = WA_VBRK2-LVBELN.
*    wa_finaldet-erdat = wa_vbrk2-erdat.
      WA_FINALDET-VKBUR = WA_VBRK2-VKBUR.
      WA_FINALDET-POSNR = WA_VBRK2-POSNR.
      WA_FINALDET-CHARG = WA_VBRK2-CHARG.
      WA_FINALDET-MATNR = WA_VBRK2-MATNR.
      WA_FINALDET-ARKTX = WA_VBRK2-ARKTX.
      WA_FINALDET-FKIMG = WA_VBRK2-FKIMG.
      WA_FINALDET-VRKME = WA_VBRK2-VRKME.
      WA_FINALDET-VNETWR = WA_VBRK2-VNETWR. " Modified by Govind on 02/08/2014 Time 12:01 PM
      WA_FINALDET-ORDER_NUM = WA_VBRK2-POSNR.
      WA_FINALDET-LFIMG = WA_VBRK2-LFIMG.

      SORT IT_TVKBT2.   "Added by SPLABAP during code remediation
      READ TABLE IT_TVKBT2 INTO WA_TVKBT2 WITH KEY VKBUR = WA_VBRK2-VKBUR BINARY SEARCH.
      IF SY-SUBRC = 0.
        WA_FINALDET-BEZEI = WA_TVKBT2-BEZEI.
      ENDIF.
      SORT IT_TSPAT2.   "Added by SPLABAP during code remediation
      READ TABLE IT_TSPAT2 INTO WA_TSPAT2 WITH KEY SPART = WA_VBRK2-SPART BINARY SEARCH.

      IF SY-SUBRC = 0.
        WA_FINALDET-VTEXT = WA_TSPAT2-VTEXT.
      ENDIF.
      SORT IT_KNA12.    "Added by SPLABAP during code remediation
      READ TABLE IT_KNA12 INTO WA_KNA12 WITH KEY KUNNR = WA_VBRK2-KUNAG BINARY SEARCH.
      IF SY-SUBRC = 0.
        WA_FINALDET-NAME1 = WA_KNA12-NAME1.
        WA_FINALDET-NAME2 = WA_KNA12-NAME1.
      ENDIF.

       APPEND WA_FINALDET TO IT_FINALDET.
      CLEAR WA_FINALDET.
ENDIF.
ENDLOOP.

  LOOP AT IT_VBRK2 INTO WA_VBRK2 WHERE PSTYV = 'TAN'.

    IF  WA_VBRK2-VGPOS NE WA_VBRK2-LPOSNR.
      WA_VBRK2-DEL_FLAG = 'X'.


      MODIFY IT_VBRK2 FROM WA_VBRK2 INDEX SY-TABIX. "WHERE VBELN = WA_VBRK2-VBELN AND VGPOS = WA_VBRK2-VGPOS.

*DELETE IT_VBRK2 INDEX SY-TABIX.

      CLEAR: WA_VBRK2.


    ENDIF.


  ENDLOOP.


  DELETE IT_VBRK2 WHERE DEL_FLAG = 'X'.


  SORT IT_VBRK2 BY FKDAT VBELN LPOSNR.

  DELETE ADJACENT DUPLICATES FROM IT_VBRK2 COMPARING FKDAT VBELN LPOSNR.


*DELETE IT_VBRK2 WHERE DEL_FLAG = 'X'.


  SORT IT_TVKBT2 BY VKBUR.
  SORT IT_TSPAT2 BY SPART.
  SORT IT_KNA12 BY KUNNR.
  SORT IT_MARA1 BY MATNR.
*  BREAK-POINT.
*  DELETE IT_VBRK2 WHERE LFIMG < 0 .

  LOOP AT IT_VBRK2 INTO WA_VBRK2  .

    IF  WA_VBRK2-VGPOS = WA_VBRK2-LPOSNR AND
        WA_VBRK2-VGBEL = WA_VBRK2-LVBELN AND
        WA_VBRK2-MATNR = WA_VBRK2-LMATNR
    AND        WA_VBRK2-FKIMG = WA_VBRK2-LFIMG.      "Manual Batch


      WA_FINALDET-FKDAT = WA_VBRK2-FKDAT.
      WA_FINALDET-SPART = WA_VBRK2-SPART.
      WA_FINALDET-NETWR = WA_VBRK2-NETWR.
      WA_FINALDET-KUNAG = WA_VBRK2-KUNAG.
      WA_FINALDET-KUNRG = WA_VBRK2-KUNRG.
      WA_FINALDET-SFAKN = WA_VBRK2-SFAKN.
      WA_FINALDET-VBELN = WA_VBRK2-VBELN.
      WA_FINALDET-LVBELN = WA_VBRK2-LVBELN.
*    wa_finaldet-erdat = wa_vbrk2-erdat.
      WA_FINALDET-VKBUR = WA_VBRK2-VKBUR.
      WA_FINALDET-POSNR = WA_VBRK2-POSNR.
      WA_FINALDET-CHARG = WA_VBRK2-CHARG.
      WA_FINALDET-MATNR = WA_VBRK2-MATNR.
      WA_FINALDET-ARKTX = WA_VBRK2-ARKTX.
      WA_FINALDET-FKIMG = WA_VBRK2-FKIMG.
      WA_FINALDET-VRKME = WA_VBRK2-VRKME.
      WA_FINALDET-VNETWR = WA_VBRK2-VNETWR. " Modified by Govind on 02/08/2014 Time 12:01 PM
      WA_FINALDET-ORDER_NUM = WA_VBRK2-POSNR.
      WA_FINALDET-LFIMG = WA_VBRK2-LFIMG.


      READ TABLE IT_TVKBT2 INTO WA_TVKBT2 WITH KEY VKBUR = WA_VBRK2-VKBUR BINARY SEARCH.
      IF SY-SUBRC = 0.
        WA_FINALDET-BEZEI = WA_TVKBT2-BEZEI.
      ENDIF.

      READ TABLE IT_TSPAT2 INTO WA_TSPAT2 WITH KEY SPART = WA_VBRK2-SPART BINARY SEARCH.

      IF SY-SUBRC = 0.
        WA_FINALDET-VTEXT = WA_TSPAT2-VTEXT.
      ENDIF.

      READ TABLE IT_KNA12 INTO WA_KNA12 WITH KEY KUNNR = WA_VBRK2-KUNAG BINARY SEARCH.
      IF SY-SUBRC = 0.
        WA_FINALDET-NAME1 = WA_KNA12-NAME1.
        WA_FINALDET-NAME2 = WA_KNA12-NAME1.
      ENDIF.


      APPEND WA_FINALDET TO IT_FINALDET.
      CLEAR : WA_FINALDET.
      CONTINUE.
    ENDIF.

    IF WA_VBRK2-VGPOS = WA_VBRK2-LPOSNR AND
       WA_VBRK2-VGBEL = WA_VBRK2-LVBELN AND
       WA_VBRK2-MATNR = WA_VBRK2-LMATNR
      AND             WA_VBRK2-PSTYV = 'TAN'.                         "    Automatic Batch


      WA_FINALDET-FKDAT = WA_VBRK2-FKDAT.
      WA_FINALDET-SPART = WA_VBRK2-SPART.
      WA_FINALDET-NETWR = WA_VBRK2-NETWR.
      WA_FINALDET-KUNAG = WA_VBRK2-KUNAG.
      WA_FINALDET-KUNRG = WA_VBRK2-KUNRG.
      WA_FINALDET-SFAKN = WA_VBRK2-SFAKN.
      WA_FINALDET-VBELN = WA_VBRK2-VBELN.
      WA_FINALDET-SORT_KEY = ''.
      WA_FINALDET-LVBELN = WA_VBRK2-LVBELN.
*    wa_finaldet-erdat = wa_vbrk2-erdat.
      WA_FINALDET-VKBUR = WA_VBRK2-VKBUR.
      WA_FINALDET-POSNR = WA_VBRK2-POSNR.
      WA_FINALDET-CHARG = WA_VBRK2-CHARG.

      WA_FINALDET-MATNR = WA_VBRK2-MATNR.
      WA_FINALDET-ARKTX = WA_VBRK2-ARKTX.
      WA_FINALDET-FKIMG = WA_VBRK2-FKIMG.
      WA_FINALDET-VRKME = WA_VBRK2-VRKME.
      WA_FINALDET-VNETWR = WA_VBRK2-VNETWR. " Modified by Govind on 02/08/2014 Time 12:01 PM
      WA_FINALDET-VOLUM = WA_VBRK2-VOLUM.
      WA_FINALDET-VOLEH = WA_VBRK2-VOLEH.
      WA_FINALDET-ORDER_NUM = WA_VBRK2-POSNR.
      WA_FINALDET-LFIMG = WA_VBRK2-LFIMG.
      READ TABLE IT_TVKBT2 INTO WA_TVKBT2 WITH KEY VKBUR = WA_VBRK2-VKBUR.
      IF SY-SUBRC = 0.
        WA_FINALDET-BEZEI = WA_TVKBT2-BEZEI.
      ENDIF.

      READ TABLE IT_TSPAT2 INTO WA_TSPAT2 WITH KEY SPART = WA_VBRK2-SPART.

      IF SY-SUBRC = 0.
        WA_FINALDET-VTEXT = WA_TSPAT2-VTEXT.
      ENDIF.

      READ TABLE IT_KNA12 INTO WA_KNA12 WITH KEY KUNNR = WA_VBRK2-KUNAG.
      IF SY-SUBRC = 0.
        WA_FINALDET-NAME1 = WA_KNA12-NAME1.
        WA_FINALDET-NAME2 = WA_KNA12-NAME1.
      ENDIF.


      APPEND WA_FINALDET TO IT_FINALDET.
      CLEAR WA_FINALDET.
    ENDIF.
  ENDLOOP.

  DATA: TEMP_LFIMG TYPE LFIMG,
        TEMP_FKIMG TYPE FKIMG,
        TEMP_FINDET TYPE STANDARD TABLE OF TY_FINALDET,
        WA_TEMP_FINDET LIKE LINE OF TEMP_FINDET,
        COUNT TYPE I,
        LV_TABIX TYPE SY-TABIX.




  LOOP AT IT_FINALDET INTO WA_FINALDET WHERE PROC_KEY NE 'X'.

    TEMP_FKIMG = WA_FINALDET-FKIMG.

    LOOP AT IT_VBRK2 INTO WA_VBRK2 WHERE VBELN = WA_FINALDET-VBELN AND MATNR = WA_FINALDET-MATNR AND PSTYV = 'YB99'. "AND LFIMG NE WA_FINALDET-FKIMG.          ""AND DEL_FLAG = ''.

*    IF SY-SUBRC = 0.

*      TEMP_LFIMG = TEMP_LFIMG + WA_VBRK2-LFIMG. commened by Govind
      TEMP_LFIMG =  WA_VBRK2-LFIMG.

      IF TEMP_LFIMG LE TEMP_FKIMG.

        WA_FINALDET-FKDAT = WA_VBRK2-FKDAT.
        WA_FINALDET-SPART = WA_VBRK2-SPART.
        WA_FINALDET-NETWR = WA_VBRK2-NETWR.
        WA_FINALDET-KUNAG = WA_VBRK2-KUNAG.
        WA_FINALDET-KUNRG = WA_VBRK2-KUNRG.
        WA_FINALDET-SFAKN = WA_VBRK2-SFAKN.
        WA_FINALDET-VBELN = WA_VBRK2-VBELN.
        WA_FINALDET-SORT_KEY = 'A'.
        WA_FINALDET-LVBELN = WA_VBRK2-LVBELN.
*    wa_finaldet-erdat = wa_vbrk2-erdat.
        WA_FINALDET-VKBUR = WA_VBRK2-VKBUR.
        WA_FINALDET-POSNR = ''.                                       "WA_VBRK2-POSNR.
        WA_FINALDET-CHARG = WA_VBRK2-CHARG.
        WA_FINALDET-MATNR = WA_VBRK2-MATNR.
        WA_FINALDET-ARKTX = WA_VBRK2-ARKTX.
*        WA_FINALDET-FKIMG = WA_VBRK2-FKIMG.
        WA_FINALDET-VRKME = WA_VBRK2-VRKME.
*        WA_FINALDET-VNETWR = WA_VBRK2-VNETWR. " Modified by Govind on 02/08/2014 Time 12:01 PM
        WA_FINALDET-VOLUM = WA_VBRK2-VOLUM.
        WA_FINALDET-VOLEH = WA_VBRK2-VOLEH.
        WA_FINALDET-ORDER_NUM = WA_VBRK2-LPOSNR.
        WA_FINALDET-LFIMG = WA_VBRK2-LFIMG.
        WA_FINALDET-PROC_KEY = 'X'.
        READ TABLE IT_TVKBT2 INTO WA_TVKBT2 WITH KEY VKBUR = WA_VBRK2-VKBUR.
        IF SY-SUBRC = 0.
          WA_FINALDET-BEZEI = WA_TVKBT2-BEZEI.
        ENDIF.

        READ TABLE IT_TSPAT2 INTO WA_TSPAT2 WITH KEY SPART = WA_VBRK2-SPART.

        IF SY-SUBRC = 0.
          WA_FINALDET-VTEXT = WA_TSPAT2-VTEXT.
        ENDIF.

        READ TABLE IT_KNA12 INTO WA_KNA12 WITH KEY KUNNR = WA_VBRK2-KUNAG.

        IF SY-SUBRC = 0.
          WA_FINALDET-NAME1 = WA_KNA12-NAME1.
          WA_FINALDET-NAME2 = WA_KNA12-NAME1.
        ENDIF.

*        READ TABLE IT_MARA1 INTO WA_MARA1 WITH KEY MATNR = WA_VBRK2-MATNR BINARY SEARCH.
*        IF SY-SUBRC = 0 .
*          WA_FINALDET-M_VOLUM = WA_MARA1-VOLUM.
*        ENDIF.
* WA_FINALDET-T_VOLUM = WA_MARA1-VOLUM * WA_FINALDET-LFIMG.
        APPEND WA_FINALDET TO IT_FINALDET.
        CLEAR WA_FINALDET.
      ENDIF.
    ENDLOOP.

    READ TABLE IT_VBRK2 INTO WA_VBRK2 WITH KEY
    VBELN = WA_FINALDET-VBELN MATNR = WA_FINALDET-MATNR PSTYV = 'YB99' PROC_KEY = '' . "LFIMG = WA_FINALDET-FKIMG .



    IF SY-SUBRC = 0 .
      LV_TABIX = SY-TABIX.                                                " Variable to Denote already processed records
      WA_FINALDET-FKDAT = WA_VBRK2-FKDAT.
      WA_FINALDET-SPART = WA_VBRK2-SPART.
      WA_FINALDET-NETWR = WA_VBRK2-NETWR.
      WA_FINALDET-KUNAG = WA_VBRK2-KUNAG.
      WA_FINALDET-KUNRG = WA_VBRK2-KUNRG.
      WA_FINALDET-SFAKN = WA_VBRK2-SFAKN.
      WA_FINALDET-VBELN = WA_VBRK2-VBELN.
*    WA_FINALDET-SORT_KEY = 'A'.
      WA_FINALDET-LVBELN = WA_VBRK2-LVBELN.
*    wa_finaldet-erdat = wa_vbrk2-erdat.
      WA_FINALDET-VKBUR = WA_VBRK2-VKBUR.
      WA_FINALDET-POSNR = ''.                               "WA_VBRK2-POSNR.
      WA_FINALDET-CHARG = WA_VBRK2-CHARG.
      WA_FINALDET-MATNR = WA_VBRK2-MATNR.
      WA_FINALDET-ARKTX = WA_VBRK2-ARKTX.

*      WA_FINALDET-FKIMG = WA_VBRK2-FKIMG.
      WA_FINALDET-VRKME = WA_VBRK2-VRKME.
*      WA_FINALDET-VNETWR = WA_VBRK2-VNETWR. " Modified by Govind on 02/08/2014 Time 12:01 PM
      WA_FINALDET-VOLUM = WA_VBRK2-VOLUM.
      WA_FINALDET-VOLEH = WA_VBRK2-VOLEH.
      WA_FINALDET-LFIMG = WA_VBRK2-LFIMG.
*    WA_FINALDET-ORDER_NUM = WA_VBRK2-POSNR + 1.
      WA_FINALDET-PROC_KEY = 'X'.
*    WA_FINALDET-ORDER_NUM =
      READ TABLE IT_TVKBT2 INTO WA_TVKBT2 WITH KEY VKBUR = WA_VBRK2-VKBUR.
      IF SY-SUBRC = 0.
        WA_FINALDET-BEZEI = WA_TVKBT2-BEZEI.
      ENDIF.

      READ TABLE IT_TSPAT2 INTO WA_TSPAT2 WITH KEY SPART = WA_VBRK2-SPART.

      IF SY-SUBRC = 0.
        WA_FINALDET-VTEXT = WA_TSPAT2-VTEXT.
      ENDIF.

      READ TABLE IT_KNA12 INTO WA_KNA12 WITH KEY KUNNR = WA_VBRK2-KUNAG.

      IF SY-SUBRC = 0.

        WA_FINALDET-NAME1 = WA_KNA12-NAME1.
        WA_FINALDET-NAME2 = WA_KNA12-NAME1.

      ENDIF.

*      READ TABLE IT_MARA1 INTO WA_MARA1 WITH KEY MATNR = WA_VBRP-MATNR BINARY SEARCH.
*      IF SY-SUBRC = 0 .
*        WA_FINALDET-M_VOLUM = WA_MARA1-VOLUM.
*
*      ENDIF.
*        WA_FINALDET-T_VOLUM = WA_MARA1-VOLUM * WA_FINALDET-LFIMG.
*   WA_TEMP_FINDET-ORDER_NUM = SY-TABIX.


      APPEND WA_FINALDET TO IT_FINALDET.
*    CLEAR WA_TEMP_FINDET.

      WA_VBRK2-PROC_KEY = 'X'.
      MODIFY IT_VBRK2 FROM WA_VBRK2 INDEX LV_TABIX TRANSPORTING PROC_KEY.

    ENDIF.

    CLEAR: TEMP_LFIMG, TEMP_FKIMG, LV_TABIX.

  ENDLOOP.


  DATA: CNT2 TYPE I VALUE '0'.


  DATA: IT_TEMP2 TYPE STANDARD TABLE OF TY_FINALDET,
        WA_TEMP2 LIKE LINE OF IT_TEMP2.



  IF P_CB EQ 'X'.

    LOOP AT IT_FINALDET INTO WA_FINALDET.

      IF WA_FINALDET-SFAKN IS NOT INITIAL.

        WA_FINALDET-CANDOC = 'X'.

        MODIFY IT_FINALDET FROM WA_FINALDET TRANSPORTING CANDOC.

        APPEND WA_FINALDET TO IT_TEMP2.

        CLEAR WA_FINALDET.

      ENDIF.

    ENDLOOP.


    LOOP AT IT_FINALDET INTO WA_FINALDET.

      READ TABLE IT_TEMP2 INTO WA_TEMP2 WITH KEY SFAKN = WA_FINALDET-VBELN.

      IF SY-SUBRC = 0.

        MODIFY IT_FINALDET FROM WA_TEMP2 TRANSPORTING  CANDOC.

        CLEAR: WA_TEMP2.

      ENDIF.

    ENDLOOP.



*   SORT IT_FINALDET BY ORDER_NUM.
    SORT IT_FINALDET BY FKDAT VKBUR VBELN ORDER_NUM CHARG.

  ENDIF.

  IF P_CB NE 'X'.

    LOOP AT IT_FINALDET INTO WA_FINALDET.

      CNT2 = CNT2 + 1.
      IF WA_FINALDET-SFAKN IS NOT INITIAL.

        WA_TEMP2-SFAKN = WA_FINALDET-SFAKN.

        APPEND WA_TEMP2 TO IT_TEMP2.

        DELETE IT_FINALDET INDEX CNT2.

        CNT2 = CNT2 - 1.

      ENDIF.
    ENDLOOP.

    LOOP AT IT_TEMP2 INTO WA_TEMP2.

      DELETE IT_FINALDET WHERE VBELN = WA_TEMP2-SFAKN.

    ENDLOOP.

*    SORT IT_FINALDET BY SORT_CRIT.
*    SORT IT_FINALDET BY SORT_KEY.

    SORT IT_FINALDET BY FKDAT VKBUR VBELN ORDER_NUM CHARG.

    DELETE IT_FINALDET WHERE VKBUR = ''.

  ENDIF.

  LOOP AT IT_FINALDET INTO WA_FINALDET.
    IF WA_FINALDET-POSNR = ' '.
      WA_FINALDET-FKIMG = '0' .
*  APPEND WA_FINALDET-FKIMG TO IT_FINALDET-FKIMG.
    ENDIF.
  ENDLOOP.



  IF IT_FINALDET IS INITIAL.

    MESSAGE 'No Data Exists for the Input' TYPE 'S' DISPLAY LIKE 'E'.

    STOP.
  ENDIF.



  LOOP AT IT_FINALDET INTO WA_FINALDET.

    READ TABLE IT_MARA1 INTO WA_MARA1 WITH  KEY MATNR = WA_FINALDET-MATNR BINARY SEARCH.

    WA_FINALDET-M_VOLUM = WA_MARA1-VOLUM.
    WA_FINALDET-VOLEH = WA_MARA1-VOLEH.

    MODIFY IT_FINALDET FROM WA_FINALDET TRANSPORTING M_VOLUM VOLEH .
    CLEAR WA_FINALDET.
  ENDLOOP.

  LOOP AT IT_FINALDET INTO WA_FINALDET.
    WA_FINALDET-T_VOLUM = WA_FINALDET-M_VOLUM * WA_FINALDET-FKIMG.
    MODIFY IT_FINALDET FROM WA_FINALDET TRANSPORTING T_VOLUM.
    CLEAR WA_FINALDET.
  ENDLOOP.

ENDFORM.                    "DATA_RETRIEVAL_DETAIL
*&---------------------------------------------------------------------*
*&      Form  AUTHCHECK_DETAIL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM AUTHCHECK_DETAIL .

  LOOP AT IT_FINALDET INTO WA_FINALDET.
    AUTHORITY-CHECK OBJECT 'ZINVOICE'
    ID 'ZVKBUR' FIELD WA_FINALDET-VKBUR
    ID 'ZSPART' DUMMY
    ID 'ACTVT' FIELD '03'.
    IF SY-SUBRC NE 0.
      WA_FINALDET-FLAG2 = 'x' .
      MODIFY IT_FINALDET FROM WA_FINALDET TRANSPORTING FLAG2.
      MESSAGE 'NO AUTHORIZATION FOR CERTAIN RECORDS' TYPE 'S'.
    ENDIF.

    AUTHORITY-CHECK OBJECT 'ZINVOICE'
   ID 'ZVKBUR' DUMMY
   ID 'ZSPART' FIELD WA_FINALDET-SPART
   ID 'ACTVT' FIELD '03'.
    IF SY-SUBRC NE 0.
      WA_FINALDET-FLAG2 = 'x' .
      MODIFY IT_FINALDET FROM WA_FINALDET TRANSPORTING FLAG2.
      MESSAGE 'NO AUTHORIZATION FOR CERTAIN RECORDS' TYPE 'S'.
    ENDIF.
    CLEAR: WA_FINALDET.
  ENDLOOP.
  DELETE IT_FINALDET WHERE FLAG2 = 'x'.


ENDFORM.                    " AUTHCHECK_DETAIL
" DATA_RETRIEVAL_DETAIL
*&---------------------------------------------------------------------*
*&      Form  BUILD_FIELDCATALOG_DETAIL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM BUILD_FIELDCATALOG_DETAIL .



  WA_FIELDCAT-FIELDNAME   = 'FKDAT'.
  WA_FIELDCAT-SELTEXT_M   = 'BILLING DOCUMENT DATE'.
  WA_FIELDCAT-COL_POS     = 1.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR: WA_FIELDCAT.

  WA_SORT-FIELDNAME = 'FKDAT'.
  WA_SORT-UP = 'X'.
  WA_SORT-GROUP = 'X'.
  APPEND WA_SORT TO IT_SORT.
  CLEAR WA_SORT.

  WA_FIELDCAT-FIELDNAME   = 'VKBUR'.
  WA_FIELDCAT-SELTEXT_M   = 'SALES OFFICE'.
  WA_FIELDCAT-COL_POS     = 2.
  WA_FIELDCAT-CFIELDNAME   = 'VKBUR'.
  WA_FIELDCAT-CTABNAME    = 'VBRP'.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR: WA_FIELDCAT.

  WA_SORT-FIELDNAME = 'VKBUR'.
*  WA_SORT-UP = 'X'.
  WA_SORT-GROUP = 'X'.
  APPEND WA_SORT TO IT_SORT.
  CLEAR WA_SORT.


  WA_FIELDCAT-FIELDNAME   = 'BEZEI'.
  WA_FIELDCAT-SELTEXT_M   = 'SALES OFFICE DESCRIPTION'.
  WA_FIELDCAT-COL_POS     = 3.
  WA_FIELDCAT-CFIELDNAME   = 'BEZEI'.
  WA_FIELDCAT-CTABNAME    = 'TVKBT'.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR: WA_FIELDCAT.
*
  WA_SORT-FIELDNAME = 'BEZEI'.
*  WA_SORT-UP = 'X'.
  WA_SORT-GROUP = 'X'.
  APPEND WA_SORT TO IT_SORT.
  CLEAR WA_SORT.



  WA_FIELDCAT-FIELDNAME   = 'SPART'.
  WA_FIELDCAT-SELTEXT_M   = 'SALES DIVISION'.
  WA_FIELDCAT-CFIELDNAME   = 'SPART'.
  WA_FIELDCAT-CTABNAME    = 'VBRK'.
  WA_FIELDCAT-COL_POS     = 4.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR: WA_FIELDCAT.

  WA_SORT-FIELDNAME = 'SPART'.
*  WA_SORT-UP = 'X'.
  WA_SORT-GROUP = 'X'.
  APPEND WA_SORT TO IT_SORT.
  CLEAR WA_SORT.


  WA_FIELDCAT-FIELDNAME   = 'VTEXT'.
  WA_FIELDCAT-SELTEXT_M   = 'SALES DIVISION DESCRIPTION'.
  WA_FIELDCAT-COL_POS     = 5.
  WA_FIELDCAT-CFIELDNAME   = 'VTEXT'.
  WA_FIELDCAT-CTABNAME    = 'TSPAT'.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR: WA_FIELDCAT.

*  WA_SORT-FIELDNAME = 'VTEXT'.
**  WA_SORT-UP = 'X'.
*  WA_SORT-GROUP = 'X'.
*  APPEND WA_SORT TO IT_SORT.
*  CLEAR WA_SORT.

  WA_FIELDCAT-FIELDNAME   = 'KUNAG'.
  WA_FIELDCAT-SELTEXT_M   = 'SOLD TO PARTY'.
  WA_FIELDCAT-COL_POS     = 6.
  WA_FIELDCAT-CFIELDNAME   = 'KUNAG'.
  WA_FIELDCAT-CTABNAME    = 'VBRK'.

  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR  WA_FIELDCAT.


*  WA_SORT-FIELDNAME = 'KUNAG'.
**  WA_SORT-UP = 'X'.
*  WA_SORT-GROUP = 'X'.
*  APPEND WA_SORT TO IT_SORT.
*  CLEAR WA_SORT.


  WA_FIELDCAT-FIELDNAME   = 'NAME1'.
  WA_FIELDCAT-SELTEXT_M   = 'SP NAME'.
  WA_FIELDCAT-COL_POS     = 8.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR  WA_FIELDCAT.


*  WA_SORT-FIELDNAME = 'NAME1'.
**  WA_SORT-UP = 'X'.
*  WA_SORT-GROUP = 'X'.
*  APPEND WA_SORT TO IT_SORT.
*  CLEAR WA_SORT.


*  WA_FIELDCAT-FIELDNAME   = 'KUNRG'.
*  WA_FIELDCAT-SELTEXT_M   = 'PAYER'.
*  WA_FIELDCAT-COL_POS     = 10.
*  WA_FIELDCAT-CFIELDNAME   = 'KUNRG'.
*  WA_FIELDCAT-CTABNAME    = 'VBRK'.
*
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
**  WA_SORT-FIELDNAME = 'KUNRG'.
***  WA_SORT-UP = 'X'.
**  WA_SORT-GROUP = 'X'.
**  APPEND WA_SORT TO IT_SORT.
**  CLEAR WA_SORT.
*
*
*
*  WA_FIELDCAT-FIELDNAME   = 'NAME2'.
*  WA_FIELDCAT-SELTEXT_M   = 'PY NAME'.
*  WA_FIELDCAT-COL_POS     = 12.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*  WA_SORT-FIELDNAME = 'NAME2'.
**  WA_SORT-UP = 'X'.
*  WA_SORT-GROUP = 'X'.
*  APPEND WA_SORT TO IT_SORT.
*  CLEAR WA_SORT.


  WA_FIELDCAT-FIELDNAME   = 'VBELN'.
  WA_FIELDCAT-SELTEXT_M = 'BILLING DOC NO'.
  WA_FIELDCAT-COL_POS     = 14.
  WA_FIELDCAT-HOTSPOT     = 'X'.
  WA_FIELDCAT-CFIELDNAME   = 'VBELN'.
  WA_FIELDCAT-CTABNAME    = 'VBRP'.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR  WA_FIELDCAT.

  WA_SORT-FIELDNAME = 'VBELN'.
  WA_SORT-UP = 'X'.
  WA_SORT-GROUP = 'X'.
  APPEND WA_SORT TO IT_SORT.
  CLEAR WA_SORT.

*  WA_FIELDCAT-FIELDNAME   = 'CANDOC'.
*  WA_FIELDCAT-SELTEXT_M = 'CANCELLED DOCUMENT'.
*  WA_FIELDCAT-COL_POS     = 7.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.

*
*  WA_FIELDCAT-FIELDNAME   = 'POSNR'.
*  WA_FIELDCAT-SELTEXT_M   = 'BILLING ITEM'.
*  WA_FIELDCAT-COL_POS     = 8.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_SORT-FIELDNAME = 'POSNR'.
*  WA_SORT-DOWN = 'X'.
**  WA_SORT-GROUP = 'X'.
*  APPEND WA_SORT TO IT_SORT.
*  CLEAR WA_SORT.



  WA_FIELDCAT-FIELDNAME   = 'MATNR'.
  WA_FIELDCAT-SELTEXT_M   = 'MATERIAL NUMBER'.
  WA_FIELDCAT-COL_POS     = 16.
  WA_FIELDCAT-TABNAME     = 'MARA'.
  WA_FIELDCAT-DATATYPE    = 'NUMC'.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR  WA_FIELDCAT.

  WA_FIELDCAT-FIELDNAME   = 'ARKTX'.
  WA_FIELDCAT-SELTEXT_M   = 'MATERIAL DESCRIPTION'.
  WA_FIELDCAT-COL_POS     = 18.
  WA_FIELDCAT-CFIELDNAME   = 'ARKTX'.
  WA_FIELDCAT-CTABNAME    = 'VBRP'.

  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR  WA_FIELDCAT.



*
*  WA_SORT-FIELDNAME = 'MATNR'.
* WA_SORT-UP = 'X'.
**  WA_SORT-GROUP = 'X'.
*  APPEND WA_SORT TO IT_SORT.
*  CLEAR WA_SORT.


*
*  WA_FIELDCAT-FIELDNAME   = 'CHARG'.
*  WA_FIELDCAT-SELTEXT_M   = 'BATCH NUMBER'.
*  WA_FIELDCAT-COL_POS     = 11.
*  WA_FIELDCAT-CFIELDNAME   = 'CHARG'.
*  WA_FIELDCAT-CTABNAME    = 'LIPS'.
*
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.


*
  WA_FIELDCAT-FIELDNAME   = 'FKIMG'.
  WA_FIELDCAT-SELTEXT_M   = 'QUANTITY'.
  WA_FIELDCAT-COL_POS     = 20.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR  WA_FIELDCAT.

*  WA_FIELDCAT-FIELDNAME   = 'LFIMG'.
*  WA_FIELDCAT-SELTEXT_M   = 'QUANTITY'.
*  WA_FIELDCAT-CTABNAME    = 'LIPS'.
*  WA_FIELDCAT-COL_POS     = 13.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.
*
*  WA_SORT-FIELDNAME = 'FKIMG'.
*  WA_SORT-DOWN = 'X'.
**  WA_SORT-GROUP = 'X'.
*  APPEND WA_SORT TO IT_SORT.
*  CLEAR WA_SORT.



  WA_FIELDCAT-FIELDNAME   = 'VRKME'.
  WA_FIELDCAT-SELTEXT_M   = 'SALES UNIT'.
  WA_FIELDCAT-CTABNAME     = 'VBRP'.
  WA_FIELDCAT-CFIELDNAME  = 'VRKME'.
  WA_FIELDCAT-COL_POS     = 22.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR  WA_FIELDCAT.

*  WA_FIELDCAT-FIELDNAME   = 'VOLUM'.
*  WA_FIELDCAT-SELTEXT_M   = 'QTY IN LTRS/KGS'.
*  WA_FIELDCAT-CTABNAME     = 'VBRP'.
**  WA_FIELDCAT-CFIELDNAME  = 'LFIMG'.
*  WA_FIELDCAT-COL_POS     = 23.
*  APPEND WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR  WA_FIELDCAT.



  WA_FIELDCAT-FIELDNAME   = 'M_VOLUM'.
  WA_FIELDCAT-SELTEXT_M   = 'LTRS/KGS'.
  WA_FIELDCAT-CTABNAME     = 'MARA'.
*  WA_FIELDCAT-CFIELDNAME  = 'VOLUM'.
  WA_FIELDCAT-COL_POS     = 24.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR  WA_FIELDCAT.

  WA_FIELDCAT-FIELDNAME   = 'VOLEH'.
  WA_FIELDCAT-SELTEXT_M   = 'LTRS/KGS UNIT'.
  WA_FIELDCAT-CTABNAME     = 'MARA'.
  WA_FIELDCAT-COL_POS     = 25.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR  WA_FIELDCAT.

  WA_FIELDCAT-FIELDNAME   = 'T_VOLUM'.
  WA_FIELDCAT-SELTEXT_M   = 'TOTAL LTRS/KGS'.
  WA_FIELDCAT-CTABNAME     = 'MARA'.
*  WA_FIELDCAT-CFIELDNAME  = 'VOLUM'.
  WA_FIELDCAT-COL_POS     = 26.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR  WA_FIELDCAT.

  WA_FIELDCAT-FIELDNAME   = 'VNETWR'.
  WA_FIELDCAT-SELTEXT_M   = 'NET VALUE'.
*  WA_FIELDCAT-DATATYPE    = 'CURR'.
*  WA_FIELDCAT-DATATYPE    = 'CUCY'.
*  WA_FIELDCAT-TECH        = 'X'.
  WA_FIELDCAT-COL_POS     = 27.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR  WA_FIELDCAT.

*
*  WA_SORT-FIELDNAME = 'NETWR'. " Modified by Govind on 02/08/2014 Time 12:01 PM
*  WA_SORT-UP = 'X'.
*  WA_SORT-GROUP = 'X'.
*  APPEND WA_SORT TO IT_SORT.
*  CLEAR WA_SORT.






ENDFORM.                    " BUILD_FIELDCATALOG_DETAIL
*&---------------------------------------------------------------------*
*&      Form  BUILD_ALV_DETAIL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM BUILD_ALV_DETAIL .


  LAYOUT-COLWIDTH_OPTIMIZE = 'X'.                             " ADDED BY SAVARIAR AS ON 08/01/2015
  LAYOUT-ZEBRA = 'X'.




  LOOP AT IT_FINALDET TRANSPORTING NO FIELDS WHERE CANDOC = 'X'.

    EXIT.

  ENDLOOP.

  IF SY-SUBRC NE 0.

    READ TABLE IT_FIELDCAT INTO WA_FIELDCAT WITH KEY FIELDNAME = 'CANDOC'.

    IF SY-SUBRC = 0.

      WA_FIELDCAT-NO_OUT = 'X'.
      WA_FIELDCAT-TECH   = 'X'.

      MODIFY IT_FIELDCAT FROM WA_FIELDCAT INDEX SY-TABIX.

    ENDIF.

  ENDIF.
  SORT IT_FINALDET BY CHARG VBELN.
*  DELETE IT_FINALDET WHERE CHARG = ' '.
*BREAK-POINT.





  DELETE IT_FINALDET WHERE VNETWR = 0.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
   EXPORTING
*   I_INTERFACE_CHECK                 = ' '
*   I_BYPASSING_BUFFER                = ' '
*   I_BUFFER_ACTIVE                   = ' '
     I_CALLBACK_PROGRAM                = SY-REPID
*     I_CALLBACK_PF_STATUS_SET          = 'PF_STATUS_GET_DETAIL'
     I_CALLBACK_USER_COMMAND           = 'MY_USER_COMMAND_DETAIL'
*   I_CALLBACK_TOP_OF_PAGE            = ' '
*   I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*   I_CALLBACK_HTML_END_OF_LIST       = ' '
*   I_STRUCTURE_NAME                  =
*   I_BACKGROUND_ID                   = ' '
*   I_GRID_TITLE                      =
*   I_GRID_SETTINGS                   =
     IS_LAYOUT                         = LAYOUT
      IT_FIELDCAT                       = IT_FIELDCAT
*   IT_EXCLUDING                      =
*   IT_SPECIAL_GROUPS                 =
      IT_SORT                           = IT_SORT
*   IT_FILTER                         =
*   IS_SEL_HIDE                       =
*   I_DEFAULT                         = 'X'
*   I_SAVE                            = ' '
*   IS_VARIANT                        =
*   IT_EVENTS                         =
*   IT_EVENT_EXIT                     =
*   IS_PRINT                          =
*   IS_REPREP_ID                      =
*   I_SCREEN_START_COLUMN             = 0
*   I_SCREEN_START_LINE               = 0
*   I_SCREEN_END_COLUMN               = 0
*   I_SCREEN_END_LINE                 = 0
*   I_HTML_HEIGHT_TOP                 = 0
*   I_HTML_HEIGHT_END                 = 0
*   IT_ALV_GRAPHICS                   =
*   IT_HYPERLINK                      =
*   IT_ADD_FIELDCAT                   =
*   IT_EXCEPT_QINFO                   =
*   IR_SALV_FULLSCREEN_ADAPTER        =
* IMPORTING
*   E_EXIT_CAUSED_BY_CALLER           =
*   ES_EXIT_CAUSED_BY_USER            =
    TABLES
      T_OUTTAB                          = IT_FINALDET
* EXCEPTIONS
*   PROGRAM_ERROR                     = 1
*   OTHERS                            = 2
            .
  IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.




ENDFORM.                    " BUILD_ALV_DETAIL


*&---------------------------------------------------------------------*
*&      Form  PF_STATUS_GET_DETAIL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->RT_EXTAB   text
*----------------------------------------------------------------------*
FORM PF_STATUS_GET_DETAIL USING RT_EXTAB TYPE SLIS_T_EXTAB.

  SET PF-STATUS 'MY_STATUS'.

ENDFORM.                    "PF_STATUS_GET_DETAIL

*&---------------------------------------------------------------------*
*&      Form  MY_USER_COMMAND_DETAIL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->R_UCOMM      text
*      -->RS_SELFIELD  text
*----------------------------------------------------------------------*
FORM MY_USER_COMMAND_DETAIL USING R_UCOMM LIKE SY-UCOMM RS_SELFIELD TYPE SLIS_SELFIELD.

  CASE R_UCOMM.

    WHEN '&MAI'.

      PERFORM BUILD_XLS_DATA_TABLE_DETAIL.

      PERFORM SEND_MAIL_DETAIL.

    WHEN '&GRH'.
      PERFORM BUILD_GRAPH_DATA_TABLE_DETAIL.

  ENDCASE.

  IF RS_SELFIELD-FIELDNAME = 'VBELN'.

    SET PARAMETER ID 'VF' FIELD RS_SELFIELD-VALUE.
    CALL TRANSACTION 'VF03' AND SKIP FIRST SCREEN.
  ENDIF.


ENDFORM.                    "MY_USER_COMMAND_DETAIL
*&---------------------------------------------------------------------*
*&      Form  BUILD_XLS_DATA_TABLE_DETAIL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM BUILD_XLS_DATA_TABLE_DETAIL .

  CLASS CL_ABAP_CHAR_UTILITIES DEFINITION LOAD.
  CONSTANTS:
  CON_TAB  TYPE C VALUE CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB,
  CON_CRET TYPE C VALUE CL_ABAP_CHAR_UTILITIES=>CR_LF.

  CONCATENATE 'BILLING DOCUMENT DATE'
               'SALES OFFICE'
               'SALES OFFICE DESCRIPTION'
               'SALES DIVISION'
               'SALES DIVISION DESCRPTION'
               'BILLING DOCUMENT NO'
               'BILLING ITEM'
               'MATERIAL NUMBER'
               'MATERIAL DESCRIPTION'
               'BATCH NO'
               'QUANTITY'
               'SALES UNIT'
               'NET VALUE'
               'SOLD TO PARTY'
               'SP NAME'
               'PAYER'
               'PY NAME'
  INTO  WA_ATTACHMENT SEPARATED BY  CON_TAB.

  CONCATENATE CON_CRET
  WA_ATTACHMENT
  INTO WA_ATTACHMENT.

  APPEND WA_ATTACHMENT TO IT_ATTACHMENT.
  CLEAR  WA_ATTACHMENT.

  DATA: LV_STRING_DET TYPE STRING,
        LV_STRING_DET_NETWR TYPE STRING.


  LOOP AT IT_FINALDET INTO WA_FINALDET.


    LV_STRING_DET = WA_FINALDET-FKIMG.
    LV_STRING_DET_NETWR = WA_FINALDET-NETWR.

    CONCATENATE  WA_FINALDET-FKDAT
                 WA_FINALDET-VKBUR
                 WA_FINALDET-BEZEI
                 WA_FINALDET-SPART
                 WA_FINALDET-VTEXT
                 WA_FINALDET-VBELN
                 WA_FINALDET-POSNR
                 WA_FINALDET-MATNR
                 WA_FINALDET-ARKTX
                 WA_FINALDET-CHARG
                 LV_STRING_DET
                 WA_FINALDET-VRKME
                 LV_STRING_DET_NETWR
                 WA_FINALDET-KUNAG
                 WA_FINALDET-NAME1
                 WA_FINALDET-KUNRG
                 WA_FINALDET-NAME2
  INTO WA_ATTACHMENT SEPARATED BY CON_TAB.  "#EC CI_FLDEXT_OK[2215424]    "Added by SPLABAP during code remediation
    " FINAL TABLE TYPE FOR DETAIL REPORT

    CONCATENATE CON_CRET WA_ATTACHMENT
    INTO WA_ATTACHMENT.
    APPEND WA_ATTACHMENT TO IT_ATTACHMENT.
    CLEAR WA_ATTACHMENT.
  ENDLOOP.

ENDFORM.                    "BUILD_XLS_DATA_TABLE_DETAIL
" BUILD_XLS_DATA_TABLE_DETAIL
*&---------------------------------------------------------------------*
*&      Form  SEND_MAIL_DETAIL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SEND_MAIL_DETAIL .

  WA_DOCDATA-OBJ_NAME = 'MAIL WITH EXCEL ATTACHMENT'.
  WA_DOCDATA-OBJ_DESCR = 'SAP Reports'.

  PERFORM BODY_OF_MAIL USING: SPACE, 'Hello ',
  'Please find the attached excel sheet'.

  DESCRIBE TABLE IT_BODY_MSG LINES G_TAB_LINES.
  WA_PACKLIST-HEAD_START = 1.
  WA_PACKLIST-HEAD_NUM   = 0.
  WA_PACKLIST-BODY_START = 1.
  WA_PACKLIST-BODY_NUM   = G_TAB_LINES.
  WA_PACKLIST-DOC_TYPE   = 'RAW'.
  APPEND WA_PACKLIST TO IT_PACKLIST.
  CLEAR  WA_PACKLIST.

  "Write Packing List for Attachment
  WA_PACKLIST-TRANSF_BIN = SPACE.
  WA_PACKLIST-HEAD_START = 1.
  WA_PACKLIST-HEAD_NUM   = 1.
  WA_PACKLIST-BODY_START = G_TAB_LINES + 1.
  DESCRIBE TABLE IT_ATTACHMENT LINES WA_PACKLIST-BODY_NUM.
  WA_PACKLIST-DOC_TYPE   = 'XLS'.
  WA_PACKLIST-OBJ_DESCR  = 'Excell Attachment'.
  WA_PACKLIST-OBJ_NAME   = 'XLS_ATTACHMENT'.
  WA_PACKLIST-DOC_SIZE   = WA_PACKLIST-BODY_NUM * 255.
  APPEND WA_PACKLIST TO IT_PACKLIST.
  CLEAR  WA_PACKLIST.

  APPEND LINES OF IT_ATTACHMENT TO IT_BODY_MSG.
  "Fill the document data and get size of attachment
  WA_DOCDATA-OBJ_LANGU  = SY-LANGU.
  READ TABLE IT_BODY_MSG INTO WA_BODY_MSG INDEX G_TAB_LINES.
  WA_DOCDATA-DOC_SIZE = ( G_TAB_LINES - 1 ) * 255 + STRLEN( WA_BODY_MSG ).

  "Receivers List.
  WA_RECEIVERS-REC_TYPE   = 'U'.  "Internet address
  WA_RECEIVERS-RECEIVER   = 'no-reply@sheenlac.in'.
  WA_RECEIVERS-COM_TYPE   = 'INT'.
  WA_RECEIVERS-NOTIF_DEL  = 'X'.
  WA_RECEIVERS-NOTIF_NDEL = 'X'.
  APPEND WA_RECEIVERS TO IT_RECEIVERS .
  CLEAR:WA_RECEIVERS.

  CALL FUNCTION 'SO_NEW_DOCUMENT_ATT_SEND_API1'                                 " FUNCTION MODULE FOR MAIL SENDING
    EXPORTING
      DOCUMENT_DATA                    = WA_DOCDATA
      PUT_IN_OUTBOX                    = 'X'
      COMMIT_WORK                      = 'X'
   IMPORTING
      SENT_TO_ALL                      = G_SENT_TO_ALL
*   NEW_OBJECT_ID                    =
    TABLES
      PACKING_LIST                     = IT_PACKLIST
*   OBJECT_HEADER                    =
*   CONTENTS_BIN                     =
     CONTENTS_TXT                     = IT_BODY_MSG
*   CONTENTS_HEX                     =
*   OBJECT_PARA                      =
*   OBJECT_PARB                      =
      RECEIVERS                        = IT_RECEIVERS
  EXCEPTIONS
     TOO_MANY_RECEIVERS               = 1
     DOCUMENT_NOT_SENT                = 2
     DOCUMENT_TYPE_NOT_EXIST          = 3
     OPERATION_NO_AUTHORIZATION       = 4
     PARAMETER_ERROR                  = 5
     X_ERROR                          = 6
     ENQUEUE_ERROR                    = 7
     OTHERS                           = 8
            .
  IF SY-SUBRC <> 0.

    WRITE: 'FAILURE'.

  ELSE.

    WAIT UP TO 2 SECONDS.

    SUBMIT RSCONN01 WITH MODE = 'INT'
        WITH OUTPUT = 'X'
        AND RETURN.
  ENDIF.
ENDFORM.                " SEND_MAIL_DETAILENDFORM.                    " DATA_RETRIEVAL_DETAIL
*&---------------------------------------------------------------------*
*&      Form  BUILD_GRAPH_DATA_TABLE_DETAIL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM BUILD_GRAPH_DATA_TABLE_DETAIL .

ENDFORM.                    " BUILD_GRAPH_DATA_TABLE_DETAIL
