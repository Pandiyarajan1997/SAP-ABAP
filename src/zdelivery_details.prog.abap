*&---------------------------------------------------------------------*
*& Report  ZDELIVERY_DETAILS
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT ZDELIVERY_DETAILS.

TABLES: VBAK,
        VBAP,
        T001W.

TYPE-POOLS: SLIS.

DATA: S_REPID LIKE SY-REPID.

TYPES : BEGIN OF TY_VBAP,
  VBELN TYPE VBAP-VBELN,
  POSNR TYPE VBAP-POSNR,
  MATNR TYPE VBRP-MATNR,
  ARKTX TYPE VBRP-ARKTX,
  NETWR TYPE VBRP-NETWR,
  KWMENG TYPE VBAP-KWMENG,
  WERKS TYPE VBAP-WERKS,
  END OF TY_VBAP.

DATA: IT_VBAP TYPE TABLE OF TY_VBAP,
      WA_VBAP TYPE TY_VBAP.

TYPES: BEGIN OF TY_VBAK,
  VBELN TYPE VBAK-VBELN,   " Sale Order No
  AUDAT TYPE VBAK-AUDAT,   " Date
  AUART TYPE VBAK-AUART,   " Sales Order Type
  NETWR TYPE VBAK-NETWR,   " NetValue
  VKBUR TYPE VBAK-VKBUR,   " Sales Office
  BSTNK TYPE VBAK-BSTNK,   " PO number
  KUNNR TYPE VBAK-KUNNR,   " Customer Number
  END OF TY_VBAK.

DATA: IT_VBAK TYPE TABLE OF TY_VBAK,
      WA_VBAK TYPE TY_VBAK.

DATA: IT_VBAK1 TYPE TABLE OF TY_VBAK,
      WA_VBAK1 TYPE TY_VBAK.

TYPES:BEGIN OF TY_LIPS,
  VBELN TYPE LIPS-VBELN,
  POSNR TYPE LIPS-POSNR,
  ERDAT TYPE LIPS-ERDAT,
  VGBEL TYPE LIPS-VGBEL,
  VGPOS TYPE LIPS-VGPOS,
  END OF TY_LIPS.

DATA: IT_LIPS TYPE TABLE OF TY_LIPS,
      WA_LIPS TYPE TY_LIPS.

TYPES: BEGIN OF TY_VBRP,
  VBELN TYPE VBRP-VBELN,
  POSNR TYPE VBRP-POSNR,
  FKIMG TYPE VBRP-FKIMG,
  NETWR TYPE VBRP-NETWR,
*  VGBEL TYPE VBRP-VGBEL,
*  VGPOS TYPE VBRP-VGPOS,
*  AUBEL TYPE VBRP-AUBEL,
*  AUPOS TYPE VBRP-AUPOS,
*  MATNR TYPE VBRP-MATNR,
*  WERKS TYPE VBRP-WERKS,
  END OF TY_VBRP.

DATA: IT_VBRP TYPE TABLE OF TY_VBRP,
      WA_VBRP TYPE TY_VBRP.

TYPES:BEGIN OF TY_VBFA,
  VBELV TYPE VBFA-VBELV,
  POSNV TYPE VBFA-POSNV,
  VBELN TYPE VBFA-VBELN,
  POSNN TYPE VBFA-POSNN,
  VBTYP_N TYPE VBFA-VBTYP_N,
  END OF TY_VBFA.

DATA: IT_VBFA TYPE TABLE OF TY_VBFA,
      WA_VBFA TYPE TY_VBFA.

TYPES : BEGIN OF TY_VBRK,
  VBELN TYPE VBRK-VBELN,
  FKART TYPE VBRK-FKART,
  FKDAT TYPE VBRK-FKDAT,
  FKSTO TYPE VBRK-FKSTO,
  DATE_OF_DELIVERY TYPE VBRK-DATE_OF_DELIVERY,
  REMARKS TYPE VBRK-REMARKS,
  END OF TY_VBRK.

DATA: IT_VBRK TYPE TABLE OF TY_VBRK,
      WA_VBRK TYPE TY_VBRK.

TYPES: BEGIN OF TY_KNA1,
  KUNNR TYPE KNA1-KUNNR,
  LAND1 TYPE KNA1-LAND1,
  NAME1 TYPE KNA1-NAME1,
  REGIO TYPE KNA1-REGIO,
  END OF TY_KNA1.

DATA: IT_KNA1 TYPE TABLE OF TY_KNA1,
      WA_KNA1 TYPE TY_KNA1.

TYPES:BEGIN OF TY_T005U,
  SPRAS TYPE T005U-SPRAS,
  LAND1 TYPE T005U-LAND1,
  BLAND TYPE T005U-BLAND,
  BEZEI TYPE T005U-BEZEI,
  END OF TY_T005U.

DATA: IT_T005U TYPE TABLE OF TY_T005U,
      WA_T005U TYPE TY_T005U.

TYPES:BEGIN OF TY_T001W,
  WERKS TYPE T001W-WERKS,
  NAME1 TYPE T001W-NAME1,
  END OF TY_T001W.

DATA: IT_T001W TYPE TABLE OF TY_T001W,
      WA_T001W TYPE TY_T001W.

TYPES:BEGIN OF TY_FINAL,
  VBELN TYPE VBAK-VBELN, " SALES ORDER NUMBER
  ITEM  TYPE VBAP-POSNR, " SALE ORDER ITEM NO
  AUDAT TYPE VBAK-AUDAT, " ORDER DATE
  NETWR TYPE VBAK-NETWR, " NetValue
  BSTNK TYPE VBAK-BSTNK, " PO number
  VBELN1 TYPE VBRK-VBELN," INVOICE NUMBER
  FKDAT TYPE VBRK-FKDAT, " INVOICE DATE
  KUNNR TYPE VBAK-KUNNR, " CUSTOMER CODE
  NAME1 TYPE KNA1-NAME1, " CUSTOMER NAME
  BEZEI TYPE T005U-BEZEI," REGION
  WERKS TYPE VBAP-WERKS, " SALES OFFICE
  MATNR TYPE VBAP-MATNR, " MATERIAL CODE
  ARKTX TYPE VBAP-ARKTX, " MATERIAL DESCRIPTION
  KWMENG TYPE VBAP-KWMENG, " SALE ORDER QUANTITY
  FKIMG TYPE VBRP-FKIMG,   " BILLED QUANTITY
  BAL_Q TYPE VBRP-FKIMG,   " BALANCE QUANTITY
  BAL_A TYPE VBAP-NETWR,   " BALANCE AMOUNT
  INV_Q TYPE VBRP-FKIMG,   " INVOICE QUANTITY
  INV_A TYPE VBRP-NETWR,   " INVOICE AMOUNT
  SAL_Q TYPE VBAP-KWMENG,  " SALE ORDER QUANTITY
  SAL_A TYPE VBAP-NETWR,   " SALE ORDER AMOUNT
  D_O_D TYPE VBRK-DATE_OF_DELIVERY, " DATE OF DELIVERY
  REMARKS TYPE VBRK-REMARKS, " REMARKS
  DAYS TYPE CHAR5, " NO OF DAYS
  BTDD TYPE CHAR5, " Billed TO Delivery Date.
  OTDD TYPE CHAR5, " Order To Delivery Date
  END OF TY_FINAL.

DATA: IT_FINAL TYPE TABLE OF TY_FINAL,
      WA_FINAL TYPE TY_FINAL.

DATA: IT_FINAL1 TYPE TABLE OF TY_FINAL,
      WA_FINAL1 TYPE TY_FINAL.

DATA: SAL_OFC TYPE CHAR40.

DATA: TEM_QUN TYPE VBRP-FKIMG.
DATA: TEM_QUN1 TYPE VBRP-FKIMG.

DATA: DAYS TYPE I.
DATA: BTDD TYPE I,
      OTDD TYPE I.

DATA: I TYPE CHAR5 ,
      J TYPE CHAR5 .

DATA: BAL_QUN TYPE VBRP-FKIMG,
      BAL_AMT TYPE VBAP-NETWR.

DATA: NDNI TYPE CHAR100,
      DNI  TYPE CHAR50,
      COUNT TYPE CHAR250.

DATA: CON_WERKS TYPE CHAR50,
      CON_AUDAT TYPE CHAR50,
      CON_KUNNR TYPE CHAR50.

DATA: LOW_DT TYPE CHAR10,
      HIG_DT TYPE CHAR10.

DATA: POS TYPE I VALUE 0 .

DATA: FLAG TYPE C.

DATA: IT_FIELDCAT TYPE TABLE OF SLIS_FIELDCAT_ALV,
      WA_FIELDCAT TYPE SLIS_FIELDCAT_ALV.

DATA: IT_HEADER TYPE SLIS_T_LISTHEADER,
      WA_HEADER TYPE SLIS_LISTHEADER.

DATA : WA_LAYOUT TYPE SLIS_LAYOUT_ALV.

DATA: AUDAT_LOW TYPE VBAK-AUDAT,
      AUDAT_HIG TYPE VBAK-AUDAT.

DATA: MON TYPE I.

SELECTION-SCREEN:BEGIN OF BLOCK DEL_DET WITH FRAME TITLE TEXT-001 .
SELECT-OPTIONS: S_WERKS FOR VBAP-WERKS OBLIGATORY.
SELECT-OPTIONS: S_AUDAT FOR VBAK-AUDAT OBLIGATORY.
SELECT-OPTIONS: S_KUNNR FOR VBAK-KUNNR.
SELECTION-SCREEN:END OF BLOCK DEL_DET.

START-OF-SELECTION.

  PERFORM GET_DAT.
  PERFORM READ_DATA.
  PERFORM FIELDCAT.
  PERFORM DISPLAY_ALV.

END-OF-SELECTION.

*&---------------------------------------------------------------------*
*&      Form  GET_DAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GET_DAT .

  AUDAT_LOW = S_AUDAT-LOW.
  AUDAT_HIG = S_AUDAT-HIGH.

  CALL FUNCTION 'FIMA_DAYS_AND_MONTHS_AND_YEARS'
    EXPORTING
      I_DATE_FROM    = AUDAT_LOW
*     I_KEY_DAY_FROM =
      I_DATE_TO      = AUDAT_HIG
*     I_KEY_DAY_TO   =
*     I_FLG_SEPARATE = ' '
    IMPORTING
*     E_DAYS         =
      E_MONTHS       = MON
*     E_YEARS        =
    .

  IF S_WERKS IS NOT INITIAL AND S_AUDAT IS NOT INITIAL.
    IF MON <= '12'.

      SELECT VBELN
             AUDAT
             AUART
             NETWR
             VKBUR
             BSTNK
             KUNNR FROM VBAK INTO TABLE IT_VBAK WHERE VKBUR IN S_WERKS AND AUDAT IN S_AUDAT AND KUNNR IN S_KUNNR AND VKBUR <> ' '
                                                                                            AND ( AUART = 'YBBR' OR AUART = 'YBDP' ).
      IF IT_VBAK IS NOT INITIAL.
        SELECT VBELN
               POSNR
               MATNR
               ARKTX
               NETWR
               KWMENG
               WERKS FROM VBAP INTO TABLE IT_VBAP FOR ALL ENTRIES IN IT_VBAK WHERE VBELN = IT_VBAK-VBELN.
        IF IT_VBAP IS NOT INITIAL.
          SELECT  VBELV
                  POSNV
                  VBELN
                  POSNN
                  VBTYP_N  FROM VBFA INTO TABLE IT_VBFA FOR ALL ENTRIES IN IT_VBAP WHERE VBELV = IT_VBAP-VBELN AND POSNN = IT_VBAP-POSNR AND VBTYP_N = 'M' ." AND POSNN = 1 .
          IF IT_VBFA IS NOT INITIAL.
            SELECT  VBELN
                    POSNR
                    FKIMG
                    NETWR FROM VBRP INTO TABLE IT_VBRP FOR ALL ENTRIES IN IT_VBFA WHERE VBELN = IT_VBFA-VBELN AND POSNR = IT_VBFA-POSNV .

            SELECT VBELN
                   FKART
                   FKDAT
                   FKSTO
                   DATE_OF_DELIVERY
                   REMARKS FROM VBRK INTO TABLE IT_VBRK FOR ALL ENTRIES IN IT_VBRP WHERE VBELN = IT_VBRP-VBELN  AND FKSTO <> 'X'.

            SELECT KUNNR
                   LAND1
                   NAME1
                   REGIO FROM KNA1 INTO TABLE IT_KNA1 FOR ALL ENTRIES IN IT_VBAK WHERE KUNNR = IT_VBAK-KUNNR.

            SELECT SPRAS
                   LAND1
                   BLAND
                   BEZEI FROM T005U INTO TABLE IT_T005U FOR ALL ENTRIES IN IT_KNA1 WHERE SPRAS = 'EN' AND LAND1 = IT_KNA1-LAND1 AND BLAND = IT_KNA1-REGIO.

            SELECT WERKS
                   NAME1 FROM T001W INTO TABLE IT_T001W WHERE WERKS IN S_WERKS.
          ELSE.
            MESSAGE 'No Data Found' TYPE 'I' DISPLAY LIKE 'E'.
            SUBMIT ZDELIVERY_DETAILS VIA SELECTION-SCREEN .
          ENDIF.
        ELSE.
          MESSAGE 'No Data Found' TYPE 'I' DISPLAY LIKE 'E'.
          SUBMIT ZDELIVERY_DETAILS VIA SELECTION-SCREEN .
        ENDIF.
      ELSE.
        MESSAGE 'No Data Found' TYPE 'I' DISPLAY LIKE 'E'.
        SUBMIT ZDELIVERY_DETAILS VIA SELECTION-SCREEN .
      ENDIF.
    ELSE.
      MESSAGE 'Please Enter Lessthen One Year Date' TYPE 'I' DISPLAY LIKE 'E'.
      SUBMIT ZDELIVERY_DETAILS VIA SELECTION-SCREEN .
    ENDIF.
  ELSE.
    MESSAGE 'Please Enter Sales Office And Date Fields' TYPE 'I' DISPLAY LIKE 'E'.
    SUBMIT ZDELIVERY_DETAILS VIA SELECTION-SCREEN .
  ENDIF.

ENDFORM.                    " GET_DAT
*&---------------------------------------------------------------------*
*&      Form  READ_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM READ_DATA .

  LOOP AT IT_VBAP  INTO WA_VBAP.

    READ TABLE IT_VBAK INTO WA_VBAK WITH KEY VBELN = WA_VBAP-VBELN.
    READ TABLE IT_VBFA INTO WA_VBFA WITH KEY VBELV = WA_VBAP-VBELN POSNN = WA_VBAP-POSNR .
    READ TABLE IT_KNA1 INTO WA_KNA1 WITH KEY KUNNR = WA_VBAK-KUNNR.
    READ TABLE IT_T005U INTO WA_T005U WITH KEY LAND1 = WA_KNA1-LAND1 BLAND = WA_KNA1-REGIO .
    LOOP AT IT_VBFA INTO WA_VBFA WHERE VBELV EQ WA_VBAP-VBELN AND POSNN EQ WA_VBAP-POSNR . .
      LOOP AT IT_VBRP INTO WA_VBRP WHERE VBELN EQ WA_VBFA-VBELN AND POSNR EQ WA_VBFA-POSNV.
        READ TABLE IT_VBRK INTO WA_VBRK WITH KEY VBELN = WA_VBRP-VBELN .

        WA_FINAL-VBELN = WA_VBAK-VBELN.
        WA_FINAL-AUDAT = WA_VBAK-AUDAT.
        WA_FINAL-BSTNK = WA_VBAK-BSTNK.
        WA_FINAL-NETWR = WA_VBAP-NETWR .
        WA_FINAL-KWMENG = WA_VBAP-KWMENG. "Sale Order Quantity.
        WA_FINAL-INV_Q = WA_VBRP-FKIMG .
        WA_FINAL-INV_A = WA_VBRP-NETWR .
        WA_FINAL-SAL_Q = WA_VBAP-KWMENG .
        WA_FINAL-SAL_A = WA_VBAP-NETWR .
        WA_FINAL-ITEM = WA_VBAP-POSNR .
        WA_FINAL-VBELN1 = WA_VBRK-VBELN.
        WA_FINAL-FKDAT = WA_VBRK-FKDAT.
        WA_FINAL-KUNNR = WA_VBAK-KUNNR.
        WA_FINAL-NAME1 = WA_KNA1-NAME1.
        WA_FINAL-BEZEI = WA_T005U-BEZEI.
        WA_FINAL-WERKS = WA_VBAK-VKBUR.
        WA_FINAL-MATNR = WA_VBAP-MATNR.
        WA_FINAL-ARKTX = WA_VBAP-ARKTX.
        WA_FINAL-KWMENG = WA_VBAP-KWMENG.
        WA_FINAL-D_O_D = WA_VBRK-DATE_OF_DELIVERY.
        WA_FINAL-REMARKS = WA_VBRK-REMARKS.


        LOOP AT IT_FINAL1 INTO WA_FINAL1 WHERE VBELN = WA_FINAL-VBELN AND MATNR = WA_FINAL-MATNR AND WERKS = WA_FINAL-WERKS .
          TEM_QUN = WA_FINAL1-INV_Q + TEM_QUN .
        ENDLOOP.

        IF TEM_QUN IS INITIAL .
          WA_FINAL-FKIMG = WA_VBRP-FKIMG .
          BAL_QUN = WA_FINAL-KWMENG - WA_FINAL-FKIMG .
          BAL_AMT = WA_FINAL-NETWR / WA_FINAL-KWMENG .
          WA_FINAL-BAL_Q = BAL_QUN .

          IF BAL_AMT <> 0.
            WA_FINAL-BAL_A = BAL_AMT * BAL_QUN .
          ELSE .
            WA_FINAL-BAL_A = '-' .
          ENDIF.

        ELSEIF TEM_QUN IS NOT INITIAL.

        if WA_VBRP-FKIMG = WA_FINAL-KWMENG.  "added on 10/6
          WA_FINAL-FKIMG = WA_VBRP-FKIMG .
          "TEM_QUN1 = WA_FINAL-KWMENG - TEM_QUN .
          BAL_QUN = WA_FINAL-KWMENG - WA_FINAL-FKIMG .
          "BAL_QUN = TEM_QUN1 - WA_FINAL-FKIMG .
          BAL_AMT = WA_FINAL-NETWR / WA_FINAL-KWMENG .
          WA_FINAL-BAL_Q = BAL_QUN .

          IF BAL_AMT <> 0.
            WA_FINAL-BAL_A = BAL_AMT * BAL_QUN .
          ELSE.
            WA_FINAL-BAL_A = '-' .
          ENDIF.
ENDIF.
 if WA_VBRP-FKIMG <> WA_FINAL-KWMENG .
          WA_FINAL-FKIMG = WA_VBRP-FKIMG .
          TEM_QUN1 = WA_FINAL-KWMENG - TEM_QUN .
          BAL_QUN = TEM_QUN1 - WA_FINAL-FKIMG .
          BAL_AMT = WA_FINAL-NETWR / WA_FINAL-KWMENG .
          WA_FINAL-BAL_Q = BAL_QUN .

          IF BAL_AMT <> 0.
            WA_FINAL-BAL_A = BAL_AMT * BAL_QUN .
          ELSE.
            WA_FINAL-BAL_A = '-' .
          ENDIF.
          endif.
        ENDIF.

        IF WA_FINAL-AUDAT IS NOT INITIAL AND WA_FINAL-FKDAT IS NOT INITIAL.

          IF WA_FINAL-AUDAT < WA_FINAL-FKDAT.
            CALL FUNCTION 'FIMA_DAYS_AND_MONTHS_AND_YEARS'
              EXPORTING
                I_DATE_FROM    = WA_FINAL-AUDAT
*               I_KEY_DAY_FROM =
                I_DATE_TO      = WA_FINAL-FKDAT
*               I_KEY_DAY_TO   =
*               I_FLG_SEPARATE = ' '
              IMPORTING
                E_DAYS         = DAYS
*               E_MONTHS       =
*               E_YEARS        =
              .

            WA_FINAL-DAYS =  DAYS .
          ENDIF.

          IF WA_FINAL-AUDAT > WA_FINAL-FKDAT.
            WA_FINAL-DAYS = '-'.
          ENDIF.

          IF WA_FINAL-AUDAT = WA_FINAL-FKDAT.
            WA_FINAL-DAYS = 0.
          ENDIF.

*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Billed To Delivery Date-------------------------------
          IF WA_FINAL-D_O_D IS NOT INITIAL AND WA_FINAL-FKDAT <= WA_FINAL-D_O_D.
            CALL FUNCTION 'FIMA_DAYS_AND_MONTHS_AND_YEARS'
              EXPORTING
                I_DATE_FROM    = WA_FINAL-FKDAT
*               I_KEY_DAY_FROM =
                I_DATE_TO      = WA_FINAL-D_O_D
*               I_KEY_DAY_TO   =
*               I_FLG_SEPARATE = ' '
              IMPORTING
                E_DAYS         = BTDD
*               E_MONTHS       =
*               E_YEARS        =
              .
            WA_FINAL-BTDD = BTDD .
          ELSE.
            WA_FINAL-BTDD = '-' .
          ENDIF.

*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Order To Delivery Date---------------------------------

          IF WA_FINAL-D_O_D IS NOT INITIAL AND WA_FINAL-AUDAT <= WA_FINAL-D_O_D .
            CALL FUNCTION 'FIMA_DAYS_AND_MONTHS_AND_YEARS'
              EXPORTING
                I_DATE_FROM    = WA_FINAL-AUDAT
*               I_KEY_DAY_FROM =
                I_DATE_TO      = WA_FINAL-D_O_D
*               I_KEY_DAY_TO   =
*               I_FLG_SEPARATE = ' '
              IMPORTING
                E_DAYS         = OTDD
*               E_MONTHS       =
*               E_YEARS        =
              .
            WA_FINAL-OTDD = OTDD .
          ELSE.
            WA_FINAL-OTDD = '-' .
            WA_FINAL-BTDD = '-' .
          ENDIF.

        ELSE.
          WA_FINAL-OTDD = '-' .
          WA_FINAL-BTDD = '-' .
        ENDIF.

        SHIFT WA_FINAL-KUNNR LEFT DELETING LEADING '0' .
        SHIFT WA_FINAL-MATNR LEFT DELETING LEADING '0' .
        SHIFT WA_FINAL-VBELN1 LEFT DELETING LEADING '0' .
        SHIFT WA_FINAL-VBELN LEFT DELETING LEADING '0' .

        IF WA_FINAL-VBELN1 IS NOT INITIAL.
          APPEND: WA_FINAL TO IT_FINAL .
          APPEND: WA_FINAL TO IT_FINAL1 .
          FLAG = 'X' .
        ENDIF.

        CLEAR: WA_FINAL ,  WA_VBRK , WA_VBRP , OTDD , BTDD , DAYS , BAL_AMT , BAL_QUN  , TEM_QUN ,TEM_QUN1.
      ENDLOOP.
    ENDLOOP.

    IF FLAG <> 'X'.

      WA_FINAL-VBELN = WA_VBAK-VBELN.
      WA_FINAL-AUDAT = WA_VBAK-AUDAT.
      WA_FINAL-BSTNK = WA_VBAK-BSTNK.
      WA_FINAL-SAL_Q = WA_VBAP-KWMENG .
      WA_FINAL-SAL_A = WA_VBAP-NETWR .
      WA_FINAL-ITEM  = WA_VBAP-POSNR .
      WA_FINAL-KUNNR = WA_VBAK-KUNNR.
      WA_FINAL-NAME1 = WA_KNA1-NAME1.
      WA_FINAL-BEZEI = WA_T005U-BEZEI.
      WA_FINAL-WERKS = WA_VBAK-VKBUR.
      WA_FINAL-MATNR = WA_VBAP-MATNR.
      WA_FINAL-ARKTX = WA_VBAP-ARKTX.
      WA_FINAL-KWMENG = WA_VBAP-KWMENG.
      WA_FINAL-BAL_Q = WA_VBAP-KWMENG .
      WA_FINAL-BAL_A = WA_VBAP-NETWR .
      WA_FINAL-OTDD = '-' .
      WA_FINAL-BTDD = '-' .

      SHIFT WA_FINAL-VBELN LEFT DELETING LEADING '0' .
      SHIFT WA_FINAL-KUNNR LEFT DELETING LEADING '0'.
      SHIFT WA_FINAL-MATNR LEFT DELETING LEADING '0' .
      APPEND: WA_FINAL TO IT_FINAL .
      CLEAR: WA_FINAL .

    ENDIF.

    CLEAR: WA_VBFA  , WA_VBAK , WA_FINAL , WA_KNA1 , WA_T005U , FLAG  , WA_VBRP , WA_VBRK .
  ENDLOOP.

  SORT IT_FINAL BY VBELN ITEM .

*  APPEND LINES OF IT_FINAL TO IT_FINAL1 .
*  DELETE ADJACENT DUPLICATES FROM IT_FINAL1 COMPARING VBELN VBELN1 MATNR   .
*  LOOP AT IT_FINAL1 INTO WA_FINAL1 .
*    LOOP AT  IT_FINAL INTO WA_FINAL WHERE VBELN = WA_FINAL1-VBELN AND MATNR = WA_FINAL1-MATNR .
*      BAL_QUN = WA_FINAL-BAL_Q .
*    ENDLOOP.
*    READ TABLE IT_VBAP INTO WA_VBAP WITH KEY VBELN = WA_FINAL1-VBELN MATNR = WA_FINAL1-MATNR.
*    IF WA_VBAP-KWMENG = BAL_QUN.
*      UPDATE IT_FINAL SET BAL_Q = 0 BAL_A = 0 WHERE VBELN = WA_VBAP-VBELN AND MATNR = WA_VBAP-MATNR .
*    ENDIF.
*  ENDLOOP.

  IF IT_FINAL IS INITIAL.
    MESSAGE 'No Data Found' TYPE 'I' DISPLAY LIKE 'E'.
    SUBMIT ZDELIVERY_DETAILS VIA SELECTION-SCREEN .
  ENDIF.

ENDFORM.                    " READ_DATA
*&---------------------------------------------------------------------*
*&      Form  FIELDCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FIELDCAT .

  WA_FIELDCAT-ROW_POS = '1'.
  POS = POS + 1  .
  WA_FIELDCAT-COL_POS = POS.
  WA_FIELDCAT-FIELDNAME = 'WERKS'.
  WA_FIELDCAT-TABNAME = 'WA_FINAL' .
  WA_FIELDCAT-SELTEXT_M = 'Sales Office'.
  APPEND: WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR: WA_FIELDCAT.

  WA_FIELDCAT-ROW_POS = '1'.
  POS = POS + 1  .
  WA_FIELDCAT-COL_POS = POS.
  WA_FIELDCAT-FIELDNAME = 'VBELN'.
  WA_FIELDCAT-TABNAME = 'WA_FINAL' .
  WA_FIELDCAT-SELTEXT_M = 'Sales Document'.
  APPEND: WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR: WA_FIELDCAT.

  WA_FIELDCAT-ROW_POS = '1'.
  POS = POS + 1  .
  WA_FIELDCAT-COL_POS = POS.
  WA_FIELDCAT-FIELDNAME = 'AUDAT'.
  WA_FIELDCAT-TABNAME = 'WA_FINAL' .
  WA_FIELDCAT-SELTEXT_M = 'Document Date'.
  APPEND: WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR: WA_FIELDCAT.

  WA_FIELDCAT-ROW_POS = '1'.
  POS = POS + 1  .
  WA_FIELDCAT-COL_POS = POS.
  WA_FIELDCAT-FIELDNAME = 'KUNNR'.
  WA_FIELDCAT-TABNAME = 'WA_FINAL' .
  WA_FIELDCAT-SELTEXT_M = 'Customer No'.
  APPEND: WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR: WA_FIELDCAT.

  WA_FIELDCAT-ROW_POS = '1'.
  POS = POS + 1  .
  WA_FIELDCAT-COL_POS = POS.
  WA_FIELDCAT-FIELDNAME = 'NAME1'.
  WA_FIELDCAT-TABNAME = 'WA_FINAL' .
  WA_FIELDCAT-SELTEXT_M = 'Customer Name'.
  APPEND: WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR: WA_FIELDCAT.

  WA_FIELDCAT-ROW_POS = '1'.
  POS = POS + 1  .
  WA_FIELDCAT-COL_POS = POS.
  WA_FIELDCAT-FIELDNAME = 'BEZEI'.
  WA_FIELDCAT-TABNAME = 'WA_FINAL' .
  WA_FIELDCAT-SELTEXT_M = 'Region'.
  APPEND: WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR: WA_FIELDCAT.

  WA_FIELDCAT-ROW_POS = '1'.
  POS = POS + 1  .
  WA_FIELDCAT-COL_POS = POS.
  WA_FIELDCAT-FIELDNAME = 'ITEM'.
  WA_FIELDCAT-TABNAME = 'WA_FINAL' .
  WA_FIELDCAT-SELTEXT_M = 'Item'.
  APPEND: WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR: WA_FIELDCAT.

  WA_FIELDCAT-ROW_POS = '1'.
  POS = POS + 1  .
  WA_FIELDCAT-COL_POS = POS.
  WA_FIELDCAT-FIELDNAME = 'MATNR'.
  WA_FIELDCAT-TABNAME = 'WA_FINAL' .
  WA_FIELDCAT-SELTEXT_M = 'Material No'.
  APPEND: WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR: WA_FIELDCAT.

  WA_FIELDCAT-ROW_POS = '1'.
  POS = POS + 1  .
  WA_FIELDCAT-COL_POS = POS.
  WA_FIELDCAT-FIELDNAME = 'ARKTX'.
  WA_FIELDCAT-TABNAME = 'WA_FINAL' .
  WA_FIELDCAT-SELTEXT_M = 'Material Description'.
  APPEND: WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR: WA_FIELDCAT.

  "Added By PR@$@TH On 14/02/2019
  WA_FIELDCAT-ROW_POS = '1'.
  POS = POS + 1  .
  WA_FIELDCAT-COL_POS = POS.
  WA_FIELDCAT-FIELDNAME = 'BSTNK'.
  WA_FIELDCAT-TABNAME = 'WA_FINAL' .
  WA_FIELDCAT-SELTEXT_M = 'Order From'."PO Number'.
  APPEND: WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR: WA_FIELDCAT.
  "End 14/02/2019

  WA_FIELDCAT-ROW_POS = '1'.
  POS = POS + 1  .
  WA_FIELDCAT-COL_POS = POS.
  WA_FIELDCAT-FIELDNAME = 'SAL_Q'.
  WA_FIELDCAT-TABNAME = 'WA_FINAL' .
  WA_FIELDCAT-SELTEXT_M = 'Sale Order Quantity'.
  APPEND: WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR: WA_FIELDCAT.

  WA_FIELDCAT-ROW_POS = '1'.
  POS = POS + 1  .
  WA_FIELDCAT-COL_POS = POS.
  WA_FIELDCAT-FIELDNAME = 'SAL_A'.
  WA_FIELDCAT-TABNAME = 'WA_FINAL' .
  WA_FIELDCAT-SELTEXT_M = 'Sale Order Value'.
  APPEND: WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR: WA_FIELDCAT.

  WA_FIELDCAT-ROW_POS = '1'.
  POS = POS + 1  .
  WA_FIELDCAT-COL_POS = POS.
  WA_FIELDCAT-FIELDNAME = 'VBELN1'.
  WA_FIELDCAT-TABNAME = 'WA_FINAL' .
  WA_FIELDCAT-SELTEXT_M = 'Invoice Document'.
  APPEND: WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR: WA_FIELDCAT.

  WA_FIELDCAT-ROW_POS = '1'.
  POS = POS + 1  .
  WA_FIELDCAT-COL_POS = POS.
  WA_FIELDCAT-FIELDNAME = 'FKDAT'.
  WA_FIELDCAT-TABNAME = 'WA_FINAL' .
  WA_FIELDCAT-SELTEXT_M = 'Invoice Date'.
  APPEND: WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR: WA_FIELDCAT.

  WA_FIELDCAT-ROW_POS = '1'.
  POS = POS + 1  .
  WA_FIELDCAT-COL_POS = POS.
  WA_FIELDCAT-FIELDNAME = 'INV_Q'.
  WA_FIELDCAT-TABNAME = 'WA_FINAL' .
  WA_FIELDCAT-SELTEXT_M = 'Invoice Quantity'.
  APPEND: WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR: WA_FIELDCAT.

  WA_FIELDCAT-ROW_POS = '1'.
  POS = POS + 1  .
  WA_FIELDCAT-COL_POS = POS.
  WA_FIELDCAT-FIELDNAME = 'INV_A'.
  WA_FIELDCAT-TABNAME = 'WA_FINAL' .
  WA_FIELDCAT-SELTEXT_M = 'Invoice Value'.
  APPEND: WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR: WA_FIELDCAT.

  WA_FIELDCAT-ROW_POS = '1'.
  POS = POS + 1  .
  WA_FIELDCAT-COL_POS = POS.
  WA_FIELDCAT-FIELDNAME = 'BAL_Q'.
  WA_FIELDCAT-TABNAME = 'WA_FINAL' .
  WA_FIELDCAT-SELTEXT_M = 'Remaining Quantity'.
  APPEND: WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR: WA_FIELDCAT.

  WA_FIELDCAT-ROW_POS = '1'.
  POS = POS + 1  .
  WA_FIELDCAT-COL_POS = POS.
  WA_FIELDCAT-FIELDNAME = 'BAL_A'.
  WA_FIELDCAT-TABNAME = 'WA_FINAL' .
  WA_FIELDCAT-SELTEXT_M = 'Remaining Value'.
  APPEND: WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR: WA_FIELDCAT.

  WA_FIELDCAT-ROW_POS = '1'.
  POS = POS + 1  .
  WA_FIELDCAT-COL_POS = POS.
  WA_FIELDCAT-FIELDNAME = 'D_O_D'.
  WA_FIELDCAT-TABNAME = 'WA_FINAL' .
  WA_FIELDCAT-SELTEXT_M = 'Date Of Delivery'.
  APPEND: WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR: WA_FIELDCAT.

  WA_FIELDCAT-ROW_POS = '1'.
  POS = POS + 1  .
  WA_FIELDCAT-COL_POS = POS.
  WA_FIELDCAT-FIELDNAME = 'REMARKS'.
  WA_FIELDCAT-TABNAME = 'WA_FINAL' .
  WA_FIELDCAT-SELTEXT_M = 'Remarks'.
  APPEND: WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR: WA_FIELDCAT.

*  WA_FIELDCAT-ROW_POS = '1'.
*  POS = POS + 1  .
*  WA_FIELDCAT-COL_POS = POS.
*  WA_FIELDCAT-FIELDNAME = 'DAYS'.
*  WA_FIELDCAT-TABNAME = 'WA_FINAL' .
*  WA_FIELDCAT-SELTEXT_M = 'Total Days'.
*  APPEND: WA_FIELDCAT TO IT_FIELDCAT.
*  CLEAR: WA_FIELDCAT.

  WA_FIELDCAT-ROW_POS = '1'.
  POS = POS + 1  .
  WA_FIELDCAT-COL_POS = POS.
  WA_FIELDCAT-FIELDNAME = 'OTDD'.
  WA_FIELDCAT-TABNAME = 'WA_FINAL' .
  WA_FIELDCAT-SELTEXT_M = 'Order vs POD'.
  APPEND: WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR: WA_FIELDCAT.

  WA_FIELDCAT-ROW_POS = '1'.
  POS = POS + 1  .
  WA_FIELDCAT-COL_POS = POS.
  WA_FIELDCAT-FIELDNAME = 'BTDD'.
  WA_FIELDCAT-TABNAME = 'WA_FINAL' .
  WA_FIELDCAT-SELTEXT_M = 'Invoice vs POD'.
  APPEND: WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR: WA_FIELDCAT.


ENDFORM.                    " FIELDCAT
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM DISPLAY_ALV .

  WA_HEADER-TYP = 'H'.
  WA_HEADER-KEY = ''.
  WA_HEADER-INFO = 'Customer Delivery Details'.
  APPEND: WA_HEADER TO IT_HEADER.
  CLEAR: WA_HEADER.

  IF S_WERKS-LOW IS NOT INITIAL AND S_WERKS-HIGH IS NOT INITIAL.

    CONCATENATE S_WERKS-LOW ' To ' S_WERKS-HIGH INTO CON_WERKS.
    WA_HEADER-TYP = 'S'.
    WA_HEADER-KEY = 'Sales Office : '.
    WA_HEADER-INFO = CON_WERKS.
    APPEND: WA_HEADER TO IT_HEADER.
    CLEAR: WA_HEADER.

  ELSE.
    READ TABLE IT_T001W INTO WA_T001W WITH KEY WERKS = S_WERKS-LOW .
    CONCATENATE S_WERKS+3(4) '  (' WA_T001W-NAME1 ')' INTO SAL_OFC .
    WA_HEADER-TYP = 'S'.
    WA_HEADER-KEY = 'Sales Office : '.
    WA_HEADER-INFO = SAL_OFC.
    APPEND: WA_HEADER TO IT_HEADER.
    CLEAR: WA_HEADER.

  ENDIF.

  IF S_AUDAT-LOW IS NOT INITIAL AND S_AUDAT-HIGH IS NOT INITIAL.

    CONCATENATE S_AUDAT-LOW+6(2) '.' S_AUDAT-LOW+4(2) '.' S_AUDAT-LOW(4) INTO LOW_DT.
    CONCATENATE S_AUDAT-HIGH+6(2) '.' S_AUDAT-HIGH+4(2) '.' S_AUDAT-HIGH(4) INTO HIG_DT.
    CONCATENATE LOW_DT ' To ' HIG_DT INTO CON_AUDAT.
    WA_HEADER-TYP = 'S'.
    WA_HEADER-KEY = 'Date : '.
    WA_HEADER-INFO = CON_AUDAT.
    APPEND: WA_HEADER TO IT_HEADER.
    CLEAR: WA_HEADER.

  ELSE.

    CONCATENATE S_AUDAT-LOW+6(2) '.' S_AUDAT-LOW+4(2) '.' S_AUDAT-LOW(4) INTO LOW_DT.

    WA_HEADER-TYP = 'S'.
    WA_HEADER-KEY = 'Date : '.
    WA_HEADER-INFO = LOW_DT.
    APPEND: WA_HEADER TO IT_HEADER.
    CLEAR: WA_HEADER.

  ENDIF.

  IF S_KUNNR IS NOT INITIAL.

    IF S_KUNNR-LOW IS NOT INITIAL AND S_KUNNR-HIGH IS NOT INITIAL.

      CONCATENATE S_KUNNR-LOW ' To ' S_KUNNR-HIGH INTO CON_KUNNR.
      WA_HEADER-TYP = 'S'.
      WA_HEADER-KEY = 'Customer : '.
      WA_HEADER-INFO = CON_KUNNR.
      APPEND: WA_HEADER TO IT_HEADER.
      CLEAR: WA_HEADER.

    ELSE.
      S_KUNNR = S_KUNNR+3(10) .
      SHIFT S_KUNNR LEFT DELETING LEADING '0' .
      WA_HEADER-TYP = 'S'.
      WA_HEADER-KEY = 'Customer : '.
      WA_HEADER-INFO = S_KUNNR.
      APPEND: WA_HEADER TO IT_HEADER.
      CLEAR: WA_HEADER.

    ENDIF.

  ENDIF.

  WA_HEADER-TYP = 'S'.
  WA_HEADER-INFO = ' '.
  APPEND: WA_HEADER TO IT_HEADER.
  CLEAR: WA_HEADER.

  WA_LAYOUT-COLWIDTH_OPTIMIZE = 'X'.
  WA_LAYOUT-ZEBRA = 'X'.
  WA_LAYOUT-EXPAND_ALL = 'X'.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
   EXPORTING
*     I_INTERFACE_CHECK                 = ' '
*     I_BYPASSING_BUFFER                = ' '
*     I_BUFFER_ACTIVE                   = ' '
      I_CALLBACK_PROGRAM                = SY-REPID
*     I_CALLBACK_PF_STATUS_SET          = ' '
*     I_CALLBACK_USER_COMMAND           = ' '
      I_CALLBACK_TOP_OF_PAGE            = 'TOP_OF_PAGE'
*     I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*     I_CALLBACK_HTML_END_OF_LIST       = ' '
*     I_STRUCTURE_NAME                  =
*     I_BACKGROUND_ID                   = ' '
*     I_GRID_TITLE                      =
*     I_GRID_SETTINGS                   =
      IS_LAYOUT                         = WA_LAYOUT
      IT_FIELDCAT                       = IT_FIELDCAT
*     IT_EXCLUDING                      =
*     IT_SPECIAL_GROUPS                 =
*     IT_SORT                           =
*     IT_FILTER                         =
*     IS_SEL_HIDE                       =
*     I_DEFAULT                         = 'X'
*     I_SAVE                            = 'A'
*     IS_VARIANT                        =
*     IT_EVENTS                         =
*     IT_EVENT_EXIT                     =
*     IS_PRINT                          =
*     IS_REPREP_ID                      =
*     I_SCREEN_START_COLUMN             = 0
*     I_SCREEN_START_LINE               = 0
*     I_SCREEN_END_COLUMN               = 0
*     I_SCREEN_END_LINE                 = 0
*     I_HTML_HEIGHT_TOP                 = 0
*     I_HTML_HEIGHT_END                 = 0
*     IT_ALV_GRAPHICS                   =
*     IT_HYPERLINK                      =
*     IT_ADD_FIELDCAT                   =
*     IT_EXCEPT_QINFO                   =
*     IR_SALV_FULLSCREEN_ADAPTER        =
*   IMPORTING
*     E_EXIT_CAUSED_BY_CALLER           =
*     ES_EXIT_CAUSED_BY_USER            =
    TABLES
      T_OUTTAB                          = IT_FINAL
   EXCEPTIONS
     PROGRAM_ERROR                     = 1
     OTHERS                            = 2  .

  IF SY-SUBRC <> 0.
* Implement suitable error handling here
  ENDIF.

ENDFORM.                    " DISPLAY_ALV

*&---------------------------------------------------------------------*
*&      Form  TOP_OF_PAGE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM TOP_OF_PAGE.

  CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
    EXPORTING
      IT_LIST_COMMENTARY = IT_HEADER
      I_LOGO             = 'ZSHEENLAC'
*     I_END_OF_LIST_GRID =
*     I_ALV_FORM         =
    .
ENDFORM.                    "TOP_OF_PAGE
